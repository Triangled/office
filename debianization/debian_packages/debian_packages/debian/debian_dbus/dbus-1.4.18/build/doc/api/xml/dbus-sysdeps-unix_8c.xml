<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="dbus-sysdeps-unix_8c" kind="file">
    <compoundname>dbus-sysdeps-unix.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-sysdeps_8h" local="yes">dbus-sysdeps.h</includes>
    <includes refid="dbus-sysdeps-unix_8h" local="yes">dbus-sysdeps-unix.h</includes>
    <includes refid="dbus-threads_8h" local="yes">dbus-threads.h</includes>
    <includes refid="dbus-protocol_8h" local="yes">dbus-protocol.h</includes>
    <includes refid="dbus-transport_8h" local="yes">dbus-transport.h</includes>
    <includes refid="dbus-string_8h" local="yes">dbus-string.h</includes>
    <includes refid="dbus-userdb_8h" local="yes">dbus-userdb.h</includes>
    <includes refid="dbus-list_8h" local="yes">dbus-list.h</includes>
    <includes refid="dbus-credentials_8h" local="yes">dbus-credentials.h</includes>
    <includes refid="dbus-nonce_8h" local="yes">dbus-nonce.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">sys/un.h</includes>
    <includes local="no">pwd.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">locale.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/wait.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">netdb.h</includes>
    <includes local="no">grp.h</includes>
    <includes refid="sd-daemon_8h" local="yes">sd-daemon.h</includes>
    <incdepgraph>
      <node id="3191">
        <label>sys/stat.h</label>
      </node>
      <node id="3195">
        <label>grp.h</label>
      </node>
      <node id="3164">
        <label>stdarg.h</label>
      </node>
      <node id="3186">
        <label>sys/un.h</label>
      </node>
      <node id="3193">
        <label>netinet/in.h</label>
      </node>
      <node id="3166">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3167" relation="include">
        </childnode>
      </node>
      <node id="3167">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
      </node>
      <node id="3196">
        <label>sd-daemon.h</label>
        <link refid="sd-daemon_8h_source"/>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3197" relation="include">
        </childnode>
      </node>
      <node id="3179">
        <label>stdlib.h</label>
      </node>
      <node id="3159">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
      </node>
      <node id="3153">
        <label>dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
      </node>
      <node id="3183">
        <label>fcntl.h</label>
      </node>
      <node id="3177">
        <label>dbus-nonce.h</label>
        <link refid="dbus-nonce_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
      </node>
      <node id="3169">
        <label>dbus-transport.h</label>
        <link refid="dbus-transport_8h_source"/>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3173" relation="include">
        </childnode>
      </node>
      <node id="3176">
        <label>dbus-credentials.h</label>
        <link refid="dbus-credentials_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
      </node>
      <node id="3156">
        <label>stddef.h</label>
      </node>
      <node id="3194">
        <label>netdb.h</label>
      </node>
      <node id="3162">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
      </node>
      <node id="3158">
        <label>dbus/dbus-arch-deps.h</label>
      </node>
      <node id="3178">
        <label>sys/types.h</label>
      </node>
      <node id="3155">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="3165">
        <label>string.h</label>
      </node>
      <node id="3161">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="3152" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3162" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3165" relation="include">
        </childnode>
        <childnode refid="3164" relation="include">
        </childnode>
      </node>
      <node id="3181">
        <label>unistd.h</label>
      </node>
      <node id="3180">
        <label>signal.h</label>
      </node>
      <node id="3174">
        <label>dbus-userdb.h</label>
        <link refid="dbus-userdb_8h_source"/>
        <childnode refid="3168" relation="include">
        </childnode>
      </node>
      <node id="3157">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
      </node>
      <node id="3172">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="3163">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3164" relation="include">
        </childnode>
      </node>
      <node id="3151">
        <label>dbus-sysdeps-unix.c</label>
        <link refid="dbus-sysdeps-unix.c"/>
        <childnode refid="3152" relation="include">
        </childnode>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3168" relation="include">
        </childnode>
        <childnode refid="3167" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3174" relation="include">
        </childnode>
        <childnode refid="3175" relation="include">
        </childnode>
        <childnode refid="3176" relation="include">
        </childnode>
        <childnode refid="3177" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3165" relation="include">
        </childnode>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3182" relation="include">
        </childnode>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3185" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
        <childnode refid="3194" relation="include">
        </childnode>
        <childnode refid="3195" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
      </node>
      <node id="3168">
        <label>dbus-sysdeps-unix.h</label>
        <link refid="dbus-sysdeps-unix_8h_source"/>
        <childnode refid="3161" relation="include">
        </childnode>
      </node>
      <node id="3173">
        <label>dbus/dbus-address.h</label>
        <link refid="dbus-address_8h_source"/>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
      </node>
      <node id="3188">
        <label>time.h</label>
      </node>
      <node id="3154">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
      </node>
      <node id="3192">
        <label>sys/wait.h</label>
      </node>
      <node id="3160">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="3190">
        <label>sys/time.h</label>
      </node>
      <node id="3171">
        <label>dbus/dbus-message.h</label>
        <link refid="dbus-message_8h_source"/>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3164" relation="include">
        </childnode>
      </node>
      <node id="3170">
        <label>dbus/dbus-connection.h</label>
        <link refid="dbus-connection_8h_source"/>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3171" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
      </node>
      <node id="3184">
        <label>sys/socket.h</label>
      </node>
      <node id="3187">
        <label>pwd.h</label>
      </node>
      <node id="3152">
        <label>config.h</label>
      </node>
      <node id="3182">
        <label>stdio.h</label>
      </node>
      <node id="3189">
        <label>locale.h</label>
      </node>
      <node id="3175">
        <label>dbus-list.h</label>
        <link refid="dbus-list_8h_source"/>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
      </node>
      <node id="3197">
        <label>inttypes.h</label>
      </node>
      <node id="3185">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a36fa9b2e726512bc17a7a6d3e39002be" prot="public" static="no">
        <name>O_BINARY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="82" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1abe581892df09df05b21fee09e1584659" prot="public" static="no">
        <name>AI_ADDRCONFIG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="86" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1ad13b589f7a5983f1db722eb6137411cd" prot="public" static="no">
        <name>socklen_t</name>
        <initializer>int</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="90" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1ae0c49dcd1add7eb501c4de5d528eb33d" prot="public" static="no">
        <name>_DBUS_MAX_SUN_PATH_LENGTH</name>
        <initializer>99</initializer>
        <briefdescription>
<para>Maximum length of the path to a UNIX domain socket, sockaddr_un::sun_path member. </para>        </briefdescription>
        <detaileddescription>
<para>POSIX requires that all systems support at least 100 bytes here, including the nul termination. We use 99 for the max value to allow for the nul.</para><para>We could probably also do sizeof (addr.sun_path) but this way we are the same on all platforms which is probably a good idea. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="760"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a5df38c677104658963501aa1e2a88e60" prot="public" static="no">
        <name>NANOSECONDS_PER_SECOND</name>
        <initializer>1000000000</initializer>
        <briefdescription>
<para>nanoseconds in a second </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2628" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a8a708413d6171e7d86056793abe2cd1a" prot="public" static="no">
        <name>MICROSECONDS_PER_SECOND</name>
        <initializer>1000000</initializer>
        <briefdescription>
<para>microseconds in a second </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2630" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1afc22ab01ad31ee9dfebcfcb61faaa63a" prot="public" static="no">
        <name>MILLISECONDS_PER_SECOND</name>
        <initializer>1000</initializer>
        <briefdescription>
<para>milliseconds in a second </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2632" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a969e0c6129a50134006fe4b380965cb2" prot="public" static="no">
        <name>NANOSECONDS_PER_MILLISECOND</name>
        <initializer>1000000</initializer>
        <briefdescription>
<para>nanoseconds in a millisecond </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2634" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1accdb221fb01839e3045fa54993ede027" prot="public" static="no">
        <name>MICROSECONDS_PER_MILLISECOND</name>
        <initializer>1000</initializer>
        <briefdescription>
<para>microseconds in a millisecond </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2636" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a2469c53816dc077f9deefb187ffcabf3" prot="public" static="no">
        <name>READ_END</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3178"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a2efd706d915e621e5e18b3f0803c4ed2" prot="public" static="no">
        <name>WRITE_END</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3179"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a1434c3569f733696beecf02236871d9b" prot="public" static="no">
        <name>DBUS_UNIX_STANDARD_SESSION_SERVICEDIR</name>
        <initializer>&quot;/dbus-1/services&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3473" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-unix_8c_1a1c0ebec8b3a765132e112091e52539bc" prot="public" static="no">
        <name>DBUS_UNIX_STANDARD_SYSTEM_SERVICEDIR</name>
        <initializer>&quot;/dbus-1/system-services&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3474" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3474" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1ae14ffbf85063f5c5e8aa77ee97f28a2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_open_socket</definition>
        <argsstring>(int *fd_p, int domain, int type, int protocol, DBusError *error)</argsstring>
        <name>_dbus_open_socket</name>
        <param>
          <type>int *</type>
          <declname>fd_p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="131" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="126" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaf0c64c612b8d45429515d14849f81a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_open_tcp_socket</definition>
        <argsstring>(int *fd, DBusError *error)</argsstring>
        <name>_dbus_open_tcp_socket</name>
        <param>
          <type>int *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Socket interface. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000068"><xreftitle>Todo</xreftitle><xrefdescription><para>Use for the file descriptors a struct<itemizedlist>
<listitem><para>struct DBusSocket{ int d; }; - instead of int to get type-safety which will be checked by the compiler.</para></listitem></itemizedlist>
</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="170" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga281d8697f33900cc1da984ea5a24aca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_open_unix_socket</definition>
        <argsstring>(int *fd, DBusError *error)</argsstring>
        <name>_dbus_open_unix_socket</name>
        <param>
          <type>int *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Opens a UNIX domain socket (as in the socket() call). </para>        </briefdescription>
        <detaileddescription>
<para>Does not bind the socket.</para><para>This will set FD_CLOEXEC for the socket returned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for socket descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for an error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="187" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="185" bodyend="189"/>
        <referencedby refid="group__DBusSysdepsUnix_1ga0228009923a105d50a0849b24acbc31e" compoundref="dbus-sysdeps-unix_8c" startline="792" endline="873">_dbus_connect_unix_socket</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1ga2cd48fe3d7aa14d0d3c7813cdddb3f74" compoundref="dbus-sysdeps-unix_8c" startline="926" endline="1057">_dbus_listen_unix_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_close_socket</definition>
        <argsstring>(int fd, DBusError *error)</argsstring>
        <name>_dbus_close_socket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Closes a socket. </para>        </briefdescription>
        <detaileddescription>
<para>Should not be used on non-socket file descriptors or handles.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the socket </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for an error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="202" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="200" bodyend="204"/>
        <referencedby refid="group__DBusServerSocket_1ga047d05c427e9a1fc5823fdfdcec5c5f6" compoundref="dbus-server-socket_8c" startline="388" endline="508">_dbus_server_new_for_tcp_socket</referencedby>
        <referencedby refid="group__DBusServerUnix_1gaec00cdf4977b9bd33621df684406a779" compoundref="dbus-server-unix_8c" startline="54" endline="214">_dbus_server_listen_platform_specific</referencedby>
        <referencedby refid="group__DBusServerUnix_1ga21ce093bda6ce6c7f94d1d894b6b4358" compoundref="dbus-server-unix_8c" startline="225" endline="298">_dbus_server_new_for_domain_socket</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" compoundref="dbus-spawn-win_8c" startline="163" endline="245">_dbus_babysitter_unref</referencedby>
        <referencedby refid="group__DBusTransportSocket_1ga166dbf1d38f06321025408167d214860" compoundref="dbus-transport-socket_8c" startline="1305" endline="1373">_dbus_transport_new_for_tcp_socket</referencedby>
        <referencedby refid="group__DBusTransportUnix_1gada3df30a229b4d29ccf30af83bd88fcc" compoundref="dbus-transport-unix_8c" startline="54" endline="108">_dbus_transport_new_for_domain_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_read_socket</definition>
        <argsstring>(int fd, DBusString *buffer, int count)</argsstring>
        <name>_dbus_read_socket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member">_dbus_read()</ref>, but only works on sockets so is available on Windows. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the socket </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>string to append data to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>max amount of data to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes appended to the string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="219" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="216" bodyend="221"/>
        <referencedby refid="group__DBusSysdeps_1ga14aa692ac7e9aab777b9f565c4b8933b" compoundref="dbus-sysdeps-unix_8c" startline="272" endline="392">_dbus_read_socket_with_unix_fds</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" compoundref="dbus-sysdeps-win_8c" startline="1695" endline="1717">_dbus_read_credentials_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write_socket</definition>
        <argsstring>(int fd, const DBusString *buffer, int start, int len)</argsstring>
        <name>_dbus_write_socket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member">_dbus_write()</ref>, but only supports sockets and is thus available on Windows. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to write data from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>the first byte in the buffer to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes to try to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="238" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="234" bodyend="257"/>
        <referencedby refid="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" compoundref="dbus-sysdeps-win_8c" startline="1618" endline="1674">_dbus_send_credentials_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga14aa692ac7e9aab777b9f565c4b8933b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_read_socket_with_unix_fds</definition>
        <argsstring>(int fd, DBusString *buffer, int count, int *fds, int *n_fds)</argsstring>
        <name>_dbus_read_socket_with_unix_fds</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_fds</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member">_dbus_read_socket()</ref> but also tries to read unix fds from the socket. </para>        </briefdescription>
        <detaileddescription>
<para>When there are more fds to read than space in the array passed this function will fail with ENOSPC.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the socket </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>string to append data to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>max amount of data to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fds</parametername>
</parameternamelist>
<parameterdescription>
<para>array to place read file descriptors in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_fds</parametername>
</parameternamelist>
<parameterdescription>
<para>on input space in fds array, on output how many fds actually got read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes appended to string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="276" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="272" bodyend="392"/>
        <references refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" compoundref="dbus-sysdeps-unix_8c" startline="216" endline="221">_dbus_read_socket</references>
        <references refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" compoundref="dbus-string_8c" startline="864" endline="875">_dbus_string_lengthen</references>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="489" endline="500">_dbus_string_get_data_len</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="906" endline="913">_dbus_string_set_length</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" compoundref="dbus-sysdeps-unix_8c" startline="2776" endline="2788">_dbus_fd_set_close_on_exec</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1456" endline="1484">_dbus_verbose_bytes_of_string</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gabcdf774b69a022d5d6771cd127a41bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write_socket_with_unix_fds</definition>
        <argsstring>(int fd, const DBusString *buffer, int start, int len, const int *fds, int n_fds)</argsstring>
        <name>_dbus_write_socket_with_unix_fds</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_fds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="400" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="395" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaadbce91e0ff63d2a7895bae1639fba81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write_socket_with_unix_fds_two</definition>
        <argsstring>(int fd, const DBusString *buffer1, int start1, int len1, const DBusString *buffer2, int start2, int len2, const int *fds, int n_fds)</argsstring>
        <name>_dbus_write_socket_with_unix_fds_two</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len2</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_fds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="424" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="416" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write_socket_two</definition>
        <argsstring>(int fd, const DBusString *buffer1, int start1, int len1, const DBusString *buffer2, int start2, int len2)</argsstring>
        <name>_dbus_write_socket_two</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len2</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" kindref="member">_dbus_write_two()</ref> but only works on sockets and is thus available on Windows. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer1</parametername>
</parameternamelist>
<parameterdescription>
<para>first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start1</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte to write in first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len1</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write from first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer2</parametername>
</parameternamelist>
<parameterdescription>
<para>second buffer, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start2</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte to write in second buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write in second buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>total bytes written from both buffers, or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="515" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="508" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gabc28993ee2ec72dc86f3656a26f18430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_socket_is_invalid</definition>
        <argsstring>(int fd)</argsstring>
        <name>_dbus_socket_is_invalid</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="566" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_read</definition>
        <argsstring>(int fd, DBusString *buffer, int count)</argsstring>
        <name>_dbus_read</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Thin wrapper around the read() system call that appends the data it reads to the <ref refid="structDBusString" kindref="compound">DBusString</ref> buffer. </para>        </briefdescription>
        <detaileddescription>
<para>It appends up to the given count, and returns the same value and same errno as read(). The only exception is that <ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member">_dbus_read()</ref> handles EINTR for you. Also, <ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member">_dbus_read()</ref> can return ENOMEM, even though regular UNIX read doesn&apos;t.</para><para>Unlike <ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member">_dbus_read_socket()</ref>, <ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member">_dbus_read()</ref> is not available on Windows.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to append data to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of data to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes read or -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="590" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="587" bodyend="634"/>
        <references refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" compoundref="dbus-string_8c" startline="864" endline="875">_dbus_string_lengthen</references>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="489" endline="500">_dbus_string_get_data_len</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="906" endline="913">_dbus_string_set_length</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1456" endline="1484">_dbus_verbose_bytes_of_string</references>
        <referencedby refid="group__DBusFile_1gad22d468e789139c87f7f4bb97cadf448" compoundref="dbus-file-unix_8c" startline="55" endline="151">_dbus_file_get_contents</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" compoundref="dbus-sysdeps-unix_8c" startline="216" endline="221">_dbus_read_socket</referencedby>
        <referencedby refid="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" compoundref="dbus-sysdeps-unix_8c" startline="2691" endline="2726">_dbus_generate_random_bytes</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga3551d425aba3d92e652b8809fdfe9339" compoundref="dbus-sysdeps-util-unix_8c" startline="1102" endline="1166">_dbus_command_for_pid</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write</definition>
        <argsstring>(int fd, const DBusString *buffer, int start, int len)</argsstring>
        <name>_dbus_write</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Thin wrapper around the write() system call that writes a part of a <ref refid="structDBusString" kindref="compound">DBusString</ref> and handles EINTR for you. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to write data from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>the first byte in the buffer to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes to try to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="651" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="647" bodyend="670"/>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1456" endline="1484">_dbus_verbose_bytes_of_string</references>
        <referencedby refid="group__DBusFile_1ga2adba123fde18c9d1d9eaf1347980d57" compoundref="dbus-file-unix_8c" startline="164" endline="317">_dbus_string_save_to_file</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" compoundref="dbus-sysdeps-unix_8c" startline="234" endline="257">_dbus_write_socket</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" compoundref="dbus-sysdeps-unix_8c" startline="693" endline="758">_dbus_write_two</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write_two</definition>
        <argsstring>(int fd, const DBusString *buffer1, int start1, int len1, const DBusString *buffer2, int start2, int len2)</argsstring>
        <name>_dbus_write_two</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len2</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member">_dbus_write()</ref> but will use writev() if possible to write both buffers in sequence. </para>        </briefdescription>
        <detaileddescription>
<para>The return value is the number of bytes written in the first buffer, plus the number written in the second. If the first buffer is written successfully and an error occurs writing the second, the number of bytes in the first is returned (i.e. the error is ignored), on systems that don&apos;t have writev. Handles EINTR for you. The second buffer may be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer1</parametername>
</parameternamelist>
<parameterdescription>
<para>first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start1</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte to write in first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len1</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write from first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer2</parametername>
</parameternamelist>
<parameterdescription>
<para>second buffer, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start2</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte to write in second buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write in second buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>total bytes written from both buffers, or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="700" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="693" bodyend="758"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" compoundref="dbus-sysdeps-unix_8c" startline="647" endline="670">_dbus_write</references>
        <referencedby refid="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" compoundref="dbus-sysdeps-unix_8c" startline="508" endline="562">_dbus_write_socket_two</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga0228009923a105d50a0849b24acbc31e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_connect_unix_socket</definition>
        <argsstring>(const char *path, dbus_bool_t abstract, DBusError *error)</argsstring>
        <name>_dbus_connect_unix_socket</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>abstract</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a socket and connects it to the UNIX domain socket at the given path. </para>        </briefdescription>
        <detaileddescription>
<para>The connection fd is returned, and is set up as nonblocking.</para><para>Uses abstract sockets instead of filesystem-linked sockets if requested (it&apos;s possible only on Linux; see &quot;man 7 unix&quot; on Linux). On non-Linux abstract socket usage always fails.</para><para>This will set FD_CLOEXEC for the socket returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to UNIX domain socket </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abstract</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> to use abstract namespace </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>connection file descriptor or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="795" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="792" bodyend="873"/>
        <references refid="group__DBusSysdepsUnix_1ga281d8697f33900cc1da984ea5a24aca8" compoundref="dbus-sysdeps-unix_8c" startline="185" endline="189">_dbus_open_unix_socket</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="420">dbus_set_error</references>
        <references refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" compoundref="dbus-protocol_8h" startline="362">DBUS_ERROR_BAD_ADDRESS</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="2798" endline="2815">_dbus_close</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" compoundref="dbus-protocol_8h" startline="364">DBUS_ERROR_NOT_SUPPORTED</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="909" endline="999">_dbus_error_from_errno</references>
        <referencedby refid="group__DBusTransportUnix_1gada3df30a229b4d29ccf30af83bd88fcc" compoundref="dbus-transport-unix_8c" startline="54" endline="108">_dbus_transport_new_for_domain_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1ae46203c75377d4b62e233c9acc93a100" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_set_local_creds</definition>
        <argsstring>(int fd, dbus_bool_t on)</argsstring>
        <name>_dbus_set_local_creds</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Enables or disables the reception of credentials on the given socket during the next message transmission. </para>        </briefdescription>
        <detaileddescription>
<para>This is only effective if the #LOCAL_CREDS system feature exists, in which case the other side of the connection does not have to do anything special to send the credentials.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>socket on which to change the #LOCAL_CREDS flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>on</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to enable or disable the #LOCAL_CREDS flag. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="886" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="885" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga2cd48fe3d7aa14d0d3c7813cdddb3f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_listen_unix_socket</definition>
        <argsstring>(const char *path, dbus_bool_t abstract, DBusError *error)</argsstring>
        <name>_dbus_listen_unix_socket</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>abstract</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a socket and binds it to the given path, then listens on the socket. </para>        </briefdescription>
        <detaileddescription>
<para>The socket is set to be nonblocking.</para><para>Uses abstract sockets instead of filesystem-linked sockets if requested (it&apos;s possible only on Linux; see &quot;man 7 unix&quot; on Linux). On non-Linux abstract socket usage always fails.</para><para>This will set FD_CLOEXEC for the socket returned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the socket name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abstract</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> to use abstract namespace </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for errors </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the listening file descriptor or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="929" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="926" bodyend="1057"/>
        <references refid="group__DBusSysdepsUnix_1ga281d8697f33900cc1da984ea5a24aca8" compoundref="dbus-sysdeps-unix_8c" startline="185" endline="189">_dbus_open_unix_socket</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="420">dbus_set_error</references>
        <references refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" compoundref="dbus-protocol_8h" startline="362">DBUS_ERROR_BAD_ADDRESS</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="2798" endline="2815">_dbus_close</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" compoundref="dbus-protocol_8h" startline="364">DBUS_ERROR_NOT_SUPPORTED</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="244" endline="261">_dbus_warn</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="909" endline="999">_dbus_error_from_errno</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusServerUnix_1ga21ce093bda6ce6c7f94d1d894b6b4358" compoundref="dbus-server-unix_8c" startline="225" endline="298">_dbus_server_new_for_domain_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga71aa508a7790c6d1c9c0159defcdd4a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_listen_systemd_sockets</definition>
        <argsstring>(int **fds, DBusError *error)</argsstring>
        <name>_dbus_listen_systemd_sockets</name>
        <param>
          <type>int **</type>
          <declname>fds</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Acquires one or more sockets passed in from systemd. </para>        </briefdescription>
        <detaileddescription>
<para>The sockets are set to be nonblocking.</para><para>This will set FD_CLOEXEC for the sockets returned.</para><para>fds the file descriptors <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for errors </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of file descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1072" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1070" bodyend="1156"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="420">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="909" endline="999">_dbus_error_from_errno</references>
        <references refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" compoundref="dbus-protocol_8h" startline="362">DBUS_ERROR_BAD_ADDRESS</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" compoundref="dbus-protocol_8h" startline="352">DBUS_ERROR_NO_MEMORY</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="2798" endline="2815">_dbus_close</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="629" endline="668">dbus_free</references>
        <referencedby refid="group__DBusServerUnix_1gaec00cdf4977b9bd33621df684406a779" compoundref="dbus-server-unix_8c" startline="54" endline="214">_dbus_server_listen_platform_specific</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaa3adf90f6e47d30eeacf0a27d1a09ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_connect_tcp_socket</definition>
        <argsstring>(const char *host, const char *port, const char *family, DBusError *error)</argsstring>
        <name>_dbus_connect_tcp_socket</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>family</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a socket and connects to a socket at the given host and port. </para>        </briefdescription>
        <detaileddescription>
<para>The connection fd is returned, and is set up as nonblocking.</para><para>This will set FD_CLOEXEC for the socket returned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>the host name to connect to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>the port to connect to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>the address family to listen on, NULL for all </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>connection file descriptor or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1176" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1172" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga8eaa78f8111092e35aa482d908f5e4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_connect_tcp_socket_with_nonce</definition>
        <argsstring>(const char *host, const char *port, const char *family, const char *noncefile, DBusError *error)</argsstring>
        <name>_dbus_connect_tcp_socket_with_nonce</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>family</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>noncefile</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1186" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1181" bodyend="1277"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_listen_tcp_socket</definition>
        <argsstring>(const char *host, const char *port, const char *family, DBusString *retport, int **fds_p, DBusError *error)</argsstring>
        <name>_dbus_listen_tcp_socket</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>family</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>retport</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fds_p</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a socket and binds it to the given path, then listens on the socket. </para>        </briefdescription>
        <detaileddescription>
<para>The socket is set to be nonblocking. In case of port=0 a random free port is used and returned in the port parameter. If inaddr_any is specified, the hostname is ignored.</para><para>This will set FD_CLOEXEC for the socket returned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>the host name to listen on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>the port to listen on, if zero a free port will be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>the address family to listen on, NULL for all </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>retport</parametername>
</parameternamelist>
<parameterdescription>
<para>string to return the actual port listened on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fds_p</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store returned file descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for errors </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of listening file descriptors or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1302" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1296" bodyend="1483"/>
        <referencedby refid="group__DBusServerSocket_1ga047d05c427e9a1fc5823fdfdcec5c5f6" compoundref="dbus-server-socket_8c" startline="388" endline="508">_dbus_server_new_for_tcp_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1a22430ef0ef16edd6d5f288aed4b6b9e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t write_credentials_byte</definition>
        <argsstring>(int server_fd, DBusError *error)</argsstring>
        <name>write_credentials_byte</name>
        <param>
          <type>int</type>
          <declname>server_fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1488" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1486" bodyend="1553"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_read_credentials_socket</definition>
        <argsstring>(int client_fd, DBusCredentials *credentials, DBusError *error)</argsstring>
        <name>_dbus_read_credentials_socket</name>
        <param>
          <type>int</type>
          <declname>client_fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref> *</type>
          <declname>credentials</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Reads a single byte which must be nul (an error occurs otherwise), and reads unix credentials if available. </para>        </briefdescription>
        <detaileddescription>
<para>Clears the credentials object, then adds pid/uid if available, so any previous credentials stored in the object are lost.</para><para>Return value indicates whether a byte was read, not whether we got valid credentials. On some systems, such as Linux, reading/writing the byte isn&apos;t actually required, but we do it anyway just to avoid multiple codepaths.</para><para>Fails if no byte is available, so you must select() first.</para><para>The point of the byte is that on some systems we have to use sendmsg()/recvmsg() to transmit credentials.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client_fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the client file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>object to add client credentials to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1580" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1577" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_send_credentials_socket</definition>
        <argsstring>(int server_fd, DBusError *error)</argsstring>
        <name>_dbus_send_credentials_socket</name>
        <param>
          <type>int</type>
          <declname>server_fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sends a single nul byte with our UNIX credentials as ancillary data. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the data was successfully written. On systems that don&apos;t support sending credentials, just writes a byte, doesn&apos;t send any credentials. On some systems, such as Linux, reading/writing the byte isn&apos;t actually required, but we do it anyway just to avoid multiple codepaths.</para><para>Fails if no byte can be written, so you must select() first.</para><para>The point of the byte is that on some systems we have to use sendmsg()/recvmsg() to transmit credentials.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server_fd</parametername>
</parameternamelist>
<parameterdescription>
<para>file descriptor for connection to server </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte was sent </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1821" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1819" bodyend="1828"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga687f4393a365474ec16f02e40c418cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_accept</definition>
        <argsstring>(int listen_fd)</argsstring>
        <name>_dbus_accept</name>
        <param>
          <type>int</type>
          <declname>listen_fd</declname>
        </param>
        <briefdescription>
<para>Accepts a connection on a listening socket. </para>        </briefdescription>
        <detaileddescription>
<para>Handles EINTR for you.</para><para>This will enable FD_CLOEXEC for the returned socket.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listen_fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the listen file descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the connection fd of the client, or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1841" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1840" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga8e16f75e361d9fed43223f69baf0e2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_check_dir_is_private_to_user</definition>
        <argsstring>(DBusString *dir, DBusError *error)</argsstring>
        <name>_dbus_check_dir_is_private_to_user</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Checks to make sure the given directory is private to the user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the directory </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1892" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1891" bodyend="1917"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1a850ebb3d2b81aa416a27b6781e76e917" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t fill_user_info_from_passwd</definition>
        <argsstring>(struct passwd *p, DBusUserInfo *info, DBusError *error)</argsstring>
        <name>fill_user_info_from_passwd</name>
        <param>
          <type>struct passwd *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structDBusUserInfo" kindref="compound">DBusUserInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1923" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1920" bodyend="1940"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1ad1c6a2746488f32010fd92c7fafaac17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t fill_user_info</definition>
        <argsstring>(DBusUserInfo *info, dbus_uid_t uid, const DBusString *username, DBusError *error)</argsstring>
        <name>fill_user_info</name>
        <param>
          <type><ref refid="structDBusUserInfo" kindref="compound">DBusUserInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member">dbus_uid_t</ref></type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>username</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="1947" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="1943" bodyend="2183"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga95e9deb9dd2d76aa3a64fdac555d956d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_user_info_fill</definition>
        <argsstring>(DBusUserInfo *info, const DBusString *username, DBusError *error)</argsstring>
        <name>_dbus_user_info_fill</name>
        <param>
          <type><ref refid="structDBusUserInfo" kindref="compound">DBusUserInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>username</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Gets user info for the given username. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>user info object to initialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>the username </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2197" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2194" bodyend="2200"/>
        <references refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" compoundref="dbus-sysdeps_8h" startline="107">DBUS_UID_UNSET</references>
        <referencedby refid="group__DBusInternalsUtils_1ga959372f7d7cdea35ffbac3b78e29a1b0" compoundref="dbus-userdb_8c" startline="128" endline="220">_dbus_user_database_lookup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1gafcc2fbcde2c72f499f04fa43d97dfcec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_user_info_fill_uid</definition>
        <argsstring>(DBusUserInfo *info, dbus_uid_t uid, DBusError *error)</argsstring>
        <name>_dbus_user_info_fill_uid</name>
        <param>
          <type><ref refid="structDBusUserInfo" kindref="compound">DBusUserInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member">dbus_uid_t</ref></type>
          <declname>uid</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Gets user info for the given user ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>user info object to initialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uid</parametername>
</parameternamelist>
<parameterdescription>
<para>the user ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2214" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2211" bodyend="2217"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusInternalsUtils_1ga959372f7d7cdea35ffbac3b78e29a1b0" compoundref="dbus-userdb_8c" startline="128" endline="220">_dbus_user_database_lookup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_credentials_add_from_current_process</definition>
        <argsstring>(DBusCredentials *credentials)</argsstring>
        <name>_dbus_credentials_add_from_current_process</name>
        <param>
          <type><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref> *</type>
          <declname>credentials</declname>
        </param>
        <briefdescription>
<para>Adds the credentials of the current process to the passed-in credentials object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>credentials to add to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory; does not properly roll back on failure, so only some credentials may have been added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2228" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2227" bodyend="2243"/>
        <referencedby refid="group__DBusCredentials_1ga63b2f88e91962510ed947bae98270818" compoundref="dbus-credentials_8c" startline="93" endline="108">_dbus_credentials_new_from_current_process</referencedby>
        <referencedby refid="group__DBusKeyring_1ga6dad1720cf97ca6017c39330bec8d09f" compoundref="dbus-keyring_8c" startline="709" endline="838">_dbus_keyring_new_for_credentials</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" compoundref="dbus-sysdeps-win_8c" startline="1695" endline="1717">_dbus_read_credentials_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_append_user_from_current_process</definition>
        <argsstring>(DBusString *str)</argsstring>
        <name>_dbus_append_user_from_current_process</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Append to the string the identity we would like to have when we authenticate, on UNIX this is the current process UID and on Windows something else, probably a Windows SID string. </para>        </briefdescription>
        <detaileddescription>
<para>No escaping is required, that is done in <ref refid="dbus-auth_8c_source" kindref="compound">dbus-auth.c</ref>. The username here need not be anything human-readable, it can be the machine-readable form i.e. a user id.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to append to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2258" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2257" bodyend="2261"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></type>
        <definition>dbus_pid_t _dbus_getpid</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_getpid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets our process ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>process ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2269" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2268" bodyend="2271"/>
        <referencedby refid="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" compoundref="dbus-sysdeps-unix_8c" startline="2227" endline="2243">_dbus_credentials_add_from_current_process</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga82cb5dfe162480ad15faddcf74ea0617" compoundref="dbus-sysdeps-util-unix_8c" startline="466" endline="501">_dbus_system_logv</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" compoundref="dbus-sysdeps-win_8c" startline="741" endline="744">_dbus_pid_for_log</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1gae7701063932951bdd8a7df0dcacb3bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member">dbus_uid_t</ref></type>
        <definition>dbus_uid_t _dbus_getuid</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_getuid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets our UID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>process UID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2278" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2277" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga50438942c6e9f4027ea555a09d758ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member">dbus_uid_t</ref></type>
        <definition>dbus_uid_t _dbus_geteuid</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_geteuid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets our effective UID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>process effective UID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2287" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2286" bodyend="2289"/>
        <referencedby refid="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" compoundref="dbus-sysdeps-unix_8c" startline="2227" endline="2243">_dbus_credentials_add_from_current_process</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" compoundref="dbus-sysdeps-unix_8c" startline="2257" endline="2261">_dbus_append_user_from_current_process</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga849177164bc5e73435104f57c631ed7e" compoundref="dbus-sysdeps-util-unix_8c" startline="994" endline="997">_dbus_unix_user_is_process_owner</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long _dbus_pid_for_log</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_pid_for_log</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The only reason this is separate from <ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid()</ref> is to allow it on Windows for logging but not for other purposes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>process ID to put in log messages </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2299" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2298" bodyend="2301"/>
        <referencedby refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="272" endline="291">_dbus_warn_check_failed</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga9912f2c86e49357eb9729729dd46f50d" compoundref="dbus-internals_8c" startline="889" endline="901">_dbus_real_assert</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga3de125028afc39ab16e6585add8ad181" compoundref="dbus-internals_8c" startline="914" endline="921">_dbus_real_assert_not_reached</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" compoundref="dbus-sysdeps_8c" startline="80" endline="96">_dbus_abort</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga5a1854d99394d4593522ff5f2ca380d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_parse_uid</definition>
        <argsstring>(const DBusString *uid_str, dbus_uid_t *uid)</argsstring>
        <name>_dbus_parse_uid</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>uid_str</declname>
        </param>
        <param>
          <type><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member">dbus_uid_t</ref> *</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
<para>Gets a UID from a UID string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uid_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the UID in string form </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uid</parametername>
</parameternamelist>
<parameterdescription>
<para>UID to fill in </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if successfully filled in UID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2313" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2311" bodyend="2341"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusString_1ga93e22894a5e2e0d65c179c7d36a8b1c8" compoundref="dbus-sysdeps_8c" startline="513" endline="537">_dbus_string_parse_int</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dbus_int32_t</type>
        <definition>dbus_int32_t _dbus_atomic_inc</definition>
        <argsstring>(DBusAtomic *atomic)</argsstring>
        <name>_dbus_atomic_inc</name>
        <param>
          <type><ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref> *</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
<para>Atomically increments an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer to increment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value before incrementing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2355" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2354" bodyend="2366"/>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1237" endline="1396">_dbus_connection_new_for_transport</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga7151f75b5d2308ec80cfe893aba72aa1" compoundref="dbus-connection_8c" startline="1406" endline="1416">_dbus_connection_ref_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1gae34751e15f114217e5ad10c663e2ef2e" compoundref="dbus-connection_8c" startline="2626" endline="2634">dbus_connection_ref</referencedby>
        <referencedby refid="group__DBusConnection_1gae00f581e5487408cb294bf71826aff86" compoundref="dbus-connection_8c" startline="5406" endline="5443">dbus_connection_add_filter</referencedby>
        <referencedby refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" compoundref="dbus-memory_8c" startline="452" endline="490">dbus_malloc</referencedby>
        <referencedby refid="group__DBusMemory_1gaa02722b030a091f6c14c4cb11a593623" compoundref="dbus-memory_8c" startline="505" endline="543">dbus_malloc0</referencedby>
        <referencedby refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" compoundref="dbus-memory_8c" startline="556" endline="620">dbus_realloc</referencedby>
        <referencedby refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" compoundref="dbus-message_8c" startline="1443" endline="1511">dbus_message_copy</referencedby>
        <referencedby refid="group__DBusMessage_1ga834035e4817acd64adc8ca584bdf3982" compoundref="dbus-message_8c" startline="1522" endline="1540">dbus_message_ref</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga3f2300d7a768783bc2fae0991bcc55df" compoundref="dbus-pending-call_8c" startline="94" endline="144">_dbus_pending_call_new_unlocked</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga9d8987da3747604d370ffec2c5e1e10a" compoundref="dbus-pending-call_8c" startline="375" endline="380">_dbus_pending_call_ref_unlocked</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga334f6c6621583e15fdaf1a3f93dd2221" compoundref="dbus-pending-call_8c" startline="552" endline="559">dbus_pending_call_ref</referencedby>
        <referencedby refid="group__DBusServerInternals_1gaacfb3d29553f205b362c850cfda02fd9" compoundref="dbus-server_8c" startline="97" endline="170">_dbus_server_init_base</referencedby>
        <referencedby refid="group__DBusServerInternals_1ga987e9bf42ab4e4cededa8e8f65c54e2e" compoundref="dbus-server_8c" startline="443" endline="457">_dbus_server_ref_unlocked</referencedby>
        <referencedby refid="group__DBusServer_1gabe1c14264ef6bf3e5fe446ab9bf8b913" compoundref="dbus-server_8c" startline="682" endline="708">dbus_server_ref</referencedby>
        <referencedby refid="group__DBusServer_1ga95d0b6cb9795b4919aa08f667807c555" compoundref="dbus-server_8c" startline="719" endline="751">dbus_server_unref</referencedby>
        <referencedby refid="group__DBusServer_1ga1ff306fbaaa608306b0619ba5c0029a1" compoundref="dbus-server_8c" startline="762" endline="790">dbus_server_disconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dbus_int32_t</type>
        <definition>dbus_int32_t _dbus_atomic_dec</definition>
        <argsstring>(DBusAtomic *atomic)</argsstring>
        <name>_dbus_atomic_dec</name>
        <param>
          <type><ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref> *</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
<para>Atomically decrement an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer to decrement </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value before decrementing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2376" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2375" bodyend="2388"/>
        <referencedby refid="group__DBusConnectionInternals_1ga9ffbd9aa4f07cb30d92887e956a9fd43" compoundref="dbus-connection_8c" startline="1425" endline="1437">_dbus_connection_unref_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1ga6385ff09bc108238c4429e7c195dab25" compoundref="dbus-connection_8c" startline="2762" endline="2785">dbus_connection_unref</referencedby>
        <referencedby refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="629" endline="668">dbus_free</referencedby>
        <referencedby refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1550" endline="1567">dbus_message_unref</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga26f09beed0dd6323cca0452abf344567" compoundref="dbus-pending-call_8c" startline="434" endline="445">_dbus_pending_call_unref_and_unlock</referencedby>
        <referencedby refid="group__DBusPendingCall_1gadaba15a74ba4925cdef52d4791cd3147" compoundref="dbus-pending-call_8c" startline="568" endline="578">dbus_pending_call_unref</referencedby>
        <referencedby refid="group__DBusServerInternals_1ga6e1d0b379c98b0d59ebd19dc9b8a2dbe" compoundref="dbus-server_8c" startline="465" endline="488">_dbus_server_unref_unlocked</referencedby>
        <referencedby refid="group__DBusServer_1gabe1c14264ef6bf3e5fe446ab9bf8b913" compoundref="dbus-server_8c" startline="682" endline="708">dbus_server_ref</referencedby>
        <referencedby refid="group__DBusServer_1ga95d0b6cb9795b4919aa08f667807c555" compoundref="dbus-server_8c" startline="719" endline="751">dbus_server_unref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dbus_int32_t</type>
        <definition>dbus_int32_t _dbus_atomic_get</definition>
        <argsstring>(DBusAtomic *atomic)</argsstring>
        <name>_dbus_atomic_get</name>
        <param>
          <type><ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref> *</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
<para>Atomically get the value of an integer. </para>        </briefdescription>
        <detaileddescription>
<para>It may change at any time thereafter, so this is mostly only useful for assertions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value at this moment </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2399" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2398" bodyend="2411"/>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2118" endline="2132">_dbus_connection_close_if_only_one_ref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_poll</definition>
        <argsstring>(DBusPollFD *fds, int n_fds, int timeout_milliseconds)</argsstring>
        <name>_dbus_poll</name>
        <param>
          <type><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref> *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_fds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_milliseconds</declname>
        </param>
        <briefdescription>
<para>Wrapper for poll(). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fds</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptors to poll </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_fds</parametername>
</parameternamelist>
<parameterdescription>
<para>number of descriptors in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_milliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout or -1 for infinite </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>numbers of fds with revents, or &lt;0 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2436" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2433" bodyend="2522"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga4e3cbe529fc3e7984ed6553672e085f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_get_current_time</definition>
        <argsstring>(long *tv_sec, long *tv_usec)</argsstring>
        <name>_dbus_get_current_time</name>
        <param>
          <type>long *</type>
          <declname>tv_sec</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>tv_usec</declname>
        </param>
        <briefdescription>
<para>Get current time, as in gettimeofday(). </para>        </briefdescription>
        <detaileddescription>
<para>Use the monotonic clock if available, to avoid problems when the system time changes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv_sec</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for number of seconds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv_usec</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for number of microseconds (thousandths) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2534" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2532" bodyend="2553"/>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga08c2922335845e5c857e88399436b9ba" compoundref="dbus-internals_8c" startline="594" endline="603">_dbus_generate_uuid</referencedby>
        <referencedby refid="group__DBusSysdeps_1gafb4454c18ee8e5bcc20dbccd93e1d9ba" compoundref="dbus-sysdeps_8c" startline="803" endline="829">_dbus_generate_pseudorandom_bytes_buffer</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaa47156dedbe573ee9b213d1fd3f7bb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_create_directory</definition>
        <argsstring>(const DBusString *filename, DBusError *error)</argsstring>
        <name>_dbus_create_directory</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a directory; succeeds if the directory is created or already existed. </para>        </briefdescription>
        <detaileddescription>
<para>directory interface</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>directory filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>initialized error object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2566" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2564" bodyend="2585"/>
        <referencedby refid="group__DBusKeyring_1ga6dad1720cf97ca6017c39330bec8d09f" compoundref="dbus-keyring_8c" startline="709" endline="838">_dbus_keyring_new_for_credentials</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_concat_dir_and_file</definition>
        <argsstring>(DBusString *dir, const DBusString *next_component)</argsstring>
        <name>_dbus_concat_dir_and_file</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>next_component</declname>
        </param>
        <briefdescription>
<para>Appends the given filename to the given directory. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000061"><xreftitle>Todo</xreftitle><xrefdescription><para>it might be cute to collapse multiple &apos;/&apos; such as &quot;foo//&quot; concat &quot;//bar&quot;</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>next_component</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2600" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2598" bodyend="2625"/>
        <referencedby refid="group__DBusKeyring_1ga6dad1720cf97ca6017c39330bec8d09f" compoundref="dbus-keyring_8c" startline="709" endline="838">_dbus_keyring_new_for_credentials</referencedby>
        <referencedby refid="group__DBusServerUnix_1gaec00cdf4977b9bd33621df684406a779" compoundref="dbus-server-unix_8c" startline="54" endline="214">_dbus_server_listen_platform_specific</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga079d34a9d90759e6b3ebebab424c696e" compoundref="dbus-sysdeps-unix_8c" startline="3647" endline="3717">_dbus_get_standard_session_servicedirs</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" compoundref="dbus-sysdeps-unix_8c" startline="3844" endline="3905">_dbus_append_keyring_directory_for_credentials</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga9393ded03e3b9812e4ba99b437ea992d" compoundref="dbus-sysdeps_8c" startline="265" endline="376">_dbus_split_paths_and_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga1153b4669819148af6b3f6f2b7c9183a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_sleep_milliseconds</definition>
        <argsstring>(int milliseconds)</argsstring>
        <name>_dbus_sleep_milliseconds</name>
        <param>
          <type>int</type>
          <declname>milliseconds</declname>
        </param>
        <briefdescription>
<para>Sleeps the given number of milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>milliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>number of milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2644" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2643" bodyend="2661"/>
        <referencedby refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" compoundref="dbus-sysdeps_8c" startline="80" endline="96">_dbus_abort</referencedby>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1a3b9b20f5018c90c8de3e374256989dbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_generate_pseudorandom_bytes</definition>
        <argsstring>(DBusString *str, int n_bytes)</argsstring>
        <name>_dbus_generate_pseudorandom_bytes</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2666" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2664" bodyend="2680"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_generate_random_bytes</definition>
        <argsstring>(DBusString *str, int n_bytes)</argsstring>
        <name>_dbus_generate_random_bytes</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
<para>Generates the given number of random bytes, using the best mechanism we can come up with. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of random bytes to append to string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2693" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2691" bodyend="2726"/>
        <referencedby refid="group__DBusSysdeps_1gaa32f87746e9264b2425736043d02fad4" compoundref="dbus-sysdeps_8c" startline="838" endline="859">_dbus_generate_random_bytes_buffer</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga709ce349c6ee05263850444fb4e0177d" compoundref="dbus-sysdeps_8c" startline="870" endline="896">_dbus_generate_random_ascii</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga203e3257b50597a8fe7757c920474a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_exit</definition>
        <argsstring>(int code)</argsstring>
        <name>_dbus_exit</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Exit the process, returning the given value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>the exit code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2735" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2734" bodyend="2737"/>
        <referencedby refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" compoundref="dbus-sysdeps_8c" startline="80" endline="96">_dbus_abort</referencedby>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1a487a615e6c99df65e0ed72e963f97017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _dbus_strerror</definition>
        <argsstring>(int error_number)</argsstring>
        <name>_dbus_strerror</name>
        <param>
          <type>int</type>
          <declname>error_number</declname>
        </param>
        <briefdescription>
<para>A wrapper around strerror() because some platforms may be lame and not have strerror(). </para>        </briefdescription>
        <detaileddescription>
<para>Also, never returns NULL.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_number</parametername>
</parameternamelist>
<parameterdescription>
<para>errno. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error description. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2749" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2748" bodyend="2757"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6890d4cde3afec0bf274ca2af8c9e204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_disable_sigpipe</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_disable_sigpipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>signal (SIGPIPE, SIG_IGN); </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2764" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2763" bodyend="2766"/>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1237" endline="1396">_dbus_connection_new_for_transport</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_fd_set_close_on_exec</definition>
        <argsstring>(intptr_t fd)</argsstring>
        <name>_dbus_fd_set_close_on_exec</name>
        <param>
          <type>intptr_t</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Sets the file descriptor to be close on exec. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called for all file descriptors in D-Bus code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2777" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2776" bodyend="2788"/>
        <referencedby refid="group__DBusServerLaunchd_1ga5d09a40275e9a28d35ef3474875487a2" compoundref="dbus-server-launchd_8c" startline="64" endline="207">_dbus_server_new_for_launchd</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga14aa692ac7e9aab777b9f565c4b8933b" compoundref="dbus-sysdeps-unix_8c" startline="272" endline="392">_dbus_read_socket_with_unix_fds</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga687f4393a365474ec16f02e40c418cce" compoundref="dbus-sysdeps-unix_8c" startline="1840" endline="1880">_dbus_accept</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" compoundref="dbus-sysdeps-unix_8c" startline="2825" endline="2857">_dbus_dup</referencedby>
        <referencedby refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" compoundref="dbus-sysdeps-unix_8c" startline="2952" endline="3016">_dbus_full_duplex_pipe</referencedby>
        <referencedby refid="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" compoundref="dbus-sysdeps-win_8c" startline="1399" endline="1584">_dbus_listen_tcp_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_close</definition>
        <argsstring>(int fd, DBusError *error)</argsstring>
        <name>_dbus_close</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Closes a file descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2800" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2798" bodyend="2815"/>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="420">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="909" endline="999">_dbus_error_from_errno</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusFile_1gad22d468e789139c87f7f4bb97cadf448" compoundref="dbus-file-unix_8c" startline="55" endline="151">_dbus_file_get_contents</referencedby>
        <referencedby refid="group__DBusFile_1ga2adba123fde18c9d1d9eaf1347980d57" compoundref="dbus-file-unix_8c" startline="164" endline="317">_dbus_string_save_to_file</referencedby>
        <referencedby refid="group__DBusFile_1ga22665c6d5899c913e03930f90d144f46" compoundref="dbus-file-unix_8c" startline="353" endline="388">_dbus_create_file_exclusively</referencedby>
        <referencedby refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2514" endline="2611">dbus_message_iter_append_basic</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" compoundref="dbus-sysdeps-unix_8c" startline="200" endline="204">_dbus_close_socket</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1ga0228009923a105d50a0849b24acbc31e" compoundref="dbus-sysdeps-unix_8c" startline="792" endline="873">_dbus_connect_unix_socket</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1ga2cd48fe3d7aa14d0d3c7813cdddb3f74" compoundref="dbus-sysdeps-unix_8c" startline="926" endline="1057">_dbus_listen_unix_socket</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1ga71aa508a7790c6d1c9c0159defcdd4a6" compoundref="dbus-sysdeps-unix_8c" startline="1070" endline="1156">_dbus_listen_systemd_sockets</referencedby>
        <referencedby refid="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" compoundref="dbus-sysdeps-unix_8c" startline="1296" endline="1483">_dbus_listen_tcp_socket</referencedby>
        <referencedby refid="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" compoundref="dbus-sysdeps-unix_8c" startline="2691" endline="2726">_dbus_generate_random_bytes</referencedby>
        <referencedby refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" compoundref="dbus-sysdeps-unix_8c" startline="2952" endline="3016">_dbus_full_duplex_pipe</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga3551d425aba3d92e652b8809fdfe9339" compoundref="dbus-sysdeps-util-unix_8c" startline="1102" endline="1166">_dbus_command_for_pid</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_dup</definition>
        <argsstring>(int fd, DBusError *error)</argsstring>
        <name>_dbus_dup</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Duplicates a file descriptor. </para>        </briefdescription>
        <detaileddescription>
<para>Makes sure the fd returned is &gt;= 3 (i.e. avoids stdin/stdout/stderr). Sets O_CLOEXEC.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to duplicate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>duplicated file descriptor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2827" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2825" bodyend="2857"/>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="420">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="909" endline="999">_dbus_error_from_errno</references>
        <references refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" compoundref="dbus-sysdeps-unix_8c" startline="2776" endline="2788">_dbus_fd_set_close_on_exec</references>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="722" endline="928">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" compoundref="dbus-message_8c" startline="1443" endline="1511">dbus_message_copy</referencedby>
        <referencedby refid="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" compoundref="dbus-message_8c" startline="2153" endline="2185">dbus_message_iter_get_basic</referencedby>
        <referencedby refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2514" endline="2611">dbus_message_iter_append_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1ad04a2be8fb84fb56e785da42e779efff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_set_fd_nonblocking</definition>
        <argsstring>(int fd, DBusError *error)</argsstring>
        <name>_dbus_set_fd_nonblocking</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets a file descriptor to be nonblocking. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>address of error location. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2869" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2867" bodyend="2897"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga8646ab2ef727fcc862c7904113c88a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_print_backtrace</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_print_backtrace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>On GNU libc systems, print a crude backtrace to stderr. </para>        </briefdescription>
        <detaileddescription>
<para>On other systems, print &quot;no backtrace support&quot; and block for possible gdb attachment if an appropriate environment variable is set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2906" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2905" bodyend="2932"/>
        <referencedby refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" compoundref="dbus-sysdeps_8c" startline="80" endline="96">_dbus_abort</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_full_duplex_pipe</definition>
        <argsstring>(int *fd1, int *fd2, dbus_bool_t blocking, DBusError *error)</argsstring>
        <name>_dbus_full_duplex_pipe</name>
        <param>
          <type>int *</type>
          <declname>fd1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fd2</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>blocking</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a full-duplex pipe (as in socketpair()). </para>        </briefdescription>
        <detaileddescription>
<para>Sets both ends of the pipe nonblocking.</para><para>Marks both file descriptors as close-on-exec</para><para><xrefsect id="todo_1_todo000062"><xreftitle>Todo</xreftitle><xrefdescription><para>libdbus only uses this for the debug-pipe server, so in principle it could be in <ref refid="dbus-sysdeps-util_8c_source" kindref="compound">dbus-sysdeps-util.c</ref>, except that <ref refid="dbus-sysdeps-util_8c_source" kindref="compound">dbus-sysdeps-util.c</ref> isn&apos;t in libdbus when tests are enabled and the debug-pipe server is used.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd1</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for one end </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd2</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for the other end </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if pipe should be blocking </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure (if error is set) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="2956" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="2952" bodyend="3016"/>
        <referencedby refid="group__DBusInternalsUtils_1ga84c21bbcb2a673244f36616c5e053277" compoundref="dbus-spawn-win_8c" startline="619" endline="714">_dbus_spawn_async_with_babysitter</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaffaf8b5bb832c20a8ccb10f012920776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_printf_string_upper_bound</definition>
        <argsstring>(const char *format, va_list args)</argsstring>
        <name>_dbus_printf_string_upper_bound</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Measure the length of the given format string and arguments, not including the terminating nul. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>a printf-style format string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments for the format string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of the given format string and args, or -1 if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3029" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3027" bodyend="3088"/>
        <referencedby refid="group__DBusString_1ga8d794f292831d1a7edeb971b13a2c641" compoundref="dbus-string_8c" startline="1244" endline="1274">_dbus_string_append_printf_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _dbus_get_tmpdir</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_get_tmpdir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the temporary files directory by inspecting the environment variables TMPDIR, TMP, and TEMP in that order. </para>        </briefdescription>
        <detaileddescription>
<para>If none of those are set &quot;/tmp&quot; is returned</para><para><simplesect kind="return"><para>location of temp directory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3098" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3097" bodyend="3126"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1a7144b14759f41f9f211d52768001f4ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _read_subprocess_line_argv</definition>
        <argsstring>(const char *progpath, dbus_bool_t path_fallback, char *const *argv, DBusString *result, DBusError *error)</argsstring>
        <name>_read_subprocess_line_argv</name>
        <param>
          <type>const char *</type>
          <declname>progpath</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>path_fallback</declname>
        </param>
        <param>
          <type>char *const *</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Execute a subprocess, returning up to 1024 bytes of output into <computeroutput>result</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If successful, returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> and appends the output to <computeroutput>result</computeroutput>. If a failure happens, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and sets an error in <computeroutput>error</computeroutput>.</para><para><simplesect kind="note"><para>It&apos;s not an error if the subprocess terminates normally without writing any data to stdout. Verify the <computeroutput>result</computeroutput> length before and after this function call to cover this case.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>progname</parametername>
</parameternamelist>
<parameterdescription>
<para>initial path to exec (may or may not be absolute) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_fallback</parametername>
</parameternamelist>
<parameterdescription>
<para>if TRUE, search PATH for executable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL-terminated list of arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusString" kindref="compound">DBusString</ref> where the output can be append </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusError" kindref="compound">DBusError</ref> to store the error in case of failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if an error happened </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3153" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3148" bodyend="3341"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gabc4712c0db91f11854cdd933027355af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_autolaunch_address</definition>
        <argsstring>(const char *scope, DBusString *address, DBusError *error)</argsstring>
        <name>_dbus_get_autolaunch_address</name>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Returns the address of a new session bus. </para>        </briefdescription>
        <detaileddescription>
<para>If successful, returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> and appends the address to <computeroutput>address</computeroutput>. If a failure happens, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and sets an error in <computeroutput>error</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusString" kindref="compound">DBusString</ref> where the address can be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusError" kindref="compound">DBusError</ref> to store the error in case of failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if an error happened </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3358" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3355" bodyend="3432"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_read_local_machine_uuid</definition>
        <argsstring>(DBusGUID *machine_id, dbus_bool_t create_if_not_found, DBusError *error)</argsstring>
        <name>_dbus_read_local_machine_uuid</name>
        <param>
          <type><ref refid="group__DBusSysdeps_1ga24015a2f75b94c1307360755ce97f869" kindref="member">DBusGUID</ref> *</type>
          <declname>machine_id</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>create_if_not_found</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Reads the uuid of the machine we&apos;re running on from the dbus configuration. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally try to create it (only root can do this usually).</para><para>On UNIX, reads a file that gets created by dbus-uuidgen in a post-install script. On Windows, if there&apos;s a standard machine uuid we could just use that, but I can&apos;t find one with the right properties (the hardware profile guid can change without rebooting I believe). If there&apos;s no standard one we might want to use the registry instead of a file for this, and I&apos;m not sure how we&apos;d ensure the uuid gets created.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>machine_id</parametername>
</parameternamelist>
<parameterdescription>
<para>guid to init with the machine&apos;s uuid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>create_if_not_found</parametername>
</parameternamelist>
<parameterdescription>
<para>try to create the uuid if it doesn&apos;t exist </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>the error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the error is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3456" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3453" bodyend="3471"/>
        <referencedby refid="group__DBusInternalsUtils_1ga49ba67405d677af6cde9329ed87ea91f" compoundref="dbus-internals_8c" startline="797" endline="830">_dbus_get_local_machine_uuid_encoded</referencedby>
        <referencedby refid="group__DBusInternalsUuidgen_1ga1af5f50499f4c9b7dcaa1b36140b8f9c" compoundref="dbus-uuidgen_8c" startline="83" endline="111">dbus_internal_do_not_use_get_uuid</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdepsUnix_1ga6425e8cf4a38c71a48309b436322d4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_lookup_launchd_socket</definition>
        <argsstring>(DBusString *socket_path, const char *launchd_env_var, DBusError *error)</argsstring>
        <name>_dbus_lookup_launchd_socket</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>socket_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>launchd_env_var</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>quries launchd for a specific env var which holds the socket path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>launchd_env_var</parametername>
</parameternamelist>
<parameterdescription>
<para>the env var to look up </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusError" kindref="compound">DBusError</ref> to store the error in case of failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the env var </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3486" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3483" bodyend="3531"/>
        <references refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" compoundref="dbus-sysdeps-unix_8c" startline="4018" endline="4059">_dbus_check_setuid</references>
        <references refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" compoundref="dbus-errors_8c" startline="243" endline="266">dbus_set_error_const</references>
        <references refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" compoundref="dbus-protocol_8h" startline="364">DBUS_ERROR_NOT_SUPPORTED</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusString_1ga7af1cbfa905f26d972ab644d890548b8" compoundref="dbus-string_8c" startline="884" endline="893">_dbus_string_shorten</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="420">dbus_set_error</references>
        <referencedby refid="group__DBusTransportUnix_1gafd694944860033155276df9162bdf72e" compoundref="dbus-transport-unix_8c" startline="119" endline="231">_dbus_transport_open_platform_specific</referencedby>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-unix_8c_1a250b47287c1456cad809904d58fcdc17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_lookup_session_address_launchd</definition>
        <argsstring>(DBusString *address, DBusError *error)</argsstring>
        <name>_dbus_lookup_session_address_launchd</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3535" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3534" bodyend="3590"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gade479f90c1083346d74bc21af178d856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_lookup_session_address</definition>
        <argsstring>(dbus_bool_t *supported, DBusString *address, DBusError *error)</argsstring>
        <name>_dbus_lookup_session_address</name>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref> *</type>
          <declname>supported</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Determines the address of the session bus by querying a platform-specific method. </para>        </briefdescription>
        <detaileddescription>
<para>The first parameter will be a boolean specifying whether or not a dynamic session lookup is supported on this platform.</para><para>If supported is TRUE and the return value is <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, the address will be appended to <computeroutput>address</computeroutput>. If a failure happens, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and sets an error in <computeroutput>error</computeroutput>.</para><para>If supported is FALSE, ignore the return value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>supported</parametername>
</parameternamelist>
<parameterdescription>
<para>returns whether this method is supported </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusString" kindref="compound">DBusString</ref> where the address can be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusError" kindref="compound">DBusError</ref> to store the error in case of failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if an error happened </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3615" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3612" bodyend="3627"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga079d34a9d90759e6b3ebebab424c696e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_standard_session_servicedirs</definition>
        <argsstring>(DBusList **dirs)</argsstring>
        <name>_dbus_get_standard_session_servicedirs</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>dirs</declname>
        </param>
        <briefdescription>
<para>Returns the standard directories for a session bus to look for service activation files. </para>        </briefdescription>
        <detaileddescription>
<para>On UNIX this should be the standard xdg freedesktop.org data directories:</para><para>XDG_DATA_HOME=${XDG_DATA_HOME-$HOME/.local/share} XDG_DATA_DIRS=${XDG_DATA_DIRS-/usr/local/share:/usr/share}</para><para>and</para><para>DBUS_DATADIR</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirs</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory list we are returning </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on OOM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3648" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3647" bodyend="3717"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga5193160c3dc144af34b250cfb5b0a61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_standard_system_servicedirs</definition>
        <argsstring>(DBusList **dirs)</argsstring>
        <name>_dbus_get_standard_system_servicedirs</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>dirs</declname>
        </param>
        <briefdescription>
<para>Returns the standard directories for a system bus to look for service activation files. </para>        </briefdescription>
        <detaileddescription>
<para>On UNIX this should be the standard xdg freedesktop.org data directories:</para><para>XDG_DATA_DIRS=${XDG_DATA_DIRS-/usr/local/share:/usr/share}</para><para>and</para><para>DBUS_DATADIR</para><para>On Windows there is no system bus and this function can return nothing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirs</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory list we are returning </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on OOM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3740" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3739" bodyend="3789"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6a9478a21745b128750df87ac557c7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_append_system_config_file</definition>
        <argsstring>(DBusString *str)</argsstring>
        <name>_dbus_append_system_config_file</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Append the absolute path of the system.conf file (there is no system bus on Windows so this can just return FALSE and print a warning or something) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to append to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3801" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3800" bodyend="3803"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gacc062b5f20f4a355ea78afccb0abd5f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_append_session_config_file</definition>
        <argsstring>(DBusString *str)</argsstring>
        <name>_dbus_append_session_config_file</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Append the absolute path of the session.conf file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to append to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3813" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3812" bodyend="3815"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga184b42c4b42b91ef73e9ee50a1fa12c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_flush_caches</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_flush_caches</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Called when the bus daemon is signaled to reload its configuration; any caches should be nuked. </para>        </briefdescription>
        <detaileddescription>
<para>Of course any caches that need explicit reload are probably broken, but c&apos;est la vie. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3826" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3825" bodyend="3828"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_append_keyring_directory_for_credentials</definition>
        <argsstring>(DBusString *directory, DBusCredentials *credentials)</argsstring>
        <name>_dbus_append_keyring_directory_for_credentials</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>directory</declname>
        </param>
        <param>
          <type><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref> *</type>
          <declname>credentials</declname>
        </param>
        <briefdescription>
<para>Appends the directory in which a keyring for the given credentials should be stored. </para>        </briefdescription>
        <detaileddescription>
<para>The credentials should have either a Windows or UNIX user in them. The directory should be an absolute path.</para><para>On UNIX the directory is ~/.dbus-keyrings while on Windows it should probably be something else, since the dotfile convention is not normal on Windows.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directory</parametername>
</parameternamelist>
<parameterdescription>
<para>string to append directory to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>credentials the directory should be for</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3846" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3844" bodyend="3905"/>
        <referencedby refid="group__DBusKeyring_1ga6dad1720cf97ca6017c39330bec8d09f" compoundref="dbus-keyring_8c" startline="709" endline="838">_dbus_keyring_new_for_credentials</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gafa00b8cf76d8ede8ed0bd56440ca7285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_daemon_publish_session_bus_address</definition>
        <argsstring>(const char *addr, const char *scope)</argsstring>
        <name>_dbus_daemon_publish_session_bus_address</name>
        <param>
          <type>const char *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3911" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3909" bodyend="3913"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga7e2e5b6f5c628c850bc566a4345ebd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_daemon_unpublish_session_bus_address</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_daemon_unpublish_session_bus_address</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3918" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3917" bodyend="3920"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaa03e5d4d95ef46a70d25fe315e674e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_is_errno_eagain_or_ewouldblock</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_get_is_errno_eagain_or_ewouldblock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>See if errno is EAGAIN or EWOULDBLOCK (this has to be done differently for Winsock so is abstracted) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if errno == EAGAIN or errno == EWOULDBLOCK </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3930" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3929" bodyend="3932"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3bc1512aef42cea17a2aaacc7d8e7211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_delete_directory</definition>
        <argsstring>(const DBusString *filename, DBusError *error)</argsstring>
        <name>_dbus_delete_directory</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Removes a directory; Directory must be empty. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>directory filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>initialized error object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3944" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3942" bodyend="3960"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga06183453a52a6919619e85dc1812c9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_socket_can_pass_unix_fd</definition>
        <argsstring>(int fd)</argsstring>
        <name>_dbus_socket_can_pass_unix_fd</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Checks whether file descriptors may be passed via the socket. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the socket </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE when fd passing over this socket is supported </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="3970" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="3970" bodyend="3992"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <referencedby refid="group__DBusTransportSocket_1gac714eaa33ff4ab5c01be1304b23339a7" compoundref="dbus-transport-socket_8c" startline="1232" endline="1291">_dbus_transport_new_for_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga36cf9544881e68c162e9d9ba6697e6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _dbus_replace_install_prefix</definition>
        <argsstring>(const char *configure_time_path)</argsstring>
        <name>_dbus_replace_install_prefix</name>
        <param>
          <type>const char *</type>
          <declname>configure_time_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="4004" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="4003" bodyend="4006"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_check_setuid</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_check_setuid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>**NOTE**: If you modify this function, please also consider making the corresponding change in GLib. </para>        </briefdescription>
        <detaileddescription>
<para>See glib/gutils.c:g_check_setuid().</para><para>Returns TRUE if the current process was executed as setuid (or an equivalent __libc_enable_secure is available). See: <ulink url="http://osdir.com/ml/linux.lfs.hardened/2007-04/msg00032.html">http://osdir.com/ml/linux.lfs.hardened/2007-04/msg00032.html</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" line="4019" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c" bodystart="4018" bodyend="4059"/>
        <referencedby refid="group__DBusKeyring_1ga6dad1720cf97ca6017c39330bec8d09f" compoundref="dbus-keyring_8c" startline="709" endline="838">_dbus_keyring_new_for_credentials</referencedby>
        <referencedby refid="group__DBusSysdeps_1gabc4712c0db91f11854cdd933027355af" compoundref="dbus-sysdeps-unix_8c" startline="3355" endline="3432">_dbus_get_autolaunch_address</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1ga6425e8cf4a38c71a48309b436322d4db" compoundref="dbus-sysdeps-unix_8c" startline="3483" endline="3531">_dbus_lookup_launchd_socket</referencedby>
        <referencedby refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" compoundref="dbus-sysdeps_8c" startline="183" endline="191">_dbus_getenv</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-sysdeps-unix.c<sp/>Wrappers<sp/>around<sp/>UNIX<sp/>system/libc<sp/>features<sp/>(internal<sp/>to<sp/>D-Bus<sp/>implementation)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003,<sp/>2006<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003<sp/>CodeFactory<sp/>AB</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps-unix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-threads.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-transport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-userdb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-credentials.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-nonce.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/un.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pwd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;grp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ERRNO_H</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_WRITEV</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/uio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_POLL</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/poll.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_BACKTRACE</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;execinfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GETPEERUCRED</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;ucred.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ADT</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;bsm/adt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sd-daemon.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>O_BINARY</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>O_BINARY<sp/>0</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AI_ADDRCONFIG</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>AI_ADDRCONFIG<sp/>0</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_SOCKLEN_T</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>socklen_t<sp/>int</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__sun)<sp/>||<sp/>defined<sp/>(__sun__)</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>CMS_SPACE<sp/>etc.<sp/>definitions<sp/>for<sp/>Solaris<sp/>&lt;<sp/>10,<sp/>based<sp/>on</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://mailman.videolan.org/pipermail/vlc-devel/2006-May/024402.html</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>via</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://wiki.opencsw.org/porting-faq#toc10</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>These<sp/>are<sp/>only<sp/>redefined<sp/>for<sp/>Solaris,<sp/>for<sp/>now:<sp/>if<sp/>your<sp/>OS<sp/>needs<sp/>these<sp/>too,</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>please<sp/>file<sp/>a<sp/>bug.<sp/>(Or<sp/>preferably,<sp/>improve<sp/>your<sp/>OS<sp/>so<sp/>they&apos;re<sp/>not<sp/>needed.)</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>CMSG_ALIGN</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>__sun__</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>CMSG_ALIGN(len)<sp/>_CMSG_DATA_ALIGN<sp/>(len)</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>aligning<sp/>to<sp/>sizeof<sp/>(long)<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>portable<sp/>(fd.o#40235)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>CMSG_ALIGN(len)<sp/>(((len)<sp/>+<sp/>sizeof<sp/>(long)<sp/>-<sp/>1)<sp/>&amp;<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~(sizeof<sp/>(long)<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>CMSG_SPACE</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>CMSG_SPACE(len)<sp/>(CMSG_ALIGN<sp/>(sizeof<sp/>(struct<sp/>cmsghdr))<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMSG_ALIGN<sp/>(len))</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>CMSG_LEN</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>CMSG_LEN(len)<sp/>(CMSG_ALIGN<sp/>(sizeof<sp/>(struct<sp/>cmsghdr))<sp/>+<sp/>(len))</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Solaris<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="126"><highlight class="normal">_dbus_open_socket<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd_p,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOCK_CLOEXEC</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>cloexec_done;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>*fd_p<sp/>=<sp/>socket<sp/>(domain,<sp/>type<sp/>|<sp/>SOCK_CLOEXEC,<sp/>protocol);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>cloexec_done<sp/>=<sp/>*fd_p<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>kernel<sp/>seems<sp/>to<sp/>be<sp/>too<sp/>old<sp/>to<sp/>know<sp/>SOCK_CLOEXEC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fd_p<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINVAL)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*fd_p<sp/>=<sp/>socket<sp/>(domain,<sp/>type,<sp/>protocol);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fd_p<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOCK_CLOEXEC</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cloexec_done)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" kindref="member" tooltip="Sets the file descriptor to be close on exec.">_dbus_fd_set_close_on_exec</ref>(*fd_p);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;socket<sp/>fd<sp/>%d<sp/>opened\n&quot;</highlight><highlight class="normal">,<sp/>*fd_p);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref>(error,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>socket:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="168" refid="group__DBusSysdeps_1gaf0c64c612b8d45429515d14849f81a57" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gaf0c64c612b8d45429515d14849f81a57" kindref="member" tooltip="Socket interface.">_dbus_open_tcp_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_open_socket(fd,<sp/>AF_INET,<sp/>SOCK_STREAM,<sp/>0,<sp/>error);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="185" refid="group__DBusSysdepsUnix_1ga281d8697f33900cc1da984ea5a24aca8" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga281d8697f33900cc1da984ea5a24aca8" kindref="member" tooltip="Opens a UNIX domain socket (as in the socket() call).">_dbus_open_unix_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_open_socket(fd,<sp/>PF_UNIX,<sp/>SOCK_STREAM,<sp/>0,<sp/>error);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="200" refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" kindref="member" tooltip="Closes a socket.">_dbus_close_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/>error);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member" tooltip="Like _dbus_read(), but only works on sockets so is available on Windows.">_dbus_read_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member" tooltip="Thin wrapper around the read() system call that appends the data it reads to the DBusString buffer...">_dbus_read</ref><sp/>(fd,<sp/>buffer,<sp/>count);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" kindref="member" tooltip="Like _dbus_write(), but only supports sockets and is thus available on Windows.">_dbus_write_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DECL_MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer,<sp/>start,<sp/>len);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>send<sp/>(fd,<sp/>data,<sp/>len,<sp/>MSG_NOSIGNAL);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member" tooltip="Thin wrapper around the write() system call that writes a part of a DBusString and handles EINTR for ...">_dbus_write</ref><sp/>(fd,<sp/>buffer,<sp/>start,<sp/>len);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="group__DBusSysdeps_1ga14aa692ac7e9aab777b9f565c4b8933b" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga14aa692ac7e9aab777b9f565c4b8933b" kindref="member" tooltip="Like _dbus_read_socket() but also tries to read unix fds from the socket.">_dbus_read_socket_with_unix_fds</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fds,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_fds)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_UNIX_FD_PASSING</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member" tooltip="Like _dbus_read(), but only works on sockets so is available on Windows.">_dbus_read_socket</ref>(fd,<sp/>buffer,<sp/>count))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>*n_fds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">msghdr<sp/>m;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iovec<sp/>iov;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(*n_fds<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>_dbus_string_get_length<sp/>(buffer);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" kindref="member" tooltip="Makes a string longer by the given number of bytes.">_dbus_string_lengthen</ref><sp/>(buffer,<sp/>count))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(iov);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>iov.iov_base<sp/>=<sp/><ref refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" kindref="member" tooltip="Gets a sub-portion of the raw character buffer from the string.">_dbus_string_get_data_len</ref><sp/>(buffer,<sp/>start,<sp/>count);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>iov.iov_len<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(m);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>m.msg_iov<sp/>=<sp/>&amp;iov;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>m.msg_iovlen<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hmm,<sp/>we<sp/>have<sp/>no<sp/>clue<sp/>how<sp/>long<sp/>the<sp/>control<sp/>data<sp/>will<sp/>actually<sp/>be</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>that<sp/>is<sp/>queued<sp/>for<sp/>us.<sp/>The<sp/>least<sp/>we<sp/>can<sp/>do<sp/>is<sp/>assume<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>caller<sp/>knows.<sp/>Hence<sp/>let&apos;s<sp/>make<sp/>space<sp/>for<sp/>the<sp/>number<sp/>of<sp/>fds<sp/>that</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>we<sp/>shall<sp/>read<sp/>at<sp/>max<sp/>plus<sp/>the<sp/>cmsg<sp/>header.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>m.msg_controllen<sp/>=<sp/>CMSG_SPACE(*n_fds<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>probably<sp/>safe<sp/>to<sp/>assume<sp/>that<sp/>systems<sp/>with<sp/>SCM_RIGHTS<sp/>also</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>know<sp/>alloca()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>m.msg_control<sp/>=<sp/>alloca(m.msg_controllen);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>memset(m.msg_control,<sp/>0,<sp/>m.msg_controllen);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>bytes_read<sp/>=<sp/>recvmsg(fd,<sp/>&amp;m,<sp/>0</highlight></codeline>
<codeline lineno="325"><highlight class="normal">#ifdef<sp/>MSG_CMSG_CLOEXEC</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|MSG_CMSG_CLOEXEC</highlight></codeline>
<codeline lineno="327"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>length<sp/>back<sp/>(note<sp/>that<sp/>this<sp/>doesn&apos;t<sp/>actually<sp/>realloc<sp/>anything)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(buffer,<sp/>start);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsghdr<sp/>*cm;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>found<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.msg_flags<sp/>&amp;<sp/>MSG_CTRUNC)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hmm,<sp/>apparently<sp/>the<sp/>control<sp/>data<sp/>was<sp/>truncated.<sp/>The<sp/>bad</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thing<sp/>is<sp/>that<sp/>we<sp/>might<sp/>have<sp/>completely<sp/>lost<sp/>a<sp/>couple<sp/>of<sp/>fds</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>without<sp/>chance<sp/>to<sp/>recover<sp/>them.<sp/>Hence<sp/>let&apos;s<sp/>treat<sp/>this<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serious<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOSPC;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(buffer,<sp/>start);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cm<sp/>=<sp/>CMSG_FIRSTHDR(&amp;m);<sp/>cm;<sp/>cm<sp/>=<sp/>CMSG_NXTHDR(&amp;m,<sp/>cm))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;cmsg_level<sp/>==<sp/>SOL_SOCKET<sp/>&amp;&amp;<sp/>cm-&gt;cmsg_type<sp/>==<sp/>SCM_RIGHTS)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_assert(cm-&gt;cmsg_len<sp/>&lt;=<sp/>CMSG_LEN(*n_fds<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_fds<sp/>=<sp/>(cm-&gt;cmsg_len<sp/>-<sp/>CMSG_LEN(0))<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(fds,<sp/>CMSG_DATA(cm),<sp/>*n_fds<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Linux<sp/>doesn&apos;t<sp/>tell<sp/>us<sp/>whether<sp/>MSG_CMSG_CLOEXEC<sp/>actually</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worked,<sp/>hence<sp/>we<sp/>need<sp/>to<sp/>go<sp/>through<sp/>this<sp/>list<sp/>and<sp/>set</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLOEXEC<sp/>everywhere<sp/>in<sp/>any<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>*n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" kindref="member" tooltip="Sets the file descriptor to be close on exec.">_dbus_fd_set_close_on_exec</ref>(fds[i]);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_fds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>length<sp/>back<sp/>(doesn&apos;t<sp/>actually<sp/>realloc)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(buffer,<sp/>start<sp/>+<sp/>bytes_read);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member" tooltip="Dump the given part of the string to verbose log.">_dbus_verbose_bytes_of_string</ref><sp/>(buffer,<sp/>start,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">_dbus_write_socket_with_unix_fds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fds,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_fds)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_UNIX_FD_PASSING</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_fds<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOTSUP;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" kindref="member" tooltip="Like _dbus_write(), but only supports sockets and is thus available on Windows.">_dbus_write_socket</ref>(fd,<sp/>buffer,<sp/>start,<sp/>len);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_write_socket_with_unix_fds_two(fd,<sp/>buffer,<sp/>start,<sp/>len,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/>0,<sp/>0,<sp/>fds,<sp/>n_fds);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">_dbus_write_socket_with_unix_fds_two(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer1,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start1,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len1,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer2,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start2,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fds,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_fds)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_UNIX_FD_PASSING</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_fds<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOTSUP;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" kindref="member" tooltip="Like _dbus_write_two() but only works on sockets and is thus available on Windows.">_dbus_write_socket_two</ref>(fd,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer1,<sp/>start1,<sp/>len1,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer2,<sp/>start2,<sp/>len2);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">msghdr<sp/>m;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsghdr<sp/>*cm;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iovec<sp/>iov[2];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(len1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(len2<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(n_fds<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(iov);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>iov[0].iov_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>_dbus_string_get_const_data_len<sp/>(buffer1,<sp/>start1,<sp/>len1);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>iov[0].iov_len<sp/>=<sp/>len1;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer2)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iov[1].iov_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>_dbus_string_get_const_data_len<sp/>(buffer2,<sp/>start2,<sp/>len2);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iov[1].iov_len<sp/>=<sp/>len2;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(m);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>m.msg_iov<sp/>=<sp/>iov;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>m.msg_iovlen<sp/>=<sp/>buffer2<sp/>?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_fds<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.msg_controllen<sp/>=<sp/>CMSG_SPACE(n_fds<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.msg_control<sp/>=<sp/>alloca(m.msg_controllen);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(m.msg_control,<sp/>0,<sp/>m.msg_controllen);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm<sp/>=<sp/>CMSG_FIRSTHDR(&amp;m);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;cmsg_level<sp/>=<sp/>SOL_SOCKET;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;cmsg_type<sp/>=<sp/>SCM_RIGHTS;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cm-&gt;cmsg_len<sp/>=<sp/>CMSG_LEN(n_fds<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(CMSG_DATA(cm),<sp/>fds,<sp/>n_fds<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>sendmsg<sp/>(fd,<sp/>&amp;m,<sp/>0</highlight></codeline>
<codeline lineno="477"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>HAVE_DECL_MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="479"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member" tooltip="Dump the given part of the string to verbose log.">_dbus_verbose_bytes_of_string</ref><sp/>(buffer,<sp/>start,<sp/>bytes_written);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" kindref="member" tooltip="Like _dbus_write_two() but only works on sockets and is thus available on Windows.">_dbus_write_socket_two</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer1,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start1,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len1,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer2,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start2,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DECL_MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iovec<sp/>vectors[2];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data2;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">msghdr<sp/>m;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(buffer1<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(start1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(start2<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(len1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(len2<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>data1<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer1,<sp/>start1,<sp/>len1);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer2<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>data2<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer2,<sp/>start2,<sp/>len2);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>vectors[0].iov_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>data1;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>vectors[0].iov_len<sp/>=<sp/>len1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>vectors[1].iov_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>data2;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>vectors[1].iov_len<sp/>=<sp/>len2;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(m);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>m.msg_iov<sp/>=<sp/>vectors;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>m.msg_iovlen<sp/>=<sp/>data2<sp/>?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>sendmsg<sp/>(fd,<sp/>&amp;m,<sp/>MSG_NOSIGNAL);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" kindref="member" tooltip="Like _dbus_write() but will use writev() if possible to write both buffers in sequence.">_dbus_write_two</ref><sp/>(fd,<sp/>buffer1,<sp/>start1,<sp/>len1,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer2,<sp/>start2,<sp/>len2);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="565"><highlight class="normal">_dbus_socket_is_invalid<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd<sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref><sp/>:<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member" tooltip="Thin wrapper around the read() system call that appends the data it reads to the DBusString buffer...">_dbus_read</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>_dbus_string_get_length<sp/>(buffer);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" kindref="member" tooltip="Makes a string longer by the given number of bytes.">_dbus_string_lengthen</ref><sp/>(buffer,<sp/>count))</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/><ref refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" kindref="member" tooltip="Gets a sub-portion of the raw character buffer from the string.">_dbus_string_get_data_len</ref><sp/>(buffer,<sp/>start,<sp/>count);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>bytes_read<sp/>=<sp/>read<sp/>(fd,<sp/>data,<sp/>count);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>length<sp/>back<sp/>(note<sp/>that<sp/>this<sp/>doesn&apos;t<sp/>actually<sp/>realloc<sp/>anything)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(buffer,<sp/>start);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>length<sp/>back<sp/>(doesn&apos;t<sp/>actually<sp/>realloc)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(buffer,<sp/>start<sp/>+<sp/>bytes_read);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member" tooltip="Dump the given part of the string to verbose log.">_dbus_verbose_bytes_of_string</ref><sp/>(buffer,<sp/>start,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member" tooltip="Thin wrapper around the write() system call that writes a part of a DBusString and handles EINTR for ...">_dbus_write</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer,<sp/>start,<sp/>len);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>write<sp/>(fd,<sp/>data,<sp/>len);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member" tooltip="Dump the given part of the string to verbose log.">_dbus_verbose_bytes_of_string</ref><sp/>(buffer,<sp/>start,<sp/>bytes_written);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" kindref="member" tooltip="Like _dbus_write() but will use writev() if possible to write both buffers in sequence.">_dbus_write_two</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer1,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start1,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len1,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer2,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start2,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(buffer1<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(start1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(start2<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(len1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(len2<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_WRITEV</highlight></codeline>
<codeline lineno="708"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iovec<sp/>vectors[2];</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data1;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data2;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>data1<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer1,<sp/>start1,<sp/>len1);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer2<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer2,<sp/>start2,<sp/>len2);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>vectors[0].iov_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>data1;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>vectors[0].iov_len<sp/>=<sp/>len1;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>vectors[1].iov_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>data2;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>vectors[1].iov_len<sp/>=<sp/>len2;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>again:</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_written<sp/>=<sp/>writev<sp/>(fd,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vectors,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>?<sp/>2<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>HAVE_WRITEV<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret1;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>ret1<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member" tooltip="Thin wrapper around the write() system call that writes a part of a DBusString and handles EINTR for ...">_dbus_write</ref><sp/>(fd,<sp/>buffer1,<sp/>start1,<sp/>len1);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret1<sp/>==<sp/>len1<sp/>&amp;&amp;<sp/>buffer2<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret2<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member" tooltip="Thin wrapper around the write() system call that writes a part of a DBusString and handles EINTR for ...">_dbus_write</ref><sp/>(fd,<sp/>buffer2,<sp/>start2,<sp/>len2);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>can&apos;t<sp/>report<sp/>an<sp/>error<sp/>as<sp/>the<sp/>first<sp/>write<sp/>was<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret1<sp/>+<sp/>ret2;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret1;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!HAVE_WRITEV<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DBUS_MAX_SUN_PATH_LENGTH<sp/>99</highlight></codeline>
<codeline lineno="761"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="791"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="group__DBusSysdepsUnix_1ga0228009923a105d50a0849b24acbc31e" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga0228009923a105d50a0849b24acbc31e" kindref="member" tooltip="Creates a socket and connects it to the UNIX domain socket at the given path.">_dbus_connect_unix_socket</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*path,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_len;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_un<sp/>addr;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;connecting<sp/>to<sp/>unix<sp/>socket<sp/>%s<sp/>abstract=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdepsUnix_1ga281d8697f33900cc1da984ea5a24aca8" kindref="member" tooltip="Opens a UNIX domain socket (as in the socket() call).">_dbus_open_unix_socket</ref><sp/>(&amp;fd,<sp/>error))</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET(error);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR(error);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>_DBUS_ZERO<sp/>(addr);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>addr.sun_family<sp/>=<sp/>AF_UNIX;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>path_len<sp/>=<sp/>strlen<sp/>(path);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">abstract</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ABSTRACT_SOCKETS</highlight></codeline>
<codeline lineno="820"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addr.sun_path[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>what<sp/>says<sp/>&quot;use<sp/>abstract&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path_len++;<sp/></highlight><highlight class="comment">/*<sp/>Account<sp/>for<sp/>the<sp/>extra<sp/>nul<sp/>byte<sp/>added<sp/>to<sp/>the<sp/>start<sp/>of<sp/>sun_path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_len<sp/>&gt;<sp/>_DBUS_MAX_SUN_PATH_LENGTH)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Abstract<sp/>socket<sp/>name<sp/>too<sp/>long\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(&amp;addr.sun_path[1],<sp/>path,<sp/>path_len);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_dbus_verbose_bytes<sp/>(addr.sun_path,<sp/>sizeof<sp/>(addr.sun_path));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>HAVE_ABSTRACT_SOCKETS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Operating<sp/>system<sp/>does<sp/>not<sp/>support<sp/>abstract<sp/>socket<sp/>namespace\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>HAVE_ABSTRACT_SOCKETS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_len<sp/>&gt;<sp/>_DBUS_MAX_SUN_PATH_LENGTH)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>name<sp/>too<sp/>long\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(addr.sun_path,<sp/>path,<sp/>path_len);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connect<sp/>(fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)<sp/>&amp;addr,<sp/>_DBUS_STRUCT_OFFSET<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_un,<sp/>sun_path)<sp/>+<sp/>path_len)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect<sp/>to<sp/>socket<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_fd_nonblocking<sp/>(fd,<sp/>error))</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET<sp/>(error);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="885"><highlight class="normal">_dbus_set_local_creds<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>on)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_CMSGCRED)</highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOOP<sp/>just<sp/>to<sp/>make<sp/>sure<sp/>only<sp/>one<sp/>codepath<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>to<sp/>prefer<sp/>CMSGCRED</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(LOCAL_CREDS)</highlight></codeline>
<codeline lineno="894"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>on<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt<sp/>(fd,<sp/>0,<sp/>LOCAL_CREDS,<sp/>&amp;val,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(val))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>LOCAL_CREDS<sp/>socket<sp/>option<sp/>on<sp/>fd<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;LOCAL_CREDS<sp/>%s<sp/>for<sp/>further<sp/>messages<sp/>on<sp/>fd<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;disabled&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="904"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926" refid="group__DBusSysdepsUnix_1ga2cd48fe3d7aa14d0d3c7813cdddb3f74" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga2cd48fe3d7aa14d0d3c7813cdddb3f74" kindref="member" tooltip="Creates a socket and binds it to the given path, then listens on the socket.">_dbus_listen_unix_socket</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*path,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>listen_fd;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_un<sp/>addr;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_len;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reuseaddr;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;listening<sp/>on<sp/>unix<sp/>socket<sp/>%s<sp/>abstract=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdepsUnix_1ga281d8697f33900cc1da984ea5a24aca8" kindref="member" tooltip="Opens a UNIX domain socket (as in the socket() call).">_dbus_open_unix_socket</ref><sp/>(&amp;listen_fd,<sp/>error))</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET(error);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR(error);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>_DBUS_ZERO<sp/>(addr);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>addr.sun_family<sp/>=<sp/>AF_UNIX;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>path_len<sp/>=<sp/>strlen<sp/>(path);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">abstract</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ABSTRACT_SOCKETS</highlight></codeline>
<codeline lineno="954"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remember<sp/>that<sp/>abstract<sp/>names<sp/>aren&apos;t<sp/>nul-terminated<sp/>so<sp/>we<sp/>rely</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>on<sp/>sun_path<sp/>being<sp/>filled<sp/>in<sp/>with<sp/>zeroes<sp/>above.</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addr.sun_path[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>what<sp/>says<sp/>&quot;use<sp/>abstract&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path_len++;<sp/></highlight><highlight class="comment">/*<sp/>Account<sp/>for<sp/>the<sp/>extra<sp/>nul<sp/>byte<sp/>added<sp/>to<sp/>the<sp/>start<sp/>of<sp/>sun_path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_len<sp/>&gt;<sp/>_DBUS_MAX_SUN_PATH_LENGTH)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Abstract<sp/>socket<sp/>name<sp/>too<sp/>long\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(&amp;addr.sun_path[1],<sp/>path,<sp/>path_len);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_dbus_verbose_bytes<sp/>(addr.sun_path,<sp/>sizeof<sp/>(addr.sun_path));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>HAVE_ABSTRACT_SOCKETS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Operating<sp/>system<sp/>does<sp/>not<sp/>support<sp/>abstract<sp/>socket<sp/>namespace\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>HAVE_ABSTRACT_SOCKETS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discussed<sp/>security<sp/>implications<sp/>of<sp/>this<sp/>with<sp/>Nalin,</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>we<sp/>couldn&apos;t<sp/>think<sp/>of<sp/>where<sp/>it<sp/>would<sp/>kick<sp/>our<sp/>ass,<sp/>but</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>still<sp/>seems<sp/>a<sp/>bit<sp/>sucky.<sp/>It<sp/>also<sp/>has<sp/>non-security<sp/>suckage;</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>really<sp/>we&apos;d<sp/>prefer<sp/>to<sp/>exit<sp/>if<sp/>the<sp/>socket<sp/>is<sp/>already<sp/>in<sp/>use.</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>But<sp/>there<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>be<sp/>a<sp/>good<sp/>way<sp/>to<sp/>do<sp/>this.</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Just<sp/>to<sp/>be<sp/>extra<sp/>careful,<sp/>I<sp/>threw<sp/>in<sp/>the<sp/>stat()<sp/>-<sp/>clearly</highlight></codeline>
<codeline lineno="986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>stat()<sp/>can&apos;t<sp/>*fix*<sp/>any<sp/>security<sp/>issue,<sp/>but<sp/>it<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>avoids<sp/>inadvertent/accidental<sp/>data<sp/>loss.</highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>sb;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>(path,<sp/>&amp;sb)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_ISSOCK<sp/>(sb.st_mode))</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink<sp/>(path);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_len<sp/>&gt;<sp/>_DBUS_MAX_SUN_PATH_LENGTH)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Abstract<sp/>socket<sp/>name<sp/>too<sp/>long\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(addr.sun_path,<sp/>path,<sp/>path_len);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>reuseaddr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt<sp/><sp/>(listen_fd,<sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;reuseaddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reuseaddr))==-1)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member" tooltip="Prints a warning message to stderr.">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>socket<sp/>option\&quot;%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind<sp/>(listen_fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)<sp/>&amp;addr,<sp/>_DBUS_STRUCT_OFFSET<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_un,<sp/>sun_path)<sp/>+<sp/>path_len)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>socket<sp/>\&quot;%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen<sp/>(listen_fd,<sp/>30<sp/></highlight><highlight class="comment">/*<sp/>backlog<sp/>*/</highlight><highlight class="normal">)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>listen<sp/>on<sp/>socket<sp/>\&quot;%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_local_creds<sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>))</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>LOCAL_CREDS<sp/>on<sp/>socket<sp/>\&quot;%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(listen_fd);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_fd_nonblocking<sp/>(listen_fd,<sp/>error))</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET<sp/>(error);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>opening<sp/>up<sp/>the<sp/>permissions,<sp/>but<sp/>if<sp/>we<sp/>can&apos;t,<sp/>just<sp/>go<sp/>ahead</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>continue,<sp/>maybe<sp/>it<sp/>will<sp/>be<sp/>good<sp/>enough.</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>chmod<sp/>(path,<sp/>0777)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member" tooltip="Prints a warning message to stderr.">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>mode<sp/>0777<sp/>on<sp/>socket<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listen_fd;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="group__DBusSysdepsUnix_1ga71aa508a7790c6d1c9c0159defcdd4a6" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga71aa508a7790c6d1c9c0159defcdd4a6" kindref="member" tooltip="Acquires one or more sockets passed in from systemd.">_dbus_listen_systemd_sockets</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fds,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/>n;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*new_fds;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>sd_listen_fds<sp/>(<ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(-n),</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>acquire<sp/>systemd<sp/>socket:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(-n));</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>socket<sp/>received.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fd<sp/>=<sp/>SD_LISTEN_FDS_START;<sp/>fd<sp/>&lt;<sp/>SD_LISTEN_FDS_START<sp/>+<sp/>n;<sp/>fd<sp/>++)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>sd_is_socket<sp/>(fd,<sp/>AF_UNSPEC,<sp/>SOCK_STREAM,<sp/>1);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(-r),</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>verify<sp/>systemd<sp/>socket<sp/>type:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(-r));</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Passed<sp/>socket<sp/>has<sp/>wrong<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>the<sp/>file<sp/>descriptors<sp/>are<sp/>all<sp/>good,<sp/>so<sp/>let&apos;s<sp/>take<sp/>posession<sp/>of</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>them<sp/>then.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>new_fds<sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member" tooltip="Safe macro for using dbus_malloc().">dbus_new</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_fds)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>file<sp/>handle<sp/>array.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fd<sp/>=<sp/>SD_LISTEN_FDS_START;<sp/>fd<sp/>&lt;<sp/>SD_LISTEN_FDS_START<sp/>+<sp/>n;<sp/>fd<sp/>++)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_local_creds<sp/>(fd,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>))</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>LOCAL_CREDS<sp/>on<sp/>systemd<sp/>socket:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_fd_nonblocking<sp/>(fd,<sp/>error))</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET<sp/>(error);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_fds[fd<sp/>-<sp/>SD_LISTEN_FDS_START]<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>*fds<sp/>=<sp/>new_fds;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/>fail:</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fd<sp/>=<sp/>SD_LISTEN_FDS_START;<sp/>fd<sp/>&lt;<sp/>SD_LISTEN_FDS_START<sp/>+<sp/>n;<sp/>fd<sp/>++)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(new_fds);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172" refid="group__DBusSysdeps_1gaa3adf90f6e47d30eeacf0a27d1a09ee5" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gaa3adf90f6e47d30eeacf0a27d1a09ee5" kindref="member" tooltip="Creates a socket and connects to a socket at the given host and port.">_dbus_connect_tcp_socket</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*host,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*port,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*family,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_connect_tcp_socket_with_nonce<sp/>(host,<sp/>port,<sp/>family,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/>error);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal">_dbus_connect_tcp_socket_with_nonce<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*host,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*port,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*family,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*noncefile,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saved_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>-1,<sp/>res;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>hints;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>*ai,<sp/>*tmp;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR(error);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>_DBUS_ZERO<sp/>(hints);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!family)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_UNSPEC;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv4&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv6&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>address<sp/>family<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>family);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>hints.ai_protocol<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>hints.ai_socktype<sp/>=<sp/>SOCK_STREAM;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>hints.ai_flags<sp/>=<sp/>AI_ADDRCONFIG;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>getaddrinfo(host,<sp/>port,<sp/>&amp;hints,<sp/>&amp;ai))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>lookup<sp/>host/port:<sp/>\&quot;%s:%s\&quot;:<sp/>%s<sp/>(%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>port,<sp/>gai_strerror(res),<sp/>res);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>ai;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tmp)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_open_socket<sp/>(&amp;fd,<sp/>tmp-&gt;ai_family,<sp/>SOCK_STREAM,<sp/>0,<sp/>error))</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET(error);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR(error);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connect<sp/>(fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)<sp/>tmp-&gt;ai_addr,<sp/>tmp-&gt;ai_addrlen)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saved_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp-&gt;ai_next;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(saved_errno),</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect<sp/>to<sp/>socket<sp/>\&quot;%s:%s\&quot;<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>port,<sp/>_dbus_strerror(saved_errno));</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noncefile<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>noncefileStr;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>ret;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member" tooltip="Initializes a constant string.">_dbus_string_init_const</ref><sp/>(&amp;noncefileStr,<sp/>noncefile);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>_dbus_send_nonce<sp/>(fd,<sp/>&amp;noncefileStr,<sp/>error);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;noncefileStr);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_fd_nonblocking<sp/>(fd,<sp/>error))</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296" refid="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" kindref="member" tooltip="Creates a socket and binds it to the given path, then listens on the socket.">_dbus_listen_tcp_socket</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*host,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*port,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*family,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/>*retport,</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fds_p,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saved_errno;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlisten_fd<sp/>=<sp/>0,<sp/>*listen_fd<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/>res,<sp/>i;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>hints;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>*ai,<sp/>*tmp;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reuseaddr;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>*fds_p<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>_DBUS_ZERO<sp/>(hints);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!family)</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_UNSPEC;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv4&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv6&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" kindref="member" tooltip="A D-Bus bus address was malformed.">DBUS_ERROR_BAD_ADDRESS</ref>,</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>address<sp/>family<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>family);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>hints.ai_protocol<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>hints.ai_socktype<sp/>=<sp/>SOCK_STREAM;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>hints.ai_flags<sp/>=<sp/>AI_ADDRCONFIG<sp/>|<sp/>AI_PASSIVE;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/>redo_lookup_with_port:</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>ai<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>getaddrinfo(host,<sp/>port,<sp/>&amp;hints,<sp/>&amp;ai))<sp/>!=<sp/>0<sp/>||<sp/>!ai)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>lookup<sp/>host/port:<sp/>\&quot;%s:%s\&quot;:<sp/>%s<sp/>(%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>gai_strerror(res),<sp/>res);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>ai;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tmp)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>-1,<sp/>*newlisten_fd;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_open_socket<sp/>(&amp;fd,<sp/>tmp-&gt;ai_family,<sp/>SOCK_STREAM,<sp/>0,<sp/>error))</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET(error);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR(error);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reuseaddr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt<sp/>(fd,<sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;reuseaddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reuseaddr))==-1)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member" tooltip="Prints a warning message to stderr.">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>socket<sp/>option<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind<sp/>(fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)<sp/>tmp-&gt;ai_addr,<sp/>tmp-&gt;ai_addrlen)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saved_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saved_errno<sp/>==<sp/>EADDRINUSE)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depending<sp/>on<sp/>kernel<sp/>policy,<sp/>it<sp/>may<sp/>or<sp/>may<sp/>not</highlight></codeline>
<codeline lineno="1368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>neccessary<sp/>to<sp/>bind<sp/>to<sp/>both<sp/>IPv4<sp/>&amp;<sp/>6<sp/>addresses</highlight></codeline>
<codeline lineno="1369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>ignore<sp/>EADDRINUSE<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp-&gt;ai_next;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(saved_errno),</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>socket<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>_dbus_strerror<sp/>(saved_errno));</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen<sp/>(fd,<sp/>30<sp/></highlight><highlight class="comment">/*<sp/>backlog<sp/>*/</highlight><highlight class="normal">)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saved_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(saved_errno),</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>listen<sp/>on<sp/>socket<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>_dbus_strerror<sp/>(saved_errno));</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newlisten_fd<sp/>=<sp/><ref refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" kindref="member" tooltip="Resizes a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_realloc</ref>(listen_fd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*(nlisten_fd+1));</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newlisten_fd)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saved_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(saved_errno),</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>file<sp/>handle<sp/>array:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(saved_errno));</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listen_fd<sp/>=<sp/>newlisten_fd;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listen_fd[nlisten_fd]<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nlisten_fd++;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_string_get_length(retport))</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>user<sp/>didn&apos;t<sp/>specify<sp/>a<sp/>port,<sp/>or<sp/>used<sp/>0,<sp/>then</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>kernel<sp/>chooses<sp/>a<sp/>port.<sp/>After<sp/>the<sp/>first<sp/>address</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>bound<sp/>to,<sp/>we<sp/>need<sp/>to<sp/>force<sp/>all<sp/>remaining<sp/>addresses</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>use<sp/>the<sp/>same<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!port<sp/>||<sp/>!strcmp(port,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>addr;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>addrlen;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>portbuf[50];</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addrlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>getsockname(fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)<sp/>&amp;addr,<sp/>&amp;addrlen);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>-1<sp/>||</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(res<sp/>=<sp/>getnameinfo<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)&amp;addr,<sp/>addrlen,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portbuf),</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NI_NUMERICHOST))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>resolve<sp/>port<sp/>\&quot;%s:%s\&quot;:<sp/>%s<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>gai_strerror(res),<sp/>res);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref>(retport,<sp/>portbuf))</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>current<sp/>address<sp/>list<sp/>&amp;<sp/>redo<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>_dbus_string_get_const_data(retport);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>redo_lookup_with_port;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref>(retport,<sp/>port))</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp-&gt;ai_next;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>ai<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nlisten_fd)</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EADDRINUSE;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>socket<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>nlisten_fd<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_fd_nonblocking<sp/>(listen_fd[i],<sp/>error))</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>*fds_p<sp/>=<sp/>listen_fd;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nlisten_fd;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/>failed:</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ai)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>nlisten_fd<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref>(listen_fd[i],<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref>(listen_fd);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1486"><highlight class="normal">write_credentials_byte<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_fd,</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_CMSGCRED)</highlight></codeline>
<codeline lineno="1492"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsghdr<sp/>hdr;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cred[CMSG_SPACE<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cmsgcred))];</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>}<sp/>cmsg;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iovec<sp/>iov;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">msghdr<sp/>msg;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>iov.iov_base<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>iov.iov_len<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(msg);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>msg.msg_iov<sp/>=<sp/>&amp;iov;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>msg.msg_iovlen<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>msg.msg_control<sp/>=<sp/>(caddr_t)<sp/>&amp;cmsg;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/>msg.msg_controllen<sp/>=<sp/>CMSG_SPACE<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cmsgcred));</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(cmsg);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>cmsg.hdr.cmsg_len<sp/>=<sp/>CMSG_LEN<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cmsgcred));</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>cmsg.hdr.cmsg_level<sp/>=<sp/>SOL_SOCKET;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>cmsg.hdr.cmsg_type<sp/>=<sp/>SCM_CREDS;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1512"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_CMSGCRED)</highlight></codeline>
<codeline lineno="1518"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>sendmsg<sp/>(server_fd,<sp/>&amp;msg,<sp/>0</highlight></codeline>
<codeline lineno="1519"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>HAVE_DECL_MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1524"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>send<sp/>(server_fd,<sp/>buf,<sp/>1,<sp/>0</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>HAVE_DECL_MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|MSG_NOSIGNAL</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1530"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>credentials<sp/>byte:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga445d7ad73da94c796ef441df2dcc3cc8" kindref="member" tooltip="Something went wrong reading or writing to a socket, for example.">DBUS_ERROR_IO_ERROR</ref>,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wrote<sp/>zero<sp/>bytes<sp/>writing<sp/>credentials<sp/>byte&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_assert<sp/>(bytes_written<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;wrote<sp/>credentials<sp/>byte\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1577" refid="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" kindref="member" tooltip="Reads a single byte which must be nul (an error occurs otherwise), and reads unix credentials if avai...">_dbus_read_credentials_socket</ref><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client_fd,</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref><sp/>*credentials,</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">msghdr<sp/>msg;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iovec<sp/>iov;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref><sp/>uid_read;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member" tooltip="A process ID.">dbus_pid_t</ref><sp/>pid_read;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CMSGCRED</highlight></codeline>
<codeline lineno="1589"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsghdr<sp/>hdr;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cred[CMSG_SPACE<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cmsgcred))];</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>}<sp/>cmsg;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(LOCAL_CREDS)</highlight></codeline>
<codeline lineno="1595"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsghdr<sp/>hdr;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockcred<sp/>cred;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>}<sp/>cmsg;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1600"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>uid_read<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>pid_read<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga4eb5f05dd6ad89caa4b0340e1cf0b8d9" kindref="member" tooltip="an invalid PID used to represent an uninitialized dbus_pid_t field">DBUS_PID_UNSET</ref>;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>POSIX<sp/>spec<sp/>certainly<sp/>doesn&apos;t<sp/>promise<sp/>this,<sp/>but</highlight></codeline>
<codeline lineno="1607"><highlight class="comment"><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>these<sp/>assertions<sp/>to<sp/>fail<sp/>as<sp/>soon<sp/>as<sp/>we&apos;re<sp/>wrong<sp/>about</highlight></codeline>
<codeline lineno="1608"><highlight class="comment"><sp/><sp/><sp/>*<sp/>it<sp/>so<sp/>we<sp/>can<sp/>do<sp/>the<sp/>porting<sp/>fixups</highlight></codeline>
<codeline lineno="1609"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(pid_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member" tooltip="A process ID.">dbus_pid_t</ref>));</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(uid_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref>));</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(gid_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga2f5c2e418b81ec2a86594f56ec6d7627" kindref="member" tooltip="A group ID.">dbus_gid_t</ref>));</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><ref refid="group__DBusCredentials_1ga40a5c7e37b10419e233a473dc7173f3c" kindref="member" tooltip="Clear all credentials in the object.">_dbus_credentials_clear</ref><sp/>(credentials);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Systems<sp/>supporting<sp/>LOCAL_CREDS<sp/>are<sp/>configured<sp/>to<sp/>have<sp/>this<sp/>feature</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/><sp/><sp/>*<sp/>enabled<sp/>(if<sp/>it<sp/>does<sp/>not<sp/>conflict<sp/>with<sp/>HAVE_CMSGCRED)<sp/>prior<sp/>accepting</highlight></codeline>
<codeline lineno="1618"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>connection.<sp/><sp/>Therefore,<sp/>the<sp/>received<sp/>message<sp/>must<sp/>carry<sp/>the</highlight></codeline>
<codeline lineno="1619"><highlight class="comment"><sp/><sp/><sp/>*<sp/>credentials<sp/>information<sp/>without<sp/>doing<sp/>anything<sp/>special.</highlight></codeline>
<codeline lineno="1620"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/>iov.iov_base<sp/>=<sp/>&amp;buf;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>iov.iov_len<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(msg);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>msg.msg_iov<sp/>=<sp/>&amp;iov;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/>msg.msg_iovlen<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_CMSGCRED)<sp/>||<sp/>defined(LOCAL_CREDS)</highlight></codeline>
<codeline lineno="1630"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>_DBUS_ZERO(cmsg);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>msg.msg_control<sp/>=<sp/>(caddr_t)<sp/>&amp;cmsg;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>msg.msg_controllen<sp/>=<sp/>CMSG_SPACE<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cmsgcred));</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1634"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/>bytes_read<sp/>=<sp/>recvmsg<sp/>(client_fd,<sp/>&amp;msg,<sp/>0);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EAGAIN<sp/>or<sp/>EWOULDBLOCK<sp/>would<sp/>be<sp/>unexpected<sp/>here<sp/>since<sp/>we<sp/>would</highlight></codeline>
<codeline lineno="1644"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>normally<sp/>only<sp/>call<sp/>read_credentials<sp/>if<sp/>the<sp/>socket<sp/>was<sp/>ready</highlight></codeline>
<codeline lineno="1645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>reading</highlight></codeline>
<codeline lineno="1646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>credentials<sp/>byte:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>not<sp/>happen<sp/>unless<sp/>we<sp/>are<sp/>using<sp/>recvmsg<sp/>wrong,</highlight></codeline>
<codeline lineno="1656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>is<sp/>essentially<sp/>here<sp/>for<sp/>paranoia</highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member" tooltip="A generic error; &amp;quot;something went wrong&amp;quot; - see the error message for more.">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>credentials<sp/>byte<sp/>(zero-length<sp/>read)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member" tooltip="A generic error; &amp;quot;something went wrong&amp;quot; - see the error message for more.">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Credentials<sp/>byte<sp/>was<sp/>not<sp/>nul&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_CMSGCRED)<sp/>||<sp/>defined(LOCAL_CREDS)</highlight></codeline>
<codeline lineno="1670"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmsg.hdr.cmsg_len<sp/>&lt;<sp/>CMSG_LEN<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cmsgcred))</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>cmsg.hdr.cmsg_type<sp/>!=<sp/>SCM_CREDS)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member" tooltip="A generic error; &amp;quot;something went wrong&amp;quot; - see the error message for more.">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>from<sp/>recvmsg()<sp/>was<sp/>not<sp/>SCM_CREDS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1678"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;read<sp/>credentials<sp/>byte\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SO_PEERCRED</highlight></codeline>
<codeline lineno="1683"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__OpenBSD__</highlight></codeline>
<codeline lineno="1684"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockpeercred<sp/>cr;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1686"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ucred<sp/>cr;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1688"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cr_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(cr);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockopt<sp/>(client_fd,<sp/>SOL_SOCKET,<sp/>SO_PEERCRED,<sp/>&amp;cr,<sp/>&amp;cr_len)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_len<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(cr))</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_read<sp/>=<sp/>cr.pid;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid_read<sp/>=<sp/>cr.uid;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>getsockopt()<sp/>credentials,<sp/>returned<sp/>len<sp/>%d/%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_len,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(cr),<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_CMSGCRED)</highlight></codeline>
<codeline lineno="1702"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsgcred<sp/>*cred;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>cred<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsgcred<sp/>*)<sp/>CMSG_DATA<sp/>(&amp;cmsg.hdr);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_read<sp/>=<sp/>cred-&gt;cmcred_pid;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_read<sp/>=<sp/>cred-&gt;cmcred_euid;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(LOCAL_CREDS)</highlight></codeline>
<codeline lineno="1708"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>pid_read<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga4eb5f05dd6ad89caa4b0340e1cf0b8d9" kindref="member" tooltip="an invalid PID used to represent an uninitialized dbus_pid_t field">DBUS_PID_UNSET</ref>;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>uid_read<sp/>=<sp/>cmsg.cred.sc_uid;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>we<sp/>have<sp/>already<sp/>got<sp/>the<sp/>credentials<sp/>from<sp/>this<sp/>socket,<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="1711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>disable<sp/>its<sp/>LOCAL_CREDS<sp/>flag<sp/>if<sp/>it<sp/>was<sp/>ever<sp/>set.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_set_local_creds<sp/>(client_fd,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_GETPEEREID)</highlight></codeline>
<codeline lineno="1714"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>uid_t<sp/>euid;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>gid_t<sp/>egid;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getpeereid<sp/>(client_fd,<sp/>&amp;euid,<sp/>&amp;egid)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid_read<sp/>=<sp/>euid;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>getpeereid()<sp/>credentials:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_GETPEERUCRED)</highlight></codeline>
<codeline lineno="1725"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ucred_t<sp/>*<sp/>ucred<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getpeerucred<sp/>(client_fd,<sp/>&amp;ucred)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_read<sp/>=<sp/>ucred_getpid<sp/>(ucred);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid_read<sp/>=<sp/>ucred_geteuid<sp/>(ucred);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ADT</highlight></codeline>
<codeline lineno="1731"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>audit<sp/>session<sp/>data<sp/>based<sp/>on<sp/>socket<sp/>ucred<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adt_session_data_t<sp/>*adth<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adt_export_data_t<sp/>*data<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adt_start_session<sp/>(&amp;adth,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/>0)<sp/>||<sp/>(adth<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>))</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>adt_start_session():<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adt_set_from_ucred<sp/>(adth,<sp/>ucred,<sp/>ADT_NEW))</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>adt_set_from_ucred():<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>adt_export_session_data<sp/>(adth,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>adt_export_session_data():<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusCredentials_1gab26eb5cb8d05139806cf06e99c4ec5b0" kindref="member" tooltip="Add ADT audit data to the credentials.">_dbus_credentials_add_adt_audit_data</ref><sp/>(credentials,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(data);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>adt_end_session<sp/>(adth);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_ADT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>getpeerucred()<sp/>credentials:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucred<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ucred_free<sp/>(ucred);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!SO_PEERCRED<sp/>&amp;&amp;<sp/>!HAVE_CMSGCRED<sp/>&amp;&amp;<sp/>!HAVE_GETPEEREID<sp/>&amp;&amp;<sp/>!HAVE_GETPEERUCRED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Socket<sp/>credentials<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>OS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1771"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Credentials:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pid<sp/>&quot;</highlight><highlight class="normal"><ref refid="group__DBusSysdeps_1gaf4553a43e3b8c0e43d9148a00dcc3fa4" kindref="member" tooltip="an appropriate printf format for dbus_pid_t">DBUS_PID_FORMAT</ref></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>uid<sp/>&quot;</highlight><highlight class="normal"><ref refid="group__DBusSysdeps_1gab657f0434f01b463891942f373f7b4a1" kindref="member" tooltip="an appropriate printf format for dbus_uid_t">DBUS_UID_FORMAT</ref></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_read,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid_read);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid_read<sp/>!=<sp/><ref refid="group__DBusSysdeps_1ga4eb5f05dd6ad89caa4b0340e1cf0b8d9" kindref="member" tooltip="an invalid PID used to represent an uninitialized dbus_pid_t field">DBUS_PID_UNSET</ref>)</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusCredentials_1gaab529d2bbf26caaffc6fbe54e6507819" kindref="member" tooltip="Add a UNIX process ID to the credentials.">_dbus_credentials_add_unix_pid</ref><sp/>(credentials,<sp/>pid_read))</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uid_read<sp/>!=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>)</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusCredentials_1ga9cec6da43e4be233d44f5bd60b071624" kindref="member" tooltip="Add a UNIX user ID to the credentials.">_dbus_credentials_add_unix_uid</ref><sp/>(credentials,<sp/>uid_read))</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1819" refid="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" kindref="member" tooltip="Sends a single nul byte with our UNIX credentials as ancillary data.">_dbus_send_credentials_socket</ref><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_fd,</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_credentials_byte<sp/>(server_fd,<sp/>error))</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840" refid="group__DBusSysdeps_1ga687f4393a365474ec16f02e40c418cce" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga687f4393a365474ec16f02e40c418cce" kindref="member" tooltip="Accepts a connection on a listening socket.">_dbus_accept</ref><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>listen_fd)</highlight></codeline>
<codeline lineno="1841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>client_fd;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>addr;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>socklen_t<sp/>addrlen;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ACCEPT4</highlight></codeline>
<codeline lineno="1846"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>cloexec_done;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1848"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>addrlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(addr);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/>retry:</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ACCEPT4</highlight></codeline>
<codeline lineno="1854"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>assume<sp/>that<sp/>if<sp/>accept4<sp/>is<sp/>available<sp/>SOCK_CLOEXEC<sp/>is<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>client_fd<sp/>=<sp/>accept4<sp/>(listen_fd,<sp/>&amp;addr,<sp/>&amp;addrlen,<sp/>SOCK_CLOEXEC);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>cloexec_done<sp/>=<sp/>client_fd<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_fd<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOSYS)</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1860"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>client_fd<sp/>=<sp/>accept<sp/>(listen_fd,<sp/>&amp;addr,<sp/>&amp;addrlen);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_fd<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;client<sp/>fd<sp/>%d<sp/>accepted\n&quot;</highlight><highlight class="normal">,<sp/>client_fd);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ACCEPT4</highlight></codeline>
<codeline lineno="1873"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cloexec_done)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1875"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" kindref="member" tooltip="Sets the file descriptor to be close on exec.">_dbus_fd_set_close_on_exec</ref>(client_fd);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>client_fd;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1891" refid="group__DBusSysdeps_1ga8e16f75e361d9fed43223f69baf0e2a5" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga8e16f75e361d9fed43223f69baf0e2a5" kindref="member" tooltip="Checks to make sure the given directory is private to the user.">_dbus_check_dir_is_private_to_user</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*dir,<sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="1892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*directory;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>sb;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>directory<sp/>=<sp/>_dbus_string_get_const_data<sp/>(dir);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>(directory,<sp/>&amp;sb)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((S_IROTH<sp/>&amp;<sp/>sb.st_mode)<sp/>||<sp/>(S_IWOTH<sp/>&amp;<sp/>sb.st_mode)<sp/>||</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(S_IRGRP<sp/>&amp;<sp/>sb.st_mode)<sp/>||<sp/>(S_IWGRP<sp/>&amp;<sp/>sb.st_mode))</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member" tooltip="A generic error; &amp;quot;something went wrong&amp;quot; - see the error message for more.">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>directory<sp/>is<sp/>not<sp/>private<sp/>to<sp/>the<sp/>user&quot;</highlight><highlight class="normal">,<sp/>directory);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1920"><highlight class="normal">fill_user_info_from_passwd<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>passwd<sp/>*p,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusUserInfo" kindref="compound" tooltip="Information about a UNIX user.">DBusUserInfo</ref><sp/><sp/>*info,</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(p-&gt;pw_name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(p-&gt;pw_dir<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a2d9c74d29f371e391a79b81162050b2e" kindref="member" tooltip="UID.">uid</ref><sp/>=<sp/>p-&gt;pw_uid;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1ac970de2fac9ea4ba91485e6c37c3bf93" kindref="member" tooltip="GID.">primary_gid</ref><sp/>=<sp/>p-&gt;pw_gid;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1ac6b57db1dc8315eee3f532f4e77912d1" kindref="member" tooltip="Username.">username</ref><sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" kindref="member" tooltip="Duplicates a string.">_dbus_strdup</ref><sp/>(p-&gt;pw_name);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a5235d4d021cd134e1130e1e8e912bc0c" kindref="member" tooltip="Home directory.">homedir</ref><sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" kindref="member" tooltip="Duplicates a string.">_dbus_strdup</ref><sp/>(p-&gt;pw_dir);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structDBusUserInfo_1ac6b57db1dc8315eee3f532f4e77912d1" kindref="member" tooltip="Username.">username</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a5235d4d021cd134e1130e1e8e912bc0c" kindref="member" tooltip="Home directory.">homedir</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1943"><highlight class="normal">fill_user_info<sp/>(<ref refid="structDBusUserInfo" kindref="compound" tooltip="Information about a UNIX user.">DBusUserInfo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*info,</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid,</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/>*username,</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*username_c;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>exactly<sp/>one<sp/>of<sp/>username/uid<sp/>provided<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(username<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref><sp/>||<sp/>uid<sp/>!=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(username<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref><sp/>||<sp/>uid<sp/>==<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a2d9c74d29f371e391a79b81162050b2e" kindref="member" tooltip="UID.">uid</ref><sp/>=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1ac970de2fac9ea4ba91485e6c37c3bf93" kindref="member" tooltip="GID.">primary_gid</ref><sp/>=<sp/><ref refid="group__DBusSysdeps_1ga768a080926a119a6131083facc0bd42b" kindref="member" tooltip="an invalid GID used to represent an uninitialized dbus_gid_t field">DBUS_GID_UNSET</ref>;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" kindref="member" tooltip="Groups IDs, *including* above primary group.">group_ids</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a21c07867fbffb1854a97aed265d87c89" kindref="member" tooltip="Size of group IDs array.">n_group_ids</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1ac6b57db1dc8315eee3f532f4e77912d1" kindref="member" tooltip="Username.">username</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a5235d4d021cd134e1130e1e8e912bc0c" kindref="member" tooltip="Home directory.">homedir</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(username<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>username_c<sp/>=<sp/>_dbus_string_get_const_data<sp/>(username);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>username_c<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>now<sp/>assuming<sp/>that<sp/>the<sp/>getpwnam()<sp/>and<sp/>getpwuid()<sp/>flavors</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/><sp/><sp/>*<sp/>are<sp/>always<sp/>symmetrical,<sp/>if<sp/>not<sp/>we<sp/>have<sp/>to<sp/>add<sp/>more<sp/>configure</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/><sp/><sp/>*<sp/>checks</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(HAVE_POSIX_GETPWNAM_R)<sp/>||<sp/>defined<sp/>(HAVE_NONPOSIX_GETPWNAM_R)</highlight></codeline>
<codeline lineno="1972"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>*p;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buflen;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>p_str;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>retrieve<sp/>maximum<sp/>needed<sp/>size<sp/>for<sp/>buf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>buflen<sp/>=<sp/>sysconf<sp/>(_SC_GETPW_R_SIZE_MAX);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sysconf<sp/>actually<sp/>returns<sp/>a<sp/>long,<sp/>but<sp/>everything<sp/>else<sp/>expects<sp/>size_t,</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>just<sp/>recast<sp/>here.</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>https://bugs.freedesktop.org/show_bug.cgi?id=17061</highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>buflen<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buflen<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/><ref refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" kindref="member" tooltip="Allocates the given number of bytes, as with standard malloc().">dbus_malloc</ref><sp/>(buflen);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_POSIX_GETPWNAM_R</highlight></codeline>
<codeline lineno="2001"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uid<sp/>!=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>getpwuid_r<sp/>(uid,<sp/>&amp;p_str,<sp/>buf,<sp/>buflen,</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>getpwnam_r<sp/>(username_c,<sp/>&amp;p_str,<sp/>buf,<sp/>buflen,</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2008"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uid<sp/>!=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>getpwuid_r<sp/>(uid,<sp/>&amp;p_str,<sp/>buf,<sp/>buflen);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>getpwnam_r<sp/>(username_c,<sp/>&amp;p_str,<sp/>buf,<sp/>buflen);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!HAVE_POSIX_GETPWNAM_R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Try<sp/>a<sp/>bigger<sp/>buffer<sp/>if<sp/>ERANGE<sp/>was<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>ERANGE<sp/>&amp;&amp;<sp/>buflen<sp/>&lt;<sp/>512<sp/>*<sp/>1024)</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buflen<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>p<sp/>==<sp/>&amp;p_str)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fill_user_info_from_passwd<sp/>(p,<sp/>info,<sp/>error))</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;User<sp/>\&quot;%s\&quot;<sp/>unknown<sp/>or<sp/>no<sp/>memory<sp/>to<sp/>allocate<sp/>password<sp/>entry\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>username_c<sp/>?<sp/>username_c<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;???&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;User<sp/>%s<sp/>unknown\n&quot;</highlight><highlight class="normal">,<sp/>username_c<sp/>?<sp/>username_c<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;???&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>HAVE_GETPWNAM_R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>guess<sp/>we&apos;re<sp/>screwed<sp/>on<sp/>thread<sp/>safety<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>*p;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uid<sp/>!=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>getpwuid<sp/>(uid);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>getpwnam<sp/>(username_c);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fill_user_info_from_passwd<sp/>(p,<sp/>info,<sp/>error))</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;User<sp/>\&quot;%s\&quot;<sp/>unknown<sp/>or<sp/>no<sp/>memory<sp/>to<sp/>allocate<sp/>password<sp/>entry\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>username_c<sp/>?<sp/>username_c<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;???&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;User<sp/>%s<sp/>unknown\n&quot;</highlight><highlight class="normal">,<sp/>username_c<sp/>?<sp/>username_c<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;???&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>!<sp/>HAVE_GETPWNAM_R<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>this<sp/>in<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it<sp/>to<sp/>get<sp/>groups<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/>username_c<sp/>=<sp/>info-&gt;<ref refid="structDBusUserInfo_1ac6b57db1dc8315eee3f532f4e77912d1" kindref="member" tooltip="Username.">username</ref>;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GETGROUPLIST</highlight></codeline>
<codeline lineno="2076"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>gid_t<sp/>*buf;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_count;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_buf_count;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_buf_count<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_count<sp/>=<sp/>initial_buf_count;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member" tooltip="Safe macro for using dbus_malloc().">dbus_new</ref><sp/>(gid_t,<sp/>buf_count);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getgrouplist<sp/>(username_c,</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1ac970de2fac9ea4ba91485e6c37c3bf93" kindref="member" tooltip="GID.">primary_gid</ref>,</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/>&amp;buf_count)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gid_t<sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Presumed<sp/>cause<sp/>of<sp/>negative<sp/>return<sp/>code:<sp/>buf<sp/>has<sp/>insufficient</highlight></codeline>
<codeline lineno="2097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries<sp/>to<sp/>hold<sp/>the<sp/>entire<sp/>group<sp/>list.<sp/>The<sp/>Linux<sp/>behavior<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="2098"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>is<sp/>to<sp/>pass<sp/>back<sp/>the<sp/>actual<sp/>number<sp/>of<sp/>groups<sp/>in<sp/>buf_count,<sp/>but</highlight></codeline>
<codeline lineno="2099"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>Mac<sp/>OS<sp/>X<sp/>10.5,<sp/>buf_count<sp/>is<sp/>unhelpfully<sp/>left<sp/>alone.</highlight></codeline>
<codeline lineno="2100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>So<sp/>as<sp/>a<sp/>hack,<sp/>try<sp/>to<sp/>help<sp/>out<sp/>a<sp/>bit<sp/>by<sp/>guessing<sp/>a<sp/>larger</highlight></codeline>
<codeline lineno="2101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>groups,<sp/>within<sp/>reason..<sp/>might<sp/>still<sp/>fail,<sp/>of<sp/>course,</highlight></codeline>
<codeline lineno="2102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>we<sp/>can<sp/>at<sp/>least<sp/>print<sp/>a<sp/>more<sp/>informative<sp/>message.<sp/><sp/>I<sp/>looked<sp/>up</highlight></codeline>
<codeline lineno="2103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>&quot;right<sp/>way&quot;<sp/>to<sp/>do<sp/>this<sp/>by<sp/>downloading<sp/>Apple&apos;s<sp/>own<sp/>source<sp/>code</highlight></codeline>
<codeline lineno="2104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>&quot;id&quot;<sp/>command,<sp/>and<sp/>it<sp/>turns<sp/>out<sp/>that<sp/>they<sp/>use<sp/>an</highlight></codeline>
<codeline lineno="2105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented<sp/>library<sp/>function<sp/>getgrouplist_2<sp/>(!)<sp/>which<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>declared<sp/>in<sp/>any<sp/>header<sp/>in<sp/>/usr/include<sp/>(!!).<sp/>That<sp/>did<sp/>not<sp/>seem</highlight></codeline>
<codeline lineno="2107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>like<sp/>the<sp/>way<sp/>to<sp/>go<sp/>here.</highlight></codeline>
<codeline lineno="2108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_count<sp/>==<sp/>initial_buf_count)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_count<sp/>*=<sp/>16;<sp/></highlight><highlight class="comment">/*<sp/>Retry<sp/>with<sp/>an<sp/>arbitrarily<sp/>scaled-up<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" kindref="member" tooltip="Resizes a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_realloc</ref><sp/>(buf,<sp/>buf_count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf[0]));</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getgrouplist<sp/>(username_c,<sp/>info-&gt;<ref refid="structDBusUserInfo_1ac970de2fac9ea4ba91485e6c37c3bf93" kindref="member" tooltip="GID.">primary_gid</ref>,<sp/>buf,<sp/>&amp;buf_count)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member" tooltip="Prints a warning message to stderr.">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;It<sp/>appears<sp/>that<sp/>username<sp/>\&quot;%s\&quot;<sp/>is<sp/>in<sp/>more<sp/>than<sp/>%d<sp/>groups.\nProceeding<sp/>with<sp/>just<sp/>the<sp/>first<sp/>%d<sp/>groups.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>username_c,<sp/>buf_count,<sp/>buf_count);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>groups<sp/>for<sp/>username<sp/>\&quot;%s\&quot;<sp/>primary<sp/>GID<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1gaaab5918b2ae57886d9783df09bd61c7e" kindref="member" tooltip="an appropriate printf format for dbus_gid_t">DBUS_GID_FORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>username_c,<sp/>info-&gt;<ref refid="structDBusUserInfo_1ac970de2fac9ea4ba91485e6c37c3bf93" kindref="member" tooltip="GID.">primary_gid</ref>,</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" kindref="member" tooltip="Groups IDs, *including* above primary group.">group_ids</ref><sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member" tooltip="Safe macro for using dbus_malloc().">dbus_new</ref><sp/>(<ref refid="group__DBusSysdeps_1ga2f5c2e418b81ec2a86594f56ec6d7627" kindref="member" tooltip="A group ID.">dbus_gid_t</ref>,<sp/>buf_count);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" kindref="member" tooltip="Groups IDs, *including* above primary group.">group_ids</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>buf_count;<sp/>++i)</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" kindref="member" tooltip="Groups IDs, *including* above primary group.">group_ids</ref>[i]<sp/>=<sp/>buf[i];</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a21c07867fbffb1854a97aed265d87c89" kindref="member" tooltip="Size of group IDs array.">n_group_ids</ref><sp/>=<sp/>buf_count;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">/*<sp/>HAVE_GETGROUPLIST<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>just<sp/>get<sp/>the<sp/>one<sp/>group<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" kindref="member" tooltip="Groups IDs, *including* above primary group.">group_ids</ref><sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member" tooltip="Safe macro for using dbus_malloc().">dbus_new</ref><sp/>(<ref refid="group__DBusSysdeps_1ga2f5c2e418b81ec2a86594f56ec6d7627" kindref="member" tooltip="A group ID.">dbus_gid_t</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" kindref="member" tooltip="Groups IDs, *including* above primary group.">group_ids</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member" tooltip="There was not enough memory to complete an operation.">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="structDBusUserInfo_1a21c07867fbffb1854a97aed265d87c89" kindref="member" tooltip="Size of group IDs array.">n_group_ids</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>(info-&gt;<ref refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" kindref="member" tooltip="Groups IDs, *including* above primary group.">group_ids</ref>)[0]<sp/>=<sp/>info-&gt;<ref refid="structDBusUserInfo_1ac970de2fac9ea4ba91485e6c37c3bf93" kindref="member" tooltip="GID.">primary_gid</ref>;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_GETGROUPLIST<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/>failed:</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET<sp/>(error);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2194" refid="group__DBusSysdepsUnix_1ga95e9deb9dd2d76aa3a64fdac555d956d" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga95e9deb9dd2d76aa3a64fdac555d956d" kindref="member" tooltip="Gets user info for the given username.">_dbus_user_info_fill</ref><sp/>(<ref refid="structDBusUserInfo" kindref="compound" tooltip="Information about a UNIX user.">DBusUserInfo</ref><sp/><sp/><sp/><sp/><sp/>*info,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*username,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fill_user_info<sp/>(info,<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>username,<sp/>error);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2211" refid="group__DBusSysdepsUnix_1gafcc2fbcde2c72f499f04fa43d97dfcec" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1gafcc2fbcde2c72f499f04fa43d97dfcec" kindref="member" tooltip="Gets user info for the given user ID.">_dbus_user_info_fill_uid</ref><sp/>(<ref refid="structDBusUserInfo" kindref="compound" tooltip="Information about a UNIX user.">DBusUserInfo</ref><sp/>*info,</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref><sp/><sp/><sp/><sp/>uid,</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fill_user_info<sp/>(info,<sp/>uid,</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/>error);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2227" refid="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" kindref="member" tooltip="Adds the credentials of the current process to the passed-in credentials object.">_dbus_credentials_add_from_current_process</ref><sp/>(<ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref><sp/>*credentials)</highlight></codeline>
<codeline lineno="2228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>POSIX<sp/>spec<sp/>certainly<sp/>doesn&apos;t<sp/>promise<sp/>this,<sp/>but</highlight></codeline>
<codeline lineno="2230"><highlight class="comment"><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>these<sp/>assertions<sp/>to<sp/>fail<sp/>as<sp/>soon<sp/>as<sp/>we&apos;re<sp/>wrong<sp/>about</highlight></codeline>
<codeline lineno="2231"><highlight class="comment"><sp/><sp/><sp/>*<sp/>it<sp/>so<sp/>we<sp/>can<sp/>do<sp/>the<sp/>porting<sp/>fixups</highlight></codeline>
<codeline lineno="2232"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(pid_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member" tooltip="A process ID.">dbus_pid_t</ref>));</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(uid_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref>));</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(gid_t)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga2f5c2e418b81ec2a86594f56ec6d7627" kindref="member" tooltip="A group ID.">dbus_gid_t</ref>));</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusCredentials_1gaab529d2bbf26caaffc6fbe54e6507819" kindref="member" tooltip="Add a UNIX process ID to the credentials.">_dbus_credentials_add_unix_pid</ref>(credentials,<sp/><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member" tooltip="Gets our process ID.">_dbus_getpid</ref>()))</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusCredentials_1ga9cec6da43e4be233d44f5bd60b071624" kindref="member" tooltip="Add a UNIX user ID to the credentials.">_dbus_credentials_add_unix_uid</ref>(credentials,<sp/><ref refid="group__DBusSysdepsUnix_1ga50438942c6e9f4027ea555a09d758ca3" kindref="member" tooltip="Gets our effective UID.">_dbus_geteuid</ref>()))</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2257" refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" kindref="member" tooltip="Append to the string the identity we would like to have when we authenticate, on UNIX this is the cur...">_dbus_append_user_from_current_process</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str)</highlight></codeline>
<codeline lineno="2258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusString_1gaa63064881001085159c78204f70acde8" kindref="member" tooltip="Appends an unsigned integer to a DBusString.">_dbus_string_append_uint</ref><sp/>(str,</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1ga50438942c6e9f4027ea555a09d758ca3" kindref="member" tooltip="Gets our effective UID.">_dbus_geteuid</ref><sp/>());</highlight></codeline>
<codeline lineno="2261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member" tooltip="A process ID.">dbus_pid_t</ref></highlight></codeline>
<codeline lineno="2268" refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member" tooltip="Gets our process ID.">_dbus_getpid</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getpid<sp/>();</highlight></codeline>
<codeline lineno="2271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref></highlight></codeline>
<codeline lineno="2277" refid="group__DBusSysdepsUnix_1gae7701063932951bdd8a7df0dcacb3bab" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1gae7701063932951bdd8a7df0dcacb3bab" kindref="member" tooltip="Gets our UID.">_dbus_getuid</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getuid<sp/>();</highlight></codeline>
<codeline lineno="2280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref></highlight></codeline>
<codeline lineno="2286" refid="group__DBusSysdepsUnix_1ga50438942c6e9f4027ea555a09d758ca3" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga50438942c6e9f4027ea555a09d758ca3" kindref="member" tooltip="Gets our effective UID.">_dbus_geteuid</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>geteuid<sp/>();</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298" refid="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" kindref="member" tooltip="The only reason this is separate from _dbus_getpid() is to allow it on Windows for logging but not fo...">_dbus_pid_for_log</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getpid<sp/>();</highlight></codeline>
<codeline lineno="2301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2311" refid="group__DBusSysdepsUnix_1ga5a1854d99394d4593522ff5f2ca380d9" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga5a1854d99394d4593522ff5f2ca380d9" kindref="member" tooltip="Gets a UID from a UID string.">_dbus_parse_uid</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/>*uid_str,</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*uid)</highlight></codeline>
<codeline lineno="2313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(uid_str)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;UID<sp/>string<sp/>was<sp/>zero<sp/>length\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga93e22894a5e2e0d65c179c7d36a8b1c8" kindref="member" tooltip="Parses an integer contained in a DBusString.">_dbus_string_parse_int</ref><sp/>(uid_str,<sp/>0,<sp/>&amp;val,</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;end))</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>parse<sp/>string<sp/>as<sp/>a<sp/>UID\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/>_dbus_string_get_length<sp/>(uid_str))</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;string<sp/>contained<sp/>trailing<sp/>stuff<sp/>after<sp/>UID\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>*uid<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!DBUS_USE_SYNC</highlight></codeline>
<codeline lineno="2344"><highlight class="preprocessor"></highlight><highlight class="normal">_DBUS_DEFINE_GLOBAL_LOCK<sp/>(atomic);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2346"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal">dbus_int32_t</highlight></codeline>
<codeline lineno="2354" refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member" tooltip="Atomically increments an integer.">_dbus_atomic_inc</ref><sp/>(<ref refid="structDBusAtomic" kindref="compound" tooltip="An atomic integer safe to increment or decrement from multiple threads.">DBusAtomic</ref><sp/>*atomic)</highlight></codeline>
<codeline lineno="2355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DBUS_USE_SYNC</highlight></codeline>
<codeline lineno="2357"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__sync_add_and_fetch(&amp;atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref>,<sp/>1)-1;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2359"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>dbus_int32_t<sp/>res;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/>_DBUS_LOCK<sp/>(atomic);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref>;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/>atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/>_DBUS_UNLOCK<sp/>(atomic);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2366"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal">dbus_int32_t</highlight></codeline>
<codeline lineno="2375" refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" kindref="member" tooltip="Atomically decrement an integer.">_dbus_atomic_dec</ref><sp/>(<ref refid="structDBusAtomic" kindref="compound" tooltip="An atomic integer safe to increment or decrement from multiple threads.">DBusAtomic</ref><sp/>*atomic)</highlight></codeline>
<codeline lineno="2376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DBUS_USE_SYNC</highlight></codeline>
<codeline lineno="2378"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__sync_sub_and_fetch(&amp;atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref>,<sp/>1)+1;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2380"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>dbus_int32_t<sp/>res;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/>_DBUS_LOCK<sp/>(atomic);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref>;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/>atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>_DBUS_UNLOCK<sp/>(atomic);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2388"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal">dbus_int32_t</highlight></codeline>
<codeline lineno="2398" refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" kindref="member" tooltip="Atomically get the value of an integer.">_dbus_atomic_get</ref><sp/>(<ref refid="structDBusAtomic" kindref="compound" tooltip="An atomic integer safe to increment or decrement from multiple threads.">DBusAtomic</ref><sp/>*atomic)</highlight></codeline>
<codeline lineno="2399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DBUS_USE_SYNC</highlight></codeline>
<codeline lineno="2401"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__sync_synchronize<sp/>();</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref>;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2404"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>dbus_int32_t<sp/>res;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>_DBUS_LOCK<sp/>(atomic);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member" tooltip="Value of the atomic integer.">value</ref>;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/>_DBUS_UNLOCK<sp/>(atomic);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2411"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_BUILD_TESTS</highlight></codeline>
<codeline lineno="2414"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga2f5c2e418b81ec2a86594f56ec6d7627" kindref="member" tooltip="A group ID.">dbus_gid_t</ref></highlight></codeline>
<codeline lineno="2418"><highlight class="normal">_dbus_getgid<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getgid<sp/>();</highlight></codeline>
<codeline lineno="2421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2423"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2432"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433" refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" kindref="member" tooltip="Wrapper for poll().">_dbus_poll</ref><sp/>(<ref refid="structDBusPollFD" kindref="compound" tooltip="A portable struct pollfd wrapper.">DBusPollFD</ref><sp/>*fds,</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_fds,</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_milliseconds)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_POLL)<sp/>&amp;&amp;<sp/>!defined(BROKEN_POLL)</highlight></codeline>
<codeline lineno="2438"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>big<sp/>thing<sp/>is<sp/>a<sp/>constant<sp/>expression<sp/>and<sp/>should<sp/>get<sp/>optimized</highlight></codeline>
<codeline lineno="2439"><highlight class="comment"><sp/><sp/><sp/>*<sp/>out<sp/>of<sp/>existence.<sp/>So<sp/>it&apos;s<sp/>more<sp/>robust<sp/>than<sp/>a<sp/>configure<sp/>check<sp/>at</highlight></codeline>
<codeline lineno="2440"><highlight class="comment"><sp/><sp/><sp/>*<sp/>no<sp/>cost.</highlight></codeline>
<codeline lineno="2441"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member" tooltip="There is data to read.">_DBUS_POLLIN</ref><sp/>==<sp/>POLLIN<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga1db7d09a41912c10978c6a4955d9a9d2" kindref="member" tooltip="There is urgent data to read.">_DBUS_POLLPRI</ref><sp/>==<sp/>POLLPRI<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member" tooltip="Writing now will not block.">_DBUS_POLLOUT</ref><sp/>==<sp/>POLLOUT<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member" tooltip="Error condition.">_DBUS_POLLERR</ref><sp/>==<sp/>POLLERR<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" kindref="member" tooltip="Hung up.">_DBUS_POLLHUP</ref><sp/>==<sp/>POLLHUP<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga83bf3d24f3a1a853dda794835c39fc6f" kindref="member" tooltip="Invalid request: fd not open.">_DBUS_POLLNVAL</ref><sp/>==<sp/>POLLNVAL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="structDBusPollFD" kindref="compound" tooltip="A portable struct pollfd wrapper.">DBusPollFD</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_STRUCT_OFFSET<sp/>(<ref refid="structDBusPollFD" kindref="compound" tooltip="A portable struct pollfd wrapper.">DBusPollFD</ref>,<sp/>fd)<sp/>==</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_STRUCT_OFFSET<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd,<sp/>fd)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_STRUCT_OFFSET<sp/>(<ref refid="structDBusPollFD" kindref="compound" tooltip="A portable struct pollfd wrapper.">DBusPollFD</ref>,<sp/>events)<sp/>==</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_STRUCT_OFFSET<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd,<sp/>events)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_STRUCT_OFFSET<sp/>(<ref refid="structDBusPollFD" kindref="compound" tooltip="A portable struct pollfd wrapper.">DBusPollFD</ref>,<sp/>revents)<sp/>==</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_STRUCT_OFFSET<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd,<sp/>revents))</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>poll<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd*)<sp/>fds,</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_fds,</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_milliseconds);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>to<sp/>convert<sp/>the<sp/>DBusPollFD<sp/>to<sp/>an<sp/>array<sp/>of</highlight></codeline>
<codeline lineno="2463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>struct<sp/>pollfd,<sp/>poll,<sp/>and<sp/>convert<sp/>back.</highlight></codeline>
<codeline lineno="2464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member" tooltip="Prints a warning message to stderr.">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;didn&apos;t<sp/>implement<sp/>poll()<sp/>properly<sp/>for<sp/>this<sp/>system<sp/>yet\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>HAVE_POLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>fd_set<sp/>read_set,<sp/>write_set,<sp/>err_set;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_fd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ready;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/>FD_ZERO<sp/>(&amp;read_set);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/>FD_ZERO<sp/>(&amp;write_set);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/>FD_ZERO<sp/>(&amp;err_set);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound" tooltip="A portable struct pollfd wrapper.">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member" tooltip="Events to poll for.">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member" tooltip="There is data to read.">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member" tooltip="File descriptor.">fd</ref>,<sp/>&amp;read_set);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member" tooltip="Events to poll for.">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member" tooltip="Writing now will not block.">_DBUS_POLLOUT</ref>)</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member" tooltip="File descriptor.">fd</ref>,<sp/>&amp;write_set);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member" tooltip="File descriptor.">fd</ref>,<sp/>&amp;err_set);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_fd<sp/>=<sp/>MAX<sp/>(max_fd,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member" tooltip="File descriptor.">fd</ref>);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/>tv.tv_sec<sp/>=<sp/>timeout_milliseconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/>tv.tv_usec<sp/>=<sp/>(timeout_milliseconds<sp/>%<sp/>1000)<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/>ready<sp/>=<sp/>select<sp/>(max_fd<sp/>+<sp/>1,<sp/>&amp;read_set,<sp/>&amp;write_set,<sp/>&amp;err_set,</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_milliseconds<sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref><sp/>:<sp/>&amp;tv);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ready<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound" tooltip="A portable struct pollfd wrapper.">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member" tooltip="Events that occurred.">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member" tooltip="File descriptor.">fd</ref>,<sp/>&amp;read_set))</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member" tooltip="Events that occurred.">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member" tooltip="There is data to read.">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member" tooltip="File descriptor.">fd</ref>,<sp/>&amp;write_set))</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member" tooltip="Events that occurred.">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member" tooltip="Writing now will not block.">_DBUS_POLLOUT</ref>;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member" tooltip="File descriptor.">fd</ref>,<sp/>&amp;err_set))</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member" tooltip="Events that occurred.">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member" tooltip="Error condition.">_DBUS_POLLERR</ref>;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ready;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2522"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532" refid="group__DBusSysdeps_1ga4e3cbe529fc3e7984ed6553672e085f8" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga4e3cbe529fc3e7984ed6553672e085f8" kindref="member" tooltip="Get current time, as in gettimeofday().">_dbus_get_current_time</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*tv_sec,</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*tv_usec)</highlight></codeline>
<codeline lineno="2534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>t;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MONOTONIC_CLOCK</highlight></codeline>
<codeline lineno="2538"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>ts;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/>clock_gettime<sp/>(CLOCK_MONOTONIC,<sp/>&amp;ts);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tv_sec)</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/>*tv_sec<sp/>=<sp/>ts.tv_sec;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tv_usec)</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>*tv_usec<sp/>=<sp/>ts.tv_nsec<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2546"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>gettimeofday<sp/>(&amp;t,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tv_sec)</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>*tv_sec<sp/>=<sp/>t.tv_sec;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tv_usec)</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>*tv_usec<sp/>=<sp/>t.tv_usec;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2553"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2564" refid="group__DBusSysdeps_1gaa47156dedbe573ee9b213d1fd3f7bb79" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gaa47156dedbe573ee9b213d1fd3f7bb79" kindref="member" tooltip="Creates a directory; succeeds if the directory is created or already existed.">_dbus_create_directory</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*filename,</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename_c;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/>filename_c<sp/>=<sp/>_dbus_string_get_const_data<sp/>(filename);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mkdir<sp/>(filename_c,<sp/>0700)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EEXIST)</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member" tooltip="A generic error; &amp;quot;something went wrong&amp;quot; - see the error message for more.">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>directory<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_c,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2598" refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" kindref="member" tooltip="Appends the given filename to the given directory.">_dbus_concat_dir_and_file</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dir,</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*next_component)</highlight></codeline>
<codeline lineno="2600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>dir_ends_in_slash;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>file_starts_with_slash;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(dir)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(next_component)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/>dir_ends_in_slash<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>==<sp/>_dbus_string_get_byte<sp/>(dir,</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(dir)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/>file_starts_with_slash<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>==<sp/>_dbus_string_get_byte<sp/>(next_component,<sp/>0);</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir_ends_in_slash<sp/>&amp;&amp;<sp/>file_starts_with_slash)</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga7af1cbfa905f26d972ab644d890548b8" kindref="member" tooltip="Makes a string shorter by the given number of bytes.">_dbus_string_shorten</ref><sp/>(dir,<sp/>1);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(dir_ends_in_slash<sp/>||<sp/>file_starts_with_slash))</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaa6ecf36e70263659f921a4ef0335db12" kindref="member" tooltip="Appends a single byte to the string, returning FALSE if not enough memory.">_dbus_string_append_byte</ref><sp/>(dir,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member" tooltip="Like _dbus_string_move(), but does not delete the section of the source string that&amp;#39;s copied to the d...">_dbus_string_copy</ref><sp/>(next_component,<sp/>0,<sp/>dir,</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(dir));</highlight></codeline>
<codeline lineno="2625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="preprocessor">#define<sp/>NANOSECONDS_PER_SECOND<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000000000</highlight></codeline>
<codeline lineno="2629"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2630"><highlight class="preprocessor">#define<sp/>MICROSECONDS_PER_SECOND<sp/><sp/><sp/><sp/><sp/><sp/>1000000</highlight></codeline>
<codeline lineno="2631"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2632"><highlight class="preprocessor">#define<sp/>MILLISECONDS_PER_SECOND<sp/><sp/><sp/><sp/><sp/><sp/>1000</highlight></codeline>
<codeline lineno="2633"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2634"><highlight class="preprocessor">#define<sp/>NANOSECONDS_PER_MILLISECOND<sp/><sp/>1000000</highlight></codeline>
<codeline lineno="2635"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2636"><highlight class="preprocessor">#define<sp/>MICROSECONDS_PER_MILLISECOND<sp/>1000</highlight></codeline>
<codeline lineno="2637"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2642"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643" refid="group__DBusSysdeps_1ga1153b4669819148af6b3f6f2b7c9183a" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga1153b4669819148af6b3f6f2b7c9183a" kindref="member" tooltip="Sleeps the given number of milliseconds.">_dbus_sleep_milliseconds</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds)</highlight></codeline>
<codeline lineno="2644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_NANOSLEEP</highlight></codeline>
<codeline lineno="2646"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>req;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>rem;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/>req.tv_sec<sp/>=<sp/>milliseconds<sp/>/<sp/>MILLISECONDS_PER_SECOND;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/>req.tv_nsec<sp/>=<sp/>(milliseconds<sp/>%<sp/>MILLISECONDS_PER_SECOND)<sp/>*<sp/>NANOSECONDS_PER_MILLISECOND;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/>rem.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/>rem.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nanosleep<sp/>(&amp;req,<sp/>&amp;rem)<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/>req<sp/>=<sp/>rem;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(HAVE_USLEEP)</highlight></codeline>
<codeline lineno="2657"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>usleep<sp/>(milliseconds<sp/>*<sp/>MICROSECONDS_PER_MILLISECOND);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>HAVE_USLEEP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/>sleep<sp/>(MAX<sp/>(milliseconds<sp/>/<sp/>1000,<sp/>1));</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2661"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2664"><highlight class="normal">_dbus_generate_pseudorandom_bytes<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_bytes)</highlight></codeline>
<codeline lineno="2666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_len;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/>old_len<sp/>=<sp/>_dbus_string_get_length<sp/>(str);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" kindref="member" tooltip="Makes a string longer by the given number of bytes.">_dbus_string_lengthen</ref><sp/>(str,<sp/>n_bytes))</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" kindref="member" tooltip="Gets a sub-portion of the raw character buffer from the string.">_dbus_string_get_data_len</ref><sp/>(str,<sp/>old_len,<sp/>n_bytes);</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gafb4454c18ee8e5bcc20dbccd93e1d9ba" kindref="member" tooltip="Random numbers.">_dbus_generate_pseudorandom_bytes_buffer</ref><sp/>(p,<sp/>n_bytes);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2691" refid="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" kindref="member" tooltip="Generates the given number of random bytes, using the best mechanism we can come up with...">_dbus_generate_random_bytes</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_bytes)</highlight></codeline>
<codeline lineno="2693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_len;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FALSE<sp/>return<sp/>means<sp/>&quot;no<sp/>memory&quot;,<sp/>if<sp/>it<sp/>could</highlight></codeline>
<codeline lineno="2698"><highlight class="comment"><sp/><sp/><sp/>*<sp/>mean<sp/>something<sp/>else<sp/>then<sp/>we&apos;d<sp/>need<sp/>to<sp/>return</highlight></codeline>
<codeline lineno="2699"><highlight class="comment"><sp/><sp/><sp/>*<sp/>a<sp/>DBusError.<sp/>So<sp/>we<sp/>always<sp/>fall<sp/>back<sp/>to<sp/>pseudorandom</highlight></codeline>
<codeline lineno="2700"><highlight class="comment"><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>I/O<sp/>fails.</highlight></codeline>
<codeline lineno="2701"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/>old_len<sp/>=<sp/>_dbus_string_get_length<sp/>(str);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/>fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>note,<sp/>urandom<sp/>on<sp/>linux<sp/>will<sp/>fall<sp/>back<sp/>to<sp/>pseudorandom<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/>fd<sp/>=<sp/>open<sp/>(</highlight><highlight class="stringliteral">&quot;/dev/urandom&quot;</highlight><highlight class="normal">,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_generate_pseudorandom_bytes<sp/>(str,<sp/>n_bytes);</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;/dev/urandom<sp/>fd<sp/>%d<sp/>opened\n&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member" tooltip="Thin wrapper around the read() system call that appends the data it reads to the DBusString buffer...">_dbus_read</ref><sp/>(fd,<sp/>str,<sp/>n_bytes)<sp/>!=<sp/>n_bytes)</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(str,<sp/>old_len);</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_generate_pseudorandom_bytes<sp/>(str,<sp/>n_bytes);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Read<sp/>%d<sp/>bytes<sp/>from<sp/>/dev/urandom\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_bytes);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734" refid="group__DBusSysdeps_1ga203e3257b50597a8fe7757c920474a20" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga203e3257b50597a8fe7757c920474a20" kindref="member" tooltip="Exit the process, returning the given value.">_dbus_exit</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code)</highlight></codeline>
<codeline lineno="2735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/>_exit<sp/>(code);</highlight></codeline>
<codeline lineno="2737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="2748"><highlight class="normal">_dbus_strerror<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_number)</highlight></codeline>
<codeline lineno="2749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/>msg<sp/>=<sp/>strerror<sp/>(error_number);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763" refid="group__DBusSysdeps_1ga6890d4cde3afec0bf274ca2af8c9e204" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6890d4cde3afec0bf274ca2af8c9e204" kindref="member" tooltip="signal (SIGPIPE, SIG_IGN);">_dbus_disable_sigpipe</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/>signal<sp/>(SIGPIPE,<sp/>SIG_IGN);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2776" refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" kindref="member" tooltip="Sets the file descriptor to be close on exec.">_dbus_fd_set_close_on_exec</ref><sp/>(intptr_t<sp/>fd)</highlight></codeline>
<codeline lineno="2777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>fcntl<sp/>(fd,<sp/>F_GETFD,<sp/>0);</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/>val<sp/>|=<sp/>FD_CLOEXEC;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/>fcntl<sp/>(fd,<sp/>F_SETFD,<sp/>val);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2798" refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="2800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(close<sp/>(fd)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>close<sp/>fd<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825" refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" kindref="member" tooltip="Duplicates a file descriptor.">_dbus_dup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="2827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_fd;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>F_DUPFD_CLOEXEC</highlight></codeline>
<codeline lineno="2831"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>cloexec_done;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/>new_fd<sp/>=<sp/>fcntl(fd,<sp/>F_DUPFD_CLOEXEC,<sp/>3);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/>cloexec_done<sp/>=<sp/>new_fd<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_fd<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINVAL)</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2838"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_fd<sp/>=<sp/>fcntl(fd,<sp/>F_DUPFD,<sp/>3);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_fd<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>duplicate<sp/>fd<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>F_DUPFD_CLOEXEC</highlight></codeline>
<codeline lineno="2850"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cloexec_done)</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2852"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" kindref="member" tooltip="Sets the file descriptor to be close on exec.">_dbus_fd_set_close_on_exec</ref>(new_fd);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_fd;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2867"><highlight class="normal">_dbus_set_fd_nonblocking<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>fcntl<sp/>(fd,<sp/>F_GETFL,<sp/>0);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>flags<sp/>from<sp/>file<sp/>descriptor<sp/>%d:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>flags<sp/>for<sp/>fd<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fd,</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcntl<sp/>(fd,<sp/>F_SETFL,<sp/>val<sp/>|<sp/>O_NONBLOCK)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>nonblocking<sp/>flag<sp/>of<sp/>file<sp/>descriptor<sp/>%d:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>fd<sp/>%d<sp/>nonblocking:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905" refid="group__DBusSysdeps_1ga8646ab2ef727fcc862c7904113c88a8d" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga8646ab2ef727fcc862c7904113c88a8d" kindref="member" tooltip="On GNU libc systems, print a crude backtrace to stderr.">_dbus_print_backtrace</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(HAVE_BACKTRACE)<sp/>&amp;&amp;<sp/>defined<sp/>(DBUS_BUILT_R_DYNAMIC)</highlight></codeline>
<codeline lineno="2908"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bt[500];</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bt_size;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**syms;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/>bt_size<sp/>=<sp/>backtrace<sp/>(bt,<sp/>500);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/>syms<sp/>=<sp/>backtrace_symbols<sp/>(bt,<sp/>bt_size);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>bt_size)</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>use<sp/>dbus_warn<sp/>since<sp/>it<sp/>can<sp/>_dbus_abort()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>syms[i]);</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/>fflush<sp/>(stderr);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/>free<sp/>(syms);</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(HAVE_BACKTRACE)<sp/>&amp;&amp;<sp/>!<sp/>defined<sp/>(DBUS_BUILT_R_DYNAMIC)</highlight></codeline>
<codeline lineno="2928"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>D-Bus<sp/>not<sp/>built<sp/>with<sp/>-rdynamic<sp/>so<sp/>unable<sp/>to<sp/>print<sp/>a<sp/>backtrace\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2930"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>D-Bus<sp/>not<sp/>compiled<sp/>with<sp/>backtrace<sp/>support<sp/>so<sp/>unable<sp/>to<sp/>print<sp/>a<sp/>backtrace\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2932"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2952" refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" kindref="member" tooltip="Creates a full-duplex pipe (as in socketpair()).">_dbus_full_duplex_pipe</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd1,</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd2,</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>blocking,</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SOCKETPAIR</highlight></codeline>
<codeline lineno="2958"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fds[2];</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOCK_CLOEXEC</highlight></codeline>
<codeline lineno="2962"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>cloexec_done;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/>socketpair(AF_UNIX,<sp/>SOCK_STREAM|SOCK_CLOEXEC,<sp/>0,<sp/>fds);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/>cloexec_done<sp/>=<sp/>retval<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINVAL)</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2969"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>socketpair(AF_UNIX,<sp/>SOCK_STREAM,<sp/>0,<sp/>fds);</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>full-duplex<sp/>pipe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOCK_CLOEXEC</highlight></codeline>
<codeline lineno="2983"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cloexec_done)</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2985"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" kindref="member" tooltip="Sets the file descriptor to be close on exec.">_dbus_fd_set_close_on_exec</ref><sp/>(fds[0]);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga21ef96952f98f23e590ebbf060fd5ca6" kindref="member" tooltip="Sets the file descriptor to be close on exec.">_dbus_fd_set_close_on_exec</ref><sp/>(fds[1]);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blocking<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!_dbus_set_fd_nonblocking<sp/>(fds[0],<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!_dbus_set_fd_nonblocking<sp/>(fds[1],<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)))</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>full-duplex<sp/>pipe<sp/>nonblocking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fds[0],<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member" tooltip="Closes a file descriptor.">_dbus_close</ref><sp/>(fds[1],<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/>*fd1<sp/>=<sp/>fds[0];</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/>*fd2<sp/>=<sp/>fds[1];</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;full-duplex<sp/>pipe<sp/>%d<sp/>&lt;-&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd1,<sp/>*fd2);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3011"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member" tooltip="Prints a warning message to stderr.">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;_dbus_full_duplex_pipe()<sp/>not<sp/>implemented<sp/>on<sp/>this<sp/>OS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member" tooltip="A generic error; &amp;quot;something went wrong&amp;quot; - see the error message for more.">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_dbus_full_duplex_pipe()<sp/>not<sp/>implemented<sp/>on<sp/>this<sp/>OS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3016"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027" refid="group__DBusSysdeps_1gaffaf8b5bb832c20a8ccb10f012920776" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gaffaf8b5bb832c20a8ccb10f012920776" kindref="member" tooltip="Measure the length of the given format string and arguments, not including the terminating nul...">_dbus_printf_string_upper_bound</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>args)</highlight></codeline>
<codeline lineno="3029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>static_buf[1024];</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufsize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(static_buf);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/>va_list<sp/>args_copy;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/>DBUS_VA_COPY<sp/>(args_copy,<sp/>args);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>vsnprintf<sp/>(static_buf,<sp/>bufsize,<sp/>format,<sp/>args_copy);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/>va_end<sp/>(args_copy);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>vsnprintf()<sp/>returned<sp/>non-negative,<sp/>then<sp/>either<sp/>the<sp/>string<sp/>fits<sp/>in</highlight></codeline>
<codeline lineno="3040"><highlight class="comment"><sp/><sp/><sp/>*<sp/>static_buf,<sp/>or<sp/>this<sp/>OS<sp/>has<sp/>the<sp/>POSIX<sp/>and<sp/>C99<sp/>behaviour<sp/>where<sp/>vsnprintf</highlight></codeline>
<codeline lineno="3041"><highlight class="comment"><sp/><sp/><sp/>*<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>that<sp/>were<sp/>needed,<sp/>or<sp/>this<sp/>OS<sp/>returns<sp/>the</highlight></codeline>
<codeline lineno="3042"><highlight class="comment"><sp/><sp/><sp/>*<sp/>truncated<sp/>length.</highlight></codeline>
<codeline lineno="3043"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3044"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>ignore<sp/>the<sp/>possibility<sp/>that<sp/>snprintf<sp/>might<sp/>just<sp/>ignore<sp/>the<sp/>length<sp/>and</highlight></codeline>
<codeline lineno="3045"><highlight class="comment"><sp/><sp/><sp/>*<sp/>overrun<sp/>the<sp/>buffer<sp/>(64-bit<sp/>Solaris<sp/>7),<sp/>because<sp/>that&apos;s<sp/>pathological.</highlight></codeline>
<codeline lineno="3046"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>your<sp/>libc<sp/>is<sp/>really<sp/>that<sp/>bad,<sp/>come<sp/>back<sp/>when<sp/>you<sp/>have<sp/>a<sp/>better<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>bufsize)</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>could<sp/>be<sp/>the<sp/>truncated<sp/>length<sp/>(Tru64<sp/>and<sp/>IRIX<sp/>have<sp/>this<sp/>bug),</highlight></codeline>
<codeline lineno="3050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>the<sp/>real<sp/>length<sp/>could<sp/>be<sp/>coincidentally<sp/>the<sp/>same.<sp/>Which<sp/>is<sp/>it?</highlight></codeline>
<codeline lineno="3051"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>vsnprintf<sp/>returns<sp/>the<sp/>truncated<sp/>length,<sp/>we&apos;ll<sp/>go<sp/>to<sp/>the<sp/>slow</highlight></codeline>
<codeline lineno="3052"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>path.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_VA_COPY<sp/>(args_copy,<sp/>args);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vsnprintf<sp/>(static_buf,<sp/>1,<sp/>format,<sp/>args_copy)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>va_end<sp/>(args_copy);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>vsnprintf()<sp/>returned<sp/>negative,<sp/>we<sp/>have<sp/>to<sp/>do<sp/>more<sp/>work.</highlight></codeline>
<codeline lineno="3062"><highlight class="comment"><sp/><sp/><sp/>*<sp/>HP-UX<sp/>returns<sp/>negative.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufsize<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/><ref refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" kindref="member" tooltip="Allocates the given number of bytes, as with standard malloc().">dbus_malloc</ref><sp/>(bufsize);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_VA_COPY<sp/>(args_copy,<sp/>args);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>vsnprintf<sp/>(buf,<sp/>bufsize,<sp/>format,<sp/>args_copy);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>va_end<sp/>(args_copy);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(buf);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>reported<sp/>length<sp/>is<sp/>exactly<sp/>the<sp/>buffer<sp/>size,<sp/>round<sp/>up<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="3081"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>next<sp/>size,<sp/>in<sp/>case<sp/>vsnprintf<sp/>has<sp/>been<sp/>returning<sp/>the<sp/>truncated</highlight></codeline>
<codeline lineno="3082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>bufsize)</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3097" refid="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" kindref="member" tooltip="Gets the temporary files directory by inspecting the environment variables TMPDIR, TMP, and TEMP in that order.">_dbus_get_tmpdir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tmpdir<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpdir<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TMPDIR<sp/>is<sp/>what<sp/>glibc<sp/>uses,<sp/>then</highlight></codeline>
<codeline lineno="3104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>glibc<sp/>falls<sp/>back<sp/>to<sp/>the<sp/>P_tmpdir<sp/>macro<sp/>which</highlight></codeline>
<codeline lineno="3105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>expands<sp/>to<sp/>&quot;/tmp&quot;</highlight></codeline>
<codeline lineno="3106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpdir<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpdir<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;TMPDIR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>two<sp/>env<sp/>variables<sp/>are<sp/>probably</highlight></codeline>
<codeline lineno="3111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>broken,<sp/>but<sp/>maybe<sp/>some<sp/>OS<sp/>uses<sp/>them?</highlight></codeline>
<codeline lineno="3112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpdir<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpdir<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;TMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpdir<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpdir<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;TEMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>this<sp/>is<sp/>the<sp/>sane<sp/>fallback.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpdir<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpdir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/tmp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/>_dbus_assert(tmpdir<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmpdir;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3148"><highlight class="normal">_read_subprocess_line_argv<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*progpath,</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>path_fallback,</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*argv,</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*result,</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result_pipe[2]<sp/>=<sp/>{<sp/>-1,<sp/>-1<sp/>};</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errors_pipe[2]<sp/>=<sp/>{<sp/>-1,<sp/>-1<sp/>};</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/>pid_t<sp/>pid;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_len;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/>sigset_t<sp/>new_set,<sp/>old_set;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>block<sp/>any<sp/>existing<sp/>handlers<sp/>for<sp/>SIGCHLD<sp/>temporarily;<sp/>they</highlight></codeline>
<codeline lineno="3169"><highlight class="comment"><sp/><sp/><sp/>*<sp/>will<sp/>cause<sp/>waitpid()<sp/>below<sp/>to<sp/>fail.</highlight></codeline>
<codeline lineno="3170"><highlight class="comment"><sp/><sp/><sp/>*<sp/>https://bugs.freedesktop.org/show_bug.cgi?id=21347</highlight></codeline>
<codeline lineno="3171"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/>sigemptyset<sp/>(&amp;new_set);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/>sigaddset<sp/>(&amp;new_set,<sp/>SIGCHLD);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/>sigprocmask<sp/>(SIG_BLOCK,<sp/>&amp;new_set,<sp/>&amp;old_set);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/>orig_len<sp/>=<sp/>_dbus_string_get_length<sp/>(result);</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="3179"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WRITE_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="3180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe<sp/>(result_pipe)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>a<sp/>pipe<sp/>to<sp/>call<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>a<sp/>pipe<sp/>to<sp/>call<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe<sp/>(errors_pipe)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>a<sp/>pipe<sp/>to<sp/>call<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>a<sp/>pipe<sp/>to<sp/>call<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/>pid<sp/>=<sp/>fork<sp/>();</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member" tooltip="Converts a UNIX errno, or Windows errno or WinSock error value into a DBusError name.">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fork()<sp/>to<sp/>call<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fork()<sp/>to<sp/>call<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>child<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxfds;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open<sp/>(</highlight><highlight class="stringliteral">&quot;/dev/null&quot;</highlight><highlight class="normal">,<sp/>O_RDWR);</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>huh?!<sp/>can&apos;t<sp/>open<sp/>/dev/null?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_exit<sp/>(1);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;/dev/null<sp/>fd<sp/>%d<sp/>opened\n&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set-up<sp/>stdXXX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(result_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member" tooltip="Helps remember which end of the pipe is which.">READ_END</ref>]);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(errors_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member" tooltip="Helps remember which end of the pipe is which.">READ_END</ref>]);</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>stdin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>stdout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>stderr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dup2<sp/>(fd,<sp/>0)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_exit<sp/>(1);</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dup2<sp/>(result_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member" tooltip="Helps remember which end of the pipe is which.">WRITE_END</ref>],<sp/>1)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_exit<sp/>(1);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dup2<sp/>(errors_pipe[WRITE_END],<sp/>2)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_exit<sp/>(1);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxfds<sp/>=<sp/>sysconf<sp/>(_SC_OPEN_MAX);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pick<sp/>something<sp/>reasonable<sp/>if<sp/>for<sp/>some<sp/>reason<sp/>sysconf</highlight></codeline>
<codeline lineno="3239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>says<sp/>unlimited.</highlight></codeline>
<codeline lineno="3240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxfds<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxfds<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>all<sp/>inherited<sp/>fds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>3;<sp/>i<sp/>&lt;<sp/>maxfds;<sp/>i++)</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(i);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigprocmask<sp/>(SIG_SETMASK,<sp/>&amp;old_set,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>it<sp/>looks<sp/>fully-qualified,<sp/>try<sp/>execv<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(progpath[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execv<sp/>(progpath,<sp/>argv);</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ok,<sp/>that<sp/>failed.<sp/><sp/>Now<sp/>if<sp/>path_fallback<sp/>is<sp/>given,<sp/>let&apos;s</highlight></codeline>
<codeline lineno="3254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>try<sp/>unqualified.<sp/><sp/>This<sp/>is<sp/>mostly<sp/>a<sp/>hack<sp/>to<sp/>work</highlight></codeline>
<codeline lineno="3255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>around<sp/>systems<sp/>which<sp/>ship<sp/>dbus-launch<sp/>in<sp/>/usr/bin</highlight></codeline>
<codeline lineno="3256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>everything<sp/>else<sp/>in<sp/>/bin<sp/>(because<sp/>dbus-launch</highlight></codeline>
<codeline lineno="3257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>depends<sp/>on<sp/>X11).</highlight></codeline>
<codeline lineno="3258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_fallback)</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>must<sp/>have<sp/>a<sp/>slash,<sp/>because<sp/>we<sp/>checked<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execvp<sp/>(strrchr<sp/>(progpath,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)+1,<sp/>argv);</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execvp<sp/>(progpath,<sp/>argv);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>still<sp/>nothing,<sp/>we<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_exit<sp/>(1);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>parent<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/>close<sp/>(result_pipe[WRITE_END]);</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/>close<sp/>(errors_pipe[WRITE_END]);</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/>result_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member" tooltip="Helps remember which end of the pipe is which.">WRITE_END</ref>]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/>errors_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member" tooltip="Helps remember which end of the pipe is which.">WRITE_END</ref>]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member" tooltip="Thin wrapper around the read() system call that appends the data it reads to the DBusString buffer...">_dbus_read</ref><sp/>(result_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member" tooltip="Helps remember which end of the pipe is which.">READ_END</ref>],<sp/>result,<sp/>1024);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reap<sp/>the<sp/>child<sp/>process<sp/>to<sp/>avoid<sp/>it<sp/>lingering<sp/>as<sp/>zombie<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>waitpid<sp/>(pid,<sp/>&amp;status,<sp/>0);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR);</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>succeeded<sp/>if<sp/>the<sp/>process<sp/>exited<sp/>with<sp/>status<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="3291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>anything<sp/>was<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!WIFEXITED<sp/>(status)<sp/>||<sp/>WEXITSTATUS<sp/>(status)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>process<sp/>ended<sp/>with<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>error_message;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member" tooltip="Initializes a string.">_dbus_string_init</ref><sp/>(&amp;error_message))</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member" tooltip="Thin wrapper around the read() system call that appends the data it reads to the DBusString buffer...">_dbus_read</ref><sp/>(errors_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member" tooltip="Helps remember which end of the pipe is which.">READ_END</ref>],<sp/>&amp;error_message,<sp/>1024);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(result,<sp/>orig_len);</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(&amp;error_message)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac04bc3bebee1674e93ef96aaa2b34b40" kindref="member" tooltip="While starting a new process, the exec() call failed.">DBUS_ERROR_SPAWN_EXEC_FAILED</ref>,</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>terminated<sp/>abnormally<sp/>with<sp/>the<sp/>following<sp/>error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath,<sp/>_dbus_string_get_data<sp/>(&amp;error_message));</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac04bc3bebee1674e93ef96aaa2b34b40" kindref="member" tooltip="While starting a new process, the exec() call failed.">DBUS_ERROR_SPAWN_EXEC_FAILED</ref>,</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>terminated<sp/>abnormally<sp/>without<sp/>any<sp/>error<sp/>message&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progpath);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/>sigprocmask<sp/>(SIG_SETMASK,<sp/>&amp;old_set,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval)</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET<sp/>(error);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result_pipe[0]<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(result_pipe[0]);</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result_pipe[1]<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(result_pipe[1]);</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors_pipe[0]<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(errors_pipe[0]);</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors_pipe[1]<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(errors_pipe[1]);</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3355" refid="group__DBusSysdeps_1gabc4712c0db91f11854cdd933027355af" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gabc4712c0db91f11854cdd933027355af" kindref="member" tooltip="Returns the address of a new session bus.">_dbus_get_autolaunch_address</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope,</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*address,</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_X11_AUTOLAUNCH</highlight></codeline>
<codeline lineno="3360"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>X11-based<sp/>autolaunch.<sp/>(We<sp/>also<sp/>support<sp/>launchd-based<sp/>autolaunch,</highlight></codeline>
<codeline lineno="3361"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>that&apos;s<sp/>done<sp/>elsewhere,<sp/>and<sp/>if<sp/>it<sp/>worked,<sp/>this<sp/>function<sp/>wouldn&apos;t</highlight></codeline>
<codeline lineno="3362"><highlight class="comment"><sp/><sp/><sp/>*<sp/>be<sp/>called.)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*display;</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[6];</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>uuid;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" kindref="member" tooltip="**NOTE**: If you modify this function, please also consider making the corresponding change in GLib...">_dbus_check_setuid</ref><sp/>())</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>autolaunch<sp/>when<sp/>setuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fd.o<sp/>#19997:<sp/>if<sp/>$DISPLAY<sp/>isn&apos;t<sp/>set<sp/>to<sp/>something<sp/>useful,<sp/>then</highlight></codeline>
<codeline lineno="3380"><highlight class="comment"><sp/><sp/><sp/>*<sp/>dbus-launch-x11<sp/>is<sp/>just<sp/>going<sp/>to<sp/>fail.<sp/>Rather<sp/>than<sp/>trying<sp/>to</highlight></codeline>
<codeline lineno="3381"><highlight class="comment"><sp/><sp/><sp/>*<sp/>run<sp/>it,<sp/>we<sp/>might<sp/>as<sp/>well<sp/>bail<sp/>out<sp/>early<sp/>with<sp/>a<sp/>nice<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/>display<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member" tooltip="Wrapper for getenv().">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;DISPLAY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref><sp/>||<sp/>display[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>autolaunch<sp/>a<sp/>dbus-daemon<sp/>without<sp/>a<sp/>$DISPLAY<sp/>for<sp/>X11&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member" tooltip="Initializes a string.">_dbus_string_init</ref><sp/>(&amp;uuid))</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga49ba67405d677af6cde9329ed87ea91f" kindref="member" tooltip="Gets the hex-encoded UUID of the machine this function is executed on.">_dbus_get_local_machine_uuid_encoded</ref><sp/>(&amp;uuid))</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dbus-launch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;--autolaunch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/>_dbus_string_get_data<sp/>(&amp;uuid);</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;--binary-syntax&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;--close-stderr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(i<sp/>==<sp/>_DBUS_N_ELEMENTS<sp/>(argv));</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/>_read_subprocess_line_argv<sp/>(DBUS_BINDIR<sp/></highlight><highlight class="stringliteral">&quot;/dbus-launch&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>,</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv,<sp/>address,<sp/>error);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;uuid);</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3427"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>X11<sp/>for<sp/>dbus-daemon<sp/>autolaunch<sp/>was<sp/>disabled<sp/>at<sp/>compile<sp/>time,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set<sp/>your<sp/>DBUS_SESSION_BUS_ADDRESS<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3432"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3453" refid="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" kindref="member" tooltip="Reads the uuid of the machine we&amp;#39;re running on from the dbus configuration.">_dbus_read_local_machine_uuid</ref><sp/>(<ref refid="group__DBusSysdeps_1ga24015a2f75b94c1307360755ce97f869" kindref="member" tooltip="Type representing a universally unique ID.">DBusGUID</ref><sp/><sp/><sp/>*machine_id,</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>create_if_not_found,</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>filename;</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>b;</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member" tooltip="Initializes a constant string.">_dbus_string_init_const</ref><sp/>(&amp;filename,<sp/>DBUS_MACHINE_UUID_FILE);</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga709fd30e6b940a5952af38efaf24ad51" kindref="member" tooltip="Reads (and optionally writes) a uuid to a file.">_dbus_read_uuid_file</ref><sp/>(&amp;filename,<sp/>machine_id,<sp/>create_if_not_found,<sp/>error);</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member" tooltip="Frees an error that&amp;#39;s been set (or just initialized), then reinitializes the error as in dbus_error_i...">dbus_error_free</ref><sp/>(error);</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fallback<sp/>to<sp/>the<sp/>system<sp/>machine<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member" tooltip="Initializes a constant string.">_dbus_string_init_const</ref><sp/>(&amp;filename,<sp/></highlight><highlight class="stringliteral">&quot;/etc/machine-id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ga709fd30e6b940a5952af38efaf24ad51" kindref="member" tooltip="Reads (and optionally writes) a uuid to a file.">_dbus_read_uuid_file</ref><sp/>(&amp;filename,<sp/>machine_id,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>,<sp/>error);</highlight></codeline>
<codeline lineno="3471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBUS_UNIX_STANDARD_SESSION_SERVICEDIR<sp/>&quot;/dbus-1/services&quot;</highlight></codeline>
<codeline lineno="3474"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DBUS_UNIX_STANDARD_SYSTEM_SERVICEDIR<sp/>&quot;/dbus-1/system-services&quot;</highlight></codeline>
<codeline lineno="3475"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3483" refid="group__DBusSysdepsUnix_1ga6425e8cf4a38c71a48309b436322d4db" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdepsUnix_1ga6425e8cf4a38c71a48309b436322d4db" kindref="member" tooltip="quries launchd for a specific env var which holds the socket path.">_dbus_lookup_launchd_socket</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*socket_path,</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*launchd_env_var,</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_LAUNCHD</highlight></codeline>
<codeline lineno="3488"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[4];</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" kindref="member" tooltip="**NOTE**: If you modify this function, please also consider making the corresponding change in GLib...">_dbus_check_setuid</ref><sp/>())</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>launchd<sp/>socket<sp/>when<sp/>setuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;launchctl&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;getenv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)launchd_env_var;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/>argv[i]<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(i<sp/>==<sp/>_DBUS_N_ELEMENTS<sp/>(argv));</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_read_subprocess_line_argv(argv[0],<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>,<sp/>argv,<sp/>socket_path,<sp/>error))</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>error,<sp/>but<sp/>no<sp/>result<sp/>either<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length(socket_path)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>strip<sp/>the<sp/>carriage-return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga7af1cbfa905f26d972ab644d890548b8" kindref="member" tooltip="Makes a string shorter by the given number of bytes.">_dbus_string_shorten</ref>(socket_path,<sp/>1);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>DBUS_ENABLE_LAUNCHD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>lookup<sp/>socket<sp/>from<sp/>launchd;<sp/>launchd<sp/>support<sp/>not<sp/>compiled<sp/>in&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3531"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3534"><highlight class="normal">_dbus_lookup_session_address_launchd<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*address,<sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_LAUNCHD</highlight></codeline>
<codeline lineno="3537"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>valid_socket;</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>socket_path;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" kindref="member" tooltip="**NOTE**: If you modify this function, please also consider making the corresponding change in GLib...">_dbus_check_setuid</ref><sp/>())</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>launchd<sp/>socket<sp/>when<sp/>setuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member" tooltip="Initializes a string.">_dbus_string_init</ref><sp/>(&amp;socket_path))</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/>valid_socket<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1ga6425e8cf4a38c71a48309b436322d4db" kindref="member" tooltip="quries launchd for a specific env var which holds the socket path.">_dbus_lookup_launchd_socket</ref><sp/>(&amp;socket_path,<sp/></highlight><highlight class="stringliteral">&quot;DBUS_LAUNCHD_SESSION_BUS_SOCKET&quot;</highlight><highlight class="normal">,<sp/>error);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusErrors_1gab0ed62e9fc2685897eb2d41467c89405" kindref="member" tooltip="Checks whether an error occurred (the error is set).">dbus_error_is_set</ref>(error))</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref>(&amp;socket_path);</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid_socket)</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref>(error,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>socket<sp/>path&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;launchd<sp/>did<sp/>not<sp/>provide<sp/>a<sp/>socket<sp/>path,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>that<sp/>org.freedesktop.dbus-session.plist<sp/>is<sp/>loaded!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref>(&amp;socket_path);</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(address,<sp/></highlight><highlight class="stringliteral">&quot;unix:path=&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref>(&amp;socket_path);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member" tooltip="Like _dbus_string_move(), but does not delete the section of the source string that&amp;#39;s copied to the d...">_dbus_string_copy</ref><sp/>(&amp;socket_path,<sp/>0,<sp/>address,</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(address)))</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref>(&amp;socket_path);</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref>(&amp;socket_path);</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3586"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member" tooltip="Requested operation isn&amp;#39;t supported (like ENOSYS on UNIX).">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>lookup<sp/>session<sp/>address<sp/>from<sp/>launchd;<sp/>launchd<sp/>support<sp/>not<sp/>compiled<sp/>in&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3590"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3612" refid="group__DBusSysdeps_1gade479f90c1083346d74bc21af178d856" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gade479f90c1083346d74bc21af178d856" kindref="member" tooltip="Determines the address of the session bus by querying a platform-specific method.">_dbus_lookup_session_address</ref><sp/>(<ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>*supported,</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*address,</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_LAUNCHD</highlight></codeline>
<codeline lineno="3617"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>*supported<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_lookup_session_address_launchd<sp/>(address,<sp/>error);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3620"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>non-Mac<sp/>Unix<sp/>platforms,<sp/>if<sp/>the<sp/>session<sp/>address<sp/>isn&apos;t<sp/>already</highlight></codeline>
<codeline lineno="3621"><highlight class="comment"><sp/><sp/><sp/>*<sp/>set<sp/>in<sp/>DBUS_SESSION_BUS_ADDRESS<sp/>environment<sp/>variable,<sp/>we<sp/>punt<sp/>and</highlight></codeline>
<codeline lineno="3622"><highlight class="comment"><sp/><sp/><sp/>*<sp/>fall<sp/>back<sp/>to<sp/>the<sp/>autolaunch:<sp/>global<sp/>default;<sp/>see</highlight></codeline>
<codeline lineno="3623"><highlight class="comment"><sp/><sp/><sp/>*<sp/>init_session_address<sp/>in<sp/>dbus/dbus-bus.c.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/>*supported<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3627"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3647" refid="group__DBusSysdeps_1ga079d34a9d90759e6b3ebebab424c696e" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga079d34a9d90759e6b3ebebab424c696e" kindref="member" tooltip="Returns the standard directories for a session bus to look for service activation files...">_dbus_get_standard_session_servicedirs</ref><sp/>(<ref refid="structDBusList" kindref="compound" tooltip="A node in a linked list.">DBusList</ref><sp/>**dirs)</highlight></codeline>
<codeline lineno="3648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xdg_data_home;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xdg_data_dirs;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>servicedir_path;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member" tooltip="Initializes a string.">_dbus_string_init</ref><sp/>(&amp;servicedir_path))</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/>xdg_data_home<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member" tooltip="Wrapper for getenv().">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;XDG_DATA_HOME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/>xdg_data_dirs<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member" tooltip="Wrapper for getenv().">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;XDG_DATA_DIRS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdg_data_home<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/>xdg_data_home))</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*homedir;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>local_share;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga17ce3ab061a3ae2441cd33ece34f5e7a" kindref="member" tooltip="Gets homedir of user owning current process.">_dbus_homedir_from_current_process</ref><sp/>(&amp;homedir))</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/>_dbus_string_get_const_data<sp/>(homedir)))</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member" tooltip="Initializes a constant string.">_dbus_string_init_const</ref><sp/>(&amp;local_share,<sp/></highlight><highlight class="stringliteral">&quot;/.local/share&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" kindref="member" tooltip="Appends the given filename to the given directory.">_dbus_concat_dir_and_file</ref><sp/>(&amp;servicedir_path,<sp/>&amp;local_share))</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdg_data_dirs<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/>xdg_data_dirs))</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/></highlight><highlight class="stringliteral">&quot;/usr/local/share:/usr/share:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3698"><highlight class="comment"><sp/><sp/><sp/>*<sp/>add<sp/>configured<sp/>datadir<sp/>to<sp/>defaults</highlight></codeline>
<codeline lineno="3699"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>may<sp/>be<sp/>the<sp/>same<sp/>as<sp/>an<sp/>xdg<sp/>dir</highlight></codeline>
<codeline lineno="3700"><highlight class="comment"><sp/><sp/><sp/>*<sp/>however<sp/>the<sp/>config<sp/>parser<sp/>should<sp/>take</highlight></codeline>
<codeline lineno="3701"><highlight class="comment"><sp/><sp/><sp/>*<sp/>care<sp/>of<sp/>duplicates</highlight></codeline>
<codeline lineno="3702"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/>DBUS_DATADIR))</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1ga9393ded03e3b9812e4ba99b437ea992d" kindref="member" tooltip="Split paths into a list of char strings.">_dbus_split_paths_and_append</ref><sp/>(&amp;servicedir_path,</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_UNIX_STANDARD_SESSION_SERVICEDIR,</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirs))</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;servicedir_path);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/>oom:</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;servicedir_path);</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3739" refid="group__DBusSysdeps_1ga5193160c3dc144af34b250cfb5b0a61e" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga5193160c3dc144af34b250cfb5b0a61e" kindref="member" tooltip="Returns the standard directories for a system bus to look for service activation files.">_dbus_get_standard_system_servicedirs</ref><sp/>(<ref refid="structDBusList" kindref="compound" tooltip="A node in a linked list.">DBusList</ref><sp/>**dirs)</highlight></codeline>
<codeline lineno="3740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xdg_data_dirs;</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>servicedir_path;</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member" tooltip="Initializes a string.">_dbus_string_init</ref><sp/>(&amp;servicedir_path))</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>xdg_data_dirs<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member" tooltip="Wrapper for getenv().">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;XDG_DATA_DIRS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdg_data_dirs<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/>xdg_data_dirs))</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,<sp/></highlight><highlight class="stringliteral">&quot;/usr/local/share:/usr/share:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3764"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Add<sp/>configured<sp/>datadir<sp/>to<sp/>defaults.<sp/>This<sp/>may<sp/>be<sp/>the<sp/>same<sp/>as<sp/>one</highlight></codeline>
<codeline lineno="3765"><highlight class="comment"><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>XDG<sp/>directories.<sp/>However,<sp/>the<sp/>config<sp/>parser<sp/>should<sp/>take</highlight></codeline>
<codeline lineno="3766"><highlight class="comment"><sp/><sp/><sp/>*<sp/>care<sp/>of<sp/>the<sp/>duplicates.</highlight></codeline>
<codeline lineno="3767"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3768"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Also,<sp/>append<sp/>/lib<sp/>as<sp/>counterpart<sp/>of<sp/>/usr/share<sp/>on<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="3769"><highlight class="comment"><sp/><sp/><sp/>*<sp/>directory<sp/>(the<sp/>root<sp/>directory<sp/>does<sp/>not<sp/>know<sp/>/share),<sp/>in<sp/>order<sp/>to</highlight></codeline>
<codeline lineno="3770"><highlight class="comment"><sp/><sp/><sp/>*<sp/>facilitate<sp/>early<sp/>boot<sp/>system<sp/>bus<sp/>activation<sp/>where<sp/>/usr<sp/>might<sp/>not</highlight></codeline>
<codeline lineno="3771"><highlight class="comment"><sp/><sp/><sp/>*<sp/>be<sp/>available.</highlight></codeline>
<codeline lineno="3772"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;servicedir_path,</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_DATADIR</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/lib:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1ga9393ded03e3b9812e4ba99b437ea992d" kindref="member" tooltip="Split paths into a list of char strings.">_dbus_split_paths_and_append</ref><sp/>(&amp;servicedir_path,</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_UNIX_STANDARD_SYSTEM_SERVICEDIR,</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirs))</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;servicedir_path);</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/>oom:</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;servicedir_path);</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3800" refid="group__DBusSysdeps_1ga6a9478a21745b128750df87ac557c7d4" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6a9478a21745b128750df87ac557c7d4" kindref="member" tooltip="Append the absolute path of the system.conf file (there is no system bus on Windows so this can just ...">_dbus_append_system_config_file</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str)</highlight></codeline>
<codeline lineno="3801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(str,<sp/>DBUS_SYSTEM_CONFIG_FILE);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3812" refid="group__DBusSysdeps_1gacc062b5f20f4a355ea78afccb0abd5f9" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gacc062b5f20f4a355ea78afccb0abd5f9" kindref="member" tooltip="Append the absolute path of the session.conf file.">_dbus_append_session_config_file</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str)</highlight></codeline>
<codeline lineno="3813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(str,<sp/>DBUS_SESSION_CONFIG_FILE);</highlight></codeline>
<codeline lineno="3815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3825" refid="group__DBusSysdeps_1ga184b42c4b42b91ef73e9ee50a1fa12c2" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga184b42c4b42b91ef73e9ee50a1fa12c2" kindref="member" tooltip="Called when the bus daemon is signaled to reload its configuration; any caches should be nuked...">_dbus_flush_caches</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga788ce7775d7f812d28d931e8b87ddfde" kindref="member" tooltip="Flushes the system global user database;.">_dbus_user_database_flush_system</ref><sp/>();</highlight></codeline>
<codeline lineno="3828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3844" refid="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" kindref="member" tooltip="Appends the directory in which a keyring for the given credentials should be stored.">_dbus_append_keyring_directory_for_credentials</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/>*directory,</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref><sp/>*credentials)</highlight></codeline>
<codeline lineno="3846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>homedir;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>dotdir;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1ga186e987b700f9ddc6cea8aa0db82b151" kindref="member" tooltip="A user ID.">dbus_uid_t</ref><sp/>uid;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(credentials<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(!<ref refid="group__DBusCredentials_1gabfd7a1f681a91b45ba2f4e7461131827" kindref="member" tooltip="Checks whether a credentials object contains a user identity.">_dbus_credentials_are_anonymous</ref><sp/>(credentials));</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member" tooltip="Initializes a string.">_dbus_string_init</ref><sp/>(&amp;homedir))</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/>uid<sp/>=<sp/><ref refid="group__DBusCredentials_1ga462892f995f2932bf0eb3b843407e6d5" kindref="member" tooltip="Gets the UNIX user ID in the credentials, or DBUS_UID_UNSET if the credentials object doesn&amp;#39;t contain...">_dbus_credentials_get_unix_uid</ref><sp/>(credentials);</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(uid<sp/>!=<sp/><ref refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" kindref="member" tooltip="an invalid UID used to represent an uninitialized dbus_uid_t field">DBUS_UID_UNSET</ref>);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1gabdd1dc47f44e3d6702c86c68da9a0173" kindref="member" tooltip="Gets the home directory for the given user.">_dbus_homedir_from_uid</ref><sp/>(uid,<sp/>&amp;homedir))</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_BUILD_TESTS</highlight></codeline>
<codeline lineno="3864"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member" tooltip="Wrapper for getenv().">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;DBUS_TEST_HOMEDIR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref><sp/>&amp;&amp;<sp/>*</highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member" tooltip="Sets the length of a string.">_dbus_string_set_length</ref><sp/>(&amp;homedir,<sp/>0);</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member" tooltip="Appends a nul-terminated C-style string to a DBusString.">_dbus_string_append</ref><sp/>(&amp;homedir,<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Using<sp/>fake<sp/>homedir<sp/>for<sp/>testing:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;homedir));</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>already_warned<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!already_warned)</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member" tooltip="Prints a warning message to stderr.">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Using<sp/>your<sp/>real<sp/>home<sp/>directory<sp/>for<sp/>testing,<sp/>set<sp/>DBUS_TEST_HOMEDIR<sp/>to<sp/>avoid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already_warned<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3888"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member" tooltip="Initializes a constant string.">_dbus_string_init_const</ref><sp/>(&amp;dotdir,<sp/></highlight><highlight class="stringliteral">&quot;.dbus-keyrings&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" kindref="member" tooltip="Appends the given filename to the given directory.">_dbus_concat_dir_and_file</ref><sp/>(&amp;homedir,</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dotdir))</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member" tooltip="Like _dbus_string_move(), but does not delete the section of the source string that&amp;#39;s copied to the d...">_dbus_string_copy</ref><sp/>(&amp;homedir,<sp/>0,</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directory,<sp/>_dbus_string_get_length<sp/>(directory)))<sp/>{</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;homedir);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/>failed:</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member" tooltip="Frees a string created by _dbus_string_init().">_dbus_string_free</ref><sp/>(&amp;homedir);</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"></highlight><highlight class="comment">//PENDING(kdab)<sp/>docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3909"><highlight class="normal">_dbus_daemon_publish_session_bus_address<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>addr,</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope)</highlight></codeline>
<codeline lineno="3911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"></highlight><highlight class="comment">//PENDING(kdab)<sp/>docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal">_dbus_daemon_unpublish_session_bus_address<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3929" refid="group__DBusSysdeps_1gaa03e5d4d95ef46a70d25fe315e674e24" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gaa03e5d4d95ef46a70d25fe315e674e24" kindref="member" tooltip="See if errno is EAGAIN or EWOULDBLOCK (this has to be done differently for Winsock so is abstracted)...">_dbus_get_is_errno_eagain_or_ewouldblock</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno<sp/>==<sp/>EAGAIN<sp/>||<sp/>errno<sp/>==<sp/>EWOULDBLOCK;</highlight></codeline>
<codeline lineno="3932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3942" refid="group__DBusSysdeps_1ga3bc1512aef42cea17a2aaacc7d8e7211" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3bc1512aef42cea17a2aaacc7d8e7211" kindref="member" tooltip="Removes a directory; Directory must be empty.">_dbus_delete_directory</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*filename,</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename_c;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/>filename_c<sp/>=<sp/>_dbus_string_get_const_data<sp/>(filename);</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rmdir<sp/>(filename_c)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member" tooltip="Assigns an error name and message to a DBusError.">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member" tooltip="A generic error; &amp;quot;something went wrong&amp;quot; - see the error message for more.">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>remove<sp/>directory<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_c,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="3960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3970" refid="group__DBusSysdeps_1ga06183453a52a6919619e85dc1812c9b7" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga06183453a52a6919619e85dc1812c9b7" kindref="member" tooltip="Checks whether file descriptors may be passed via the socket.">_dbus_socket_can_pass_unix_fd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)<sp/>{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCM_RIGHTS</highlight></codeline>
<codeline lineno="3973"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>sa;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>storage;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_un<sp/>un;</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/>}<sp/>sa_buf;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/>socklen_t<sp/>sa_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sa_buf);</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"></highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/>_DBUS_ZERO(sa_buf);</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockname(fd,<sp/>&amp;sa_buf.sa,<sp/>&amp;sa_len)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sa_buf.sa.sa_family<sp/>==<sp/>AF_UNIX;</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3989"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3992"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3996"><highlight class="comment"><sp/>*<sp/>replaces<sp/>the<sp/>term<sp/>DBUS_PREFIX<sp/>in<sp/>configure_time_path<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="3997"><highlight class="comment"><sp/>*<sp/>current<sp/>dbus<sp/>installation<sp/>directory.<sp/>On<sp/>unix<sp/>this<sp/>function<sp/>is<sp/>a<sp/>noop</highlight></codeline>
<codeline lineno="3998"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3999"><highlight class="comment"><sp/>*<sp/>@param<sp/>configure_time_path</highlight></codeline>
<codeline lineno="4000"><highlight class="comment"><sp/>*<sp/>@return<sp/>real<sp/>path</highlight></codeline>
<codeline lineno="4001"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4003"><highlight class="normal">_dbus_replace_install_prefix<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*configure_time_path)</highlight></codeline>
<codeline lineno="4004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>configure_time_path;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4018" refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" kindref="member" tooltip="**NOTE**: If you modify this function, please also consider making the corresponding change in GLib...">_dbus_check_setuid</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>get<sp/>__libc_enable_secure<sp/>exported<sp/>from<sp/>glibc.</highlight></codeline>
<codeline lineno="4021"><highlight class="comment"><sp/><sp/><sp/>*<sp/>See<sp/>http://www.openwall.com/lists/owl-dev/2012/08/14/1</highlight></codeline>
<codeline lineno="4022"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/>&amp;&amp;<sp/>defined(HAVE_LIBC_ENABLE_SECURE)</highlight></codeline>
<codeline lineno="4024"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>glibc/include/unistd.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__libc_enable_secure;</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__libc_enable_secure;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_ISSETUGID)</highlight></codeline>
<codeline lineno="4030"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>BSD:<sp/>http://www.freebsd.org/cgi/man.cgi?query=issetugid&amp;sektion=2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>issetugid<sp/>();</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="4033"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>uid_t<sp/>ruid,<sp/>euid,<sp/>suid;<sp/></highlight><highlight class="comment">/*<sp/>Real,<sp/>effective<sp/>and<sp/>saved<sp/>user<sp/>ID&apos;s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/>gid_t<sp/>rgid,<sp/>egid,<sp/>sgid;<sp/></highlight><highlight class="comment">/*<sp/>Real,<sp/>effective<sp/>and<sp/>saved<sp/>group<sp/>ID&apos;s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>check_setuid_initialised;</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>is_setuid;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_DBUS_UNLIKELY<sp/>(!check_setuid_initialised))</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GETRESUID</highlight></codeline>
<codeline lineno="4042"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getresuid<sp/>(&amp;ruid,<sp/>&amp;euid,<sp/>&amp;suid)<sp/>!=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getresgid<sp/>(&amp;rgid,<sp/>&amp;egid,<sp/>&amp;sgid)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_GETRESUID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suid<sp/>=<sp/>ruid<sp/>=<sp/>getuid<sp/>();</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sgid<sp/>=<sp/>rgid<sp/>=<sp/>getgid<sp/>();</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>euid<sp/>=<sp/>geteuid<sp/>();</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>egid<sp/>=<sp/>getegid<sp/>();</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_setuid_initialised<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_setuid<sp/>=<sp/>(ruid<sp/>!=<sp/>euid<sp/>||<sp/>ruid<sp/>!=<sp/>suid<sp/>||</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgid<sp/>!=<sp/>egid<sp/>||<sp/>rgid<sp/>!=<sp/>sgid);</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_setuid;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4059"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>tests<sp/>in<sp/>dbus-sysdeps-util.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-sysdeps-unix.c"/>
  </compounddef>
</doxygen>
