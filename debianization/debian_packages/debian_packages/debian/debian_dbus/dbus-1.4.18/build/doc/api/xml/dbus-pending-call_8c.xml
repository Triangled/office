<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="dbus-pending-call_8c" kind="file">
    <compoundname>dbus-pending-call.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-connection-internal_8h" local="yes">dbus-connection-internal.h</includes>
    <includes refid="dbus-pending-call-internal_8h" local="yes">dbus-pending-call-internal.h</includes>
    <includes refid="dbus-pending-call_8h" local="yes">dbus-pending-call.h</includes>
    <includes refid="dbus-list_8h" local="yes">dbus-list.h</includes>
    <includes refid="dbus-threads_8h" local="yes">dbus-threads.h</includes>
    <includes refid="dbus-test_8h" local="yes">dbus-test.h</includes>
    <incdepgraph>
      <node id="1966">
        <label>stdarg.h</label>
      </node>
      <node id="1968">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
      </node>
      <node id="1983">
        <label>dbus/dbus-marshal-validate.h</label>
        <link refid="dbus-marshal-validate_8h_source"/>
      </node>
      <node id="1969">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
      </node>
      <node id="1961">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
      </node>
      <node id="1982">
        <label>dbus-test.h</label>
        <link refid="dbus-test_8h_source"/>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
      </node>
      <node id="1955">
        <label>dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1963" relation="include">
        </childnode>
        <childnode refid="1968" relation="include">
        </childnode>
      </node>
      <node id="1974">
        <label>dbus/dbus-transport.h</label>
        <link refid="dbus-transport_8h_source"/>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
      </node>
      <node id="1976">
        <label>dbus/dbus-resources.h</label>
        <link refid="dbus-resources_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
      </node>
      <node id="1958">
        <label>stddef.h</label>
      </node>
      <node id="1964">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
      </node>
      <node id="1970">
        <label>dbus-connection-internal.h</label>
        <link refid="dbus-connection-internal_8h_source"/>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="1979" relation="include">
        </childnode>
      </node>
      <node id="1960">
        <label>dbus/dbus-arch-deps.h</label>
      </node>
      <node id="1957">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="1967">
        <label>string.h</label>
      </node>
      <node id="1963">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1953">
        <label>dbus-pending-call.c</label>
        <link refid="dbus-pending-call.c"/>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1982" relation="include">
        </childnode>
      </node>
      <node id="1981">
        <label>dbus-pending-call.h</label>
        <link refid="dbus-pending-call_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
      </node>
      <node id="1959">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="1958" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
      </node>
      <node id="1973">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="1965">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1975">
        <label>dbus/dbus-address.h</label>
        <link refid="dbus-address_8h_source"/>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
      </node>
      <node id="1956">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1958" relation="include">
        </childnode>
      </node>
      <node id="1962">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="1978">
        <label>dbus/dbus-timeout.h</label>
        <link refid="dbus-timeout_8h_source"/>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
      </node>
      <node id="1972">
        <label>dbus/dbus-message.h</label>
        <link refid="dbus-message_8h_source"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1971">
        <label>dbus/dbus-connection.h</label>
        <link refid="dbus-connection_8h_source"/>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
      </node>
      <node id="1980">
        <label>dbus-pending-call-internal.h</label>
        <link refid="dbus-pending-call-internal_8h_source"/>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
      </node>
      <node id="1954">
        <label>config.h</label>
      </node>
      <node id="1979">
        <label>dbus/dbus-dataslot.h</label>
        <link refid="dbus-dataslot_8h_source"/>
        <childnode refid="1955" relation="include">
        </childnode>
      </node>
      <node id="1977">
        <label>dbus/dbus-list.h</label>
        <link refid="dbus-list_8h_source"/>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1963" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structDBusPendingCall" prot="public">DBusPendingCall</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" prot="public" static="no">
        <name>CONNECTION_LOCK</name>
        <param><defname>connection</defname></param>
        <initializer><ref refid="group__DBusConnectionInternals_1ga4fe0c8f7b72dc89b9e1a3110db2f778e" kindref="member">_dbus_connection_lock</ref>(connection)</initializer>
        <briefdescription>
<para>Internals of <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Opaque object representing a reply message that we&apos;re waiting for. shorter and more visible way to write <ref refid="group__DBusConnectionInternals_1ga4fe0c8f7b72dc89b9e1a3110db2f778e" kindref="member">_dbus_connection_lock()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="52" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="52" bodyend="-1"/>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2118" endline="2132">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1904" endline="1911">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga12756797bd5c1918aa065f9c37ed7bba" compoundref="dbus-connection_8c" startline="1466" endline="1505">_dbus_connection_handle_watch</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga4fe0c8f7b72dc89b9e1a3110db2f778e" compoundref="dbus-connection_8c" startline="379" endline="382">_dbus_connection_lock</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1237" endline="1396">_dbus_connection_new_for_transport</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga968196bee49659e75c54b53d7c85fa51" compoundref="dbus-connection_8c" startline="1032" endline="1037">_dbus_connection_remove_pending_call</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga68e5ff616e6a6563d83966c3d88b9b32" compoundref="dbus-pending-call_8c" startline="306" endline="312">_dbus_pending_call_get_connection_and_lock</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" compoundref="dbus-pending-call_8c" startline="477" endline="503">_dbus_pending_call_set_data_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1gae00f581e5487408cb294bf71826aff86" compoundref="dbus-connection_8c" startline="5406" endline="5443">dbus_connection_add_filter</referencedby>
        <referencedby refid="group__DBusConnection_1ga9d07083c520e291591a68adb78f64094" compoundref="dbus-connection_8c" startline="3790" endline="3828">dbus_connection_borrow_message</referencedby>
        <referencedby refid="group__DBusConnection_1ga3e41509b3afdbc22872bacc5754e85c2" compoundref="dbus-connection_8c" startline="3047" endline="3071">dbus_connection_can_send_type</referencedby>
        <referencedby refid="group__DBusConnection_1ga2522ac5075dfe0a1535471f6e045e1ee" compoundref="dbus-connection_8c" startline="2874" endline="2892">dbus_connection_close</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4476" endline="4758">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1ga10e68d9d2f41d655a4151ddeb807ff54" compoundref="dbus-connection_8c" startline="3581" endline="3601">dbus_connection_flush</referencedby>
        <referencedby refid="group__DBusConnection_1ga969b9dafe806c9fe0a54c9d8a565c2e1" compoundref="dbus-connection_8c" startline="5154" endline="5175">dbus_connection_get_adt_audit_session_data</referencedby>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4304" endline="4319">dbus_connection_get_dispatch_status</referencedby>
        <referencedby refid="group__DBusConnection_1gaa6c5d523e16d8a5b9316c92d9ff1ac17" compoundref="dbus-connection_8c" startline="2971" endline="2982">dbus_connection_get_is_anonymous</referencedby>
        <referencedby refid="group__DBusConnection_1ga2f1fa02c9897b6f07f4d33c862de4a1d" compoundref="dbus-connection_8c" startline="2937" endline="2948">dbus_connection_get_is_authenticated</referencedby>
        <referencedby refid="group__DBusConnection_1ga611ae94556af36fe30bfb547366ca4e1" compoundref="dbus-connection_8c" startline="2915" endline="2926">dbus_connection_get_is_connected</referencedby>
        <referencedby refid="group__DBusConnection_1ga7a459e64d7dca7b592136cec0a73422c" compoundref="dbus-connection_8c" startline="5987" endline="5997">dbus_connection_get_max_message_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga18abaca9a512dbb7b6f921c3df6875d9" compoundref="dbus-connection_8c" startline="6026" endline="6036">dbus_connection_get_max_message_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1ga376529acf41d1d34b4f46c0d9d515c85" compoundref="dbus-connection_8c" startline="6082" endline="6092">dbus_connection_get_max_received_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga219f31132338616f82dc975c070ff418" compoundref="dbus-connection_8c" startline="6124" endline="6134">dbus_connection_get_max_received_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1ga08ee6e70b74c294fe24d0f391f16db24" compoundref="dbus-connection_8c" startline="5753" endline="5777">dbus_connection_get_object_path_data</referencedby>
        <referencedby refid="group__DBusConnection_1ga47aff801f586e7116f9c54532bb1baf9" compoundref="dbus-connection_8c" startline="6147" endline="6157">dbus_connection_get_outgoing_size</referencedby>
        <referencedby refid="group__DBusConnection_1gad218838fdaa8d36c606723c63e96f453" compoundref="dbus-connection_8c" startline="6167" endline="6177">dbus_connection_get_outgoing_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1gae6c19e146a37f9de6a06c1617874bed9" compoundref="dbus-connection_8c" startline="3016" endline="3027">dbus_connection_get_server_id</referencedby>
        <referencedby refid="group__DBusConnection_1ga1c14590d77b148390bde9e82a7544434" compoundref="dbus-connection_8c" startline="5044" endline="5060">dbus_connection_get_socket</referencedby>
        <referencedby refid="group__DBusConnection_1gaeebeadcafa87e2d30eed4296f26fb73c" compoundref="dbus-connection_8c" startline="5122" endline="5141">dbus_connection_get_unix_process_id</referencedby>
        <referencedby refid="group__DBusConnection_1gaef670c3a8170ab9c719ec955252459d0" compoundref="dbus-connection_8c" startline="5086" endline="5109">dbus_connection_get_unix_user</referencedby>
        <referencedby refid="group__DBusConnection_1ga2b3cb488f1922aeecdeafdcb110e91a8" compoundref="dbus-connection_8c" startline="5252" endline="5275">dbus_connection_get_windows_user</referencedby>
        <referencedby refid="group__DBusConnection_1gac40563ec4c0e309d936daf3163ba9bb7" compoundref="dbus-connection_8c" startline="574" endline="585">dbus_connection_has_messages_to_send</referencedby>
        <referencedby refid="group__DBusConnection_1ga3e9de2067d0eed66ef73230fae8d8be2" compoundref="dbus-connection_8c" startline="5790" endline="5812">dbus_connection_list_registered</referencedby>
        <referencedby refid="group__DBusConnection_1ga1e40d994ea162ce767e78de1c4988566" compoundref="dbus-connection_8c" startline="4017" endline="4045">dbus_connection_pop_message</referencedby>
        <referencedby refid="group__DBusConnection_1ga6136968eba30e8313e668a622fcfb08d" compoundref="dbus-connection_8c" startline="3107" endline="3121">dbus_connection_preallocate_send</referencedby>
        <referencedby refid="group__DBusConnection_1gac4473b37bfa74ccf7459959d27e7bc59" compoundref="dbus-connection_8c" startline="5673" endline="5709">dbus_connection_register_fallback</referencedby>
        <referencedby refid="group__DBusConnection_1ga24730ca6fd2e9132873962a32df7628c" compoundref="dbus-connection_8c" startline="5571" endline="5607">dbus_connection_register_object_path</referencedby>
        <referencedby refid="group__DBusConnection_1ga5e7f1dad410506a8a6f5182c55e7c4fe" compoundref="dbus-connection_8c" startline="5458" endline="5509">dbus_connection_remove_filter</referencedby>
        <referencedby refid="group__DBusConnection_1ga0586da03a01c9c6f332fbea900ef55e3" compoundref="dbus-connection_8c" startline="3839" endline="3859">dbus_connection_return_message</referencedby>
        <referencedby refid="group__DBusConnection_1gae1cb64f4cf550949b23fd3a756b2f7d0" compoundref="dbus-connection_8c" startline="3244" endline="3270">dbus_connection_send</referencedby>
        <referencedby refid="group__DBusConnection_1ga2fea5f972d1bfe7bcde8c0ec65ca9e90" compoundref="dbus-connection_8c" startline="3159" endline="3193">dbus_connection_send_preallocated</referencedby>
        <referencedby refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" compoundref="dbus-connection_8c" startline="3339" endline="3440">dbus_connection_send_with_reply</referencedby>
        <referencedby refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" compoundref="dbus-connection_8c" startline="3475" endline="3532">dbus_connection_send_with_reply_and_block</referencedby>
        <referencedby refid="group__DBusConnection_1gade349ff04ed548993a8054250e317c12" compoundref="dbus-connection_8c" startline="5346" endline="5354">dbus_connection_set_allow_anonymous</referencedby>
        <referencedby refid="group__DBusConnection_1ga55ff88cd22c0672441c7deffbfb68fbf" compoundref="dbus-connection_8c" startline="4969" endline="4992">dbus_connection_set_dispatch_status_function</referencedby>
        <referencedby refid="group__DBusConnection_1ga19091beb74f1504b0e862a7ad10e71cd" compoundref="dbus-connection_8c" startline="3087" endline="3095">dbus_connection_set_exit_on_disconnect</referencedby>
        <referencedby refid="group__DBusConnection_1ga0d783462274a6c71d3767f5821c29ce9" compoundref="dbus-connection_8c" startline="5969" endline="5978">dbus_connection_set_max_message_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga2aadce7d15c0e11983363912292b3fcd" compoundref="dbus-connection_8c" startline="6008" endline="6017">dbus_connection_set_max_message_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1ga6565d75f16e6e803372b2ae3d94d991b" compoundref="dbus-connection_8c" startline="6064" endline="6073">dbus_connection_set_max_received_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga81e63dc6d9298e8a7f92c0d93d0e80b3" compoundref="dbus-connection_8c" startline="6106" endline="6115">dbus_connection_set_max_received_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1gaf58e8cc7b8717db1581459c0c3d34b08" compoundref="dbus-connection_8c" startline="5374" endline="5382">dbus_connection_set_route_peer_messages</referencedby>
        <referencedby refid="group__DBusConnection_1gab3cbc68eec427e9ce1783b25d44fe93c" compoundref="dbus-connection_8c" startline="4885" endline="4906">dbus_connection_set_timeout_functions</referencedby>
        <referencedby refid="group__DBusConnection_1ga6b78379badb4c5804344f4f3d87a958a" compoundref="dbus-connection_8c" startline="5200" endline="5218">dbus_connection_set_unix_user_function</referencedby>
        <referencedby refid="group__DBusConnection_1ga2b1df13251c7ec348bcba39c0924e881" compoundref="dbus-connection_8c" startline="4923" endline="4946">dbus_connection_set_wakeup_main_function</referencedby>
        <referencedby refid="group__DBusConnection_1gaebf031eb444b4f847606aa27daa3d8e6" compoundref="dbus-connection_8c" startline="4822" endline="4843">dbus_connection_set_watch_functions</referencedby>
        <referencedby refid="group__DBusConnection_1gaa35ced9ccd29d3366749ae383b120f9c" compoundref="dbus-connection_8c" startline="5299" endline="5317">dbus_connection_set_windows_user_function</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3871" endline="3900">dbus_connection_steal_borrowed_message</referencedby>
        <referencedby refid="group__DBusConnection_1ga8e9d2d4ff17c3071124e4993d1536ed4" compoundref="dbus-connection_8c" startline="5624" endline="5653">dbus_connection_try_register_fallback</referencedby>
        <referencedby refid="group__DBusConnection_1ga708b1e108feed18f5775ff404c9dda4b" compoundref="dbus-connection_8c" startline="5524" endline="5553">dbus_connection_try_register_object_path</referencedby>
        <referencedby refid="group__DBusConnection_1ga6ae8f005dedf24c5f2df1768795392fb" compoundref="dbus-connection_8c" startline="5721" endline="5740">dbus_connection_unregister_object_path</referencedby>
        <referencedby refid="group__DBusPendingCall_1gacbf33ae8a1cc125628f9ea44d175c159" compoundref="dbus-pending-call_8c" startline="644" endline="655">dbus_pending_call_get_completed</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" compoundref="dbus-pending-call_8c" startline="792" endline="806">dbus_pending_call_get_data</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" compoundref="dbus-pending-call_8c" startline="766" endline="781">dbus_pending_call_set_data</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga16b67b418b1dc27cfdda6b20f7447670" compoundref="dbus-pending-call_8c" startline="591" endline="610">dbus_pending_call_set_notify</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga5a738928c2369fef093ce00658903d06" compoundref="dbus-pending-call_8c" startline="667" endline="683">dbus_pending_call_steal_reply</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" prot="public" static="no">
        <name>CONNECTION_UNLOCK</name>
        <param><defname>connection</defname></param>
        <initializer><ref refid="group__DBusConnectionInternals_1ga3db10d48ec16e485d5a638aacebd4ad2" kindref="member">_dbus_connection_unlock</ref>(connection)</initializer>
        <briefdescription>
<para>shorter and more visible way to write <ref refid="group__DBusConnectionInternals_1ga3db10d48ec16e485d5a638aacebd4ad2" kindref="member">_dbus_connection_unlock()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="56" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="56" bodyend="-1"/>
        <referencedby refid="group__DBusConnectionInternals_1ga3db10d48ec16e485d5a638aacebd4ad2" compoundref="dbus-connection_8c" startline="390" endline="393">_dbus_connection_unlock</referencedby>
        <referencedby refid="group__DBusConnection_1gac40563ec4c0e309d936daf3163ba9bb7" compoundref="dbus-connection_8c" startline="574" endline="585">dbus_connection_has_messages_to_send</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1237" endline="1396">_dbus_connection_new_for_transport</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga12756797bd5c1918aa065f9c37ed7bba" compoundref="dbus-connection_8c" startline="1466" endline="1505">_dbus_connection_handle_watch</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga2974eb1c261305fafc635e14fc575d03" compoundref="dbus-connection_8c" startline="2070" endline="2091">_dbus_connection_send_and_unlock</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2118" endline="2132">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusConnection_1ga2522ac5075dfe0a1535471f6e045e1ee" compoundref="dbus-connection_8c" startline="2874" endline="2892">dbus_connection_close</referencedby>
        <referencedby refid="group__DBusConnection_1ga611ae94556af36fe30bfb547366ca4e1" compoundref="dbus-connection_8c" startline="2915" endline="2926">dbus_connection_get_is_connected</referencedby>
        <referencedby refid="group__DBusConnection_1ga2f1fa02c9897b6f07f4d33c862de4a1d" compoundref="dbus-connection_8c" startline="2937" endline="2948">dbus_connection_get_is_authenticated</referencedby>
        <referencedby refid="group__DBusConnection_1gaa6c5d523e16d8a5b9316c92d9ff1ac17" compoundref="dbus-connection_8c" startline="2971" endline="2982">dbus_connection_get_is_anonymous</referencedby>
        <referencedby refid="group__DBusConnection_1gae6c19e146a37f9de6a06c1617874bed9" compoundref="dbus-connection_8c" startline="3016" endline="3027">dbus_connection_get_server_id</referencedby>
        <referencedby refid="group__DBusConnection_1ga3e41509b3afdbc22872bacc5754e85c2" compoundref="dbus-connection_8c" startline="3047" endline="3071">dbus_connection_can_send_type</referencedby>
        <referencedby refid="group__DBusConnection_1ga19091beb74f1504b0e862a7ad10e71cd" compoundref="dbus-connection_8c" startline="3087" endline="3095">dbus_connection_set_exit_on_disconnect</referencedby>
        <referencedby refid="group__DBusConnection_1ga6136968eba30e8313e668a622fcfb08d" compoundref="dbus-connection_8c" startline="3107" endline="3121">dbus_connection_preallocate_send</referencedby>
        <referencedby refid="group__DBusConnection_1ga2fea5f972d1bfe7bcde8c0ec65ca9e90" compoundref="dbus-connection_8c" startline="3159" endline="3193">dbus_connection_send_preallocated</referencedby>
        <referencedby refid="group__DBusConnection_1gae1cb64f4cf550949b23fd3a756b2f7d0" compoundref="dbus-connection_8c" startline="3244" endline="3270">dbus_connection_send</referencedby>
        <referencedby refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" compoundref="dbus-connection_8c" startline="3339" endline="3440">dbus_connection_send_with_reply</referencedby>
        <referencedby refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" compoundref="dbus-connection_8c" startline="3475" endline="3532">dbus_connection_send_with_reply_and_block</referencedby>
        <referencedby refid="group__DBusConnection_1ga9d07083c520e291591a68adb78f64094" compoundref="dbus-connection_8c" startline="3790" endline="3828">dbus_connection_borrow_message</referencedby>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4304" endline="4319">dbus_connection_get_dispatch_status</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4476" endline="4758">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1gaebf031eb444b4f847606aa27daa3d8e6" compoundref="dbus-connection_8c" startline="4822" endline="4843">dbus_connection_set_watch_functions</referencedby>
        <referencedby refid="group__DBusConnection_1gab3cbc68eec427e9ce1783b25d44fe93c" compoundref="dbus-connection_8c" startline="4885" endline="4906">dbus_connection_set_timeout_functions</referencedby>
        <referencedby refid="group__DBusConnection_1ga2b1df13251c7ec348bcba39c0924e881" compoundref="dbus-connection_8c" startline="4923" endline="4946">dbus_connection_set_wakeup_main_function</referencedby>
        <referencedby refid="group__DBusConnection_1ga55ff88cd22c0672441c7deffbfb68fbf" compoundref="dbus-connection_8c" startline="4969" endline="4992">dbus_connection_set_dispatch_status_function</referencedby>
        <referencedby refid="group__DBusConnection_1ga1c14590d77b148390bde9e82a7544434" compoundref="dbus-connection_8c" startline="5044" endline="5060">dbus_connection_get_socket</referencedby>
        <referencedby refid="group__DBusConnection_1gaef670c3a8170ab9c719ec955252459d0" compoundref="dbus-connection_8c" startline="5086" endline="5109">dbus_connection_get_unix_user</referencedby>
        <referencedby refid="group__DBusConnection_1gaeebeadcafa87e2d30eed4296f26fb73c" compoundref="dbus-connection_8c" startline="5122" endline="5141">dbus_connection_get_unix_process_id</referencedby>
        <referencedby refid="group__DBusConnection_1ga969b9dafe806c9fe0a54c9d8a565c2e1" compoundref="dbus-connection_8c" startline="5154" endline="5175">dbus_connection_get_adt_audit_session_data</referencedby>
        <referencedby refid="group__DBusConnection_1ga6b78379badb4c5804344f4f3d87a958a" compoundref="dbus-connection_8c" startline="5200" endline="5218">dbus_connection_set_unix_user_function</referencedby>
        <referencedby refid="group__DBusConnection_1ga2b3cb488f1922aeecdeafdcb110e91a8" compoundref="dbus-connection_8c" startline="5252" endline="5275">dbus_connection_get_windows_user</referencedby>
        <referencedby refid="group__DBusConnection_1gaa35ced9ccd29d3366749ae383b120f9c" compoundref="dbus-connection_8c" startline="5299" endline="5317">dbus_connection_set_windows_user_function</referencedby>
        <referencedby refid="group__DBusConnection_1gade349ff04ed548993a8054250e317c12" compoundref="dbus-connection_8c" startline="5346" endline="5354">dbus_connection_set_allow_anonymous</referencedby>
        <referencedby refid="group__DBusConnection_1gaf58e8cc7b8717db1581459c0c3d34b08" compoundref="dbus-connection_8c" startline="5374" endline="5382">dbus_connection_set_route_peer_messages</referencedby>
        <referencedby refid="group__DBusConnection_1gae00f581e5487408cb294bf71826aff86" compoundref="dbus-connection_8c" startline="5406" endline="5443">dbus_connection_add_filter</referencedby>
        <referencedby refid="group__DBusConnection_1ga5e7f1dad410506a8a6f5182c55e7c4fe" compoundref="dbus-connection_8c" startline="5458" endline="5509">dbus_connection_remove_filter</referencedby>
        <referencedby refid="group__DBusConnection_1ga708b1e108feed18f5775ff404c9dda4b" compoundref="dbus-connection_8c" startline="5524" endline="5553">dbus_connection_try_register_object_path</referencedby>
        <referencedby refid="group__DBusConnection_1ga24730ca6fd2e9132873962a32df7628c" compoundref="dbus-connection_8c" startline="5571" endline="5607">dbus_connection_register_object_path</referencedby>
        <referencedby refid="group__DBusConnection_1ga8e9d2d4ff17c3071124e4993d1536ed4" compoundref="dbus-connection_8c" startline="5624" endline="5653">dbus_connection_try_register_fallback</referencedby>
        <referencedby refid="group__DBusConnection_1gac4473b37bfa74ccf7459959d27e7bc59" compoundref="dbus-connection_8c" startline="5673" endline="5709">dbus_connection_register_fallback</referencedby>
        <referencedby refid="group__DBusConnection_1ga08ee6e70b74c294fe24d0f391f16db24" compoundref="dbus-connection_8c" startline="5753" endline="5777">dbus_connection_get_object_path_data</referencedby>
        <referencedby refid="group__DBusConnection_1ga0d783462274a6c71d3767f5821c29ce9" compoundref="dbus-connection_8c" startline="5969" endline="5978">dbus_connection_set_max_message_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga7a459e64d7dca7b592136cec0a73422c" compoundref="dbus-connection_8c" startline="5987" endline="5997">dbus_connection_get_max_message_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga2aadce7d15c0e11983363912292b3fcd" compoundref="dbus-connection_8c" startline="6008" endline="6017">dbus_connection_set_max_message_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1ga18abaca9a512dbb7b6f921c3df6875d9" compoundref="dbus-connection_8c" startline="6026" endline="6036">dbus_connection_get_max_message_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1ga6565d75f16e6e803372b2ae3d94d991b" compoundref="dbus-connection_8c" startline="6064" endline="6073">dbus_connection_set_max_received_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga376529acf41d1d34b4f46c0d9d515c85" compoundref="dbus-connection_8c" startline="6082" endline="6092">dbus_connection_get_max_received_size</referencedby>
        <referencedby refid="group__DBusConnection_1ga81e63dc6d9298e8a7f92c0d93d0e80b3" compoundref="dbus-connection_8c" startline="6106" endline="6115">dbus_connection_set_max_received_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1ga219f31132338616f82dc975c070ff418" compoundref="dbus-connection_8c" startline="6124" endline="6134">dbus_connection_get_max_received_unix_fds</referencedby>
        <referencedby refid="group__DBusConnection_1ga47aff801f586e7116f9c54532bb1baf9" compoundref="dbus-connection_8c" startline="6147" endline="6157">dbus_connection_get_outgoing_size</referencedby>
        <referencedby refid="group__DBusConnection_1gad218838fdaa8d36c606723c63e96f453" compoundref="dbus-connection_8c" startline="6167" endline="6177">dbus_connection_get_outgoing_unix_fds</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga26f09beed0dd6323cca0452abf344567" compoundref="dbus-pending-call_8c" startline="434" endline="445">_dbus_pending_call_unref_and_unlock</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" compoundref="dbus-pending-call_8c" startline="477" endline="503">_dbus_pending_call_set_data_unlocked</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga16b67b418b1dc27cfdda6b20f7447670" compoundref="dbus-pending-call_8c" startline="591" endline="610">dbus_pending_call_set_notify</referencedby>
        <referencedby refid="group__DBusPendingCall_1gacbf33ae8a1cc125628f9ea44d175c159" compoundref="dbus-pending-call_8c" startline="644" endline="655">dbus_pending_call_get_completed</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga5a738928c2369fef093ce00658903d06" compoundref="dbus-pending-call_8c" startline="667" endline="683">dbus_pending_call_steal_reply</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" compoundref="dbus-pending-call_8c" startline="766" endline="781">dbus_pending_call_set_data</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" compoundref="dbus-pending-call_8c" startline="792" endline="806">dbus_pending_call_get_data</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DBusPendingCallInternals_1gaaf1b098132009ca1636515dfebcf1715" prot="public" static="yes" mutable="no">
        <type>dbus_int32_t</type>
        <definition>dbus_int32_t notify_user_data_slot</definition>
        <argsstring></argsstring>
        <name>notify_user_data_slot</name>
        <initializer> -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="81" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusPendingCallInternals_1gaa0d783eaf99d7f70b8b1d0bfdd43bb82" prot="public" static="yes" mutable="no">
        <type><ref refid="structDBusDataSlotAllocator" kindref="compound">DBusDataSlotAllocator</ref></type>
        <definition>DBusDataSlotAllocator slot_allocator</definition>
        <argsstring></argsstring>
        <name>slot_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="460" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="460" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga3f2300d7a768783bc2fae0991bcc55df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
        <definition>DBusPendingCall* _dbus_pending_call_new_unlocked</definition>
        <argsstring>(DBusConnection *connection, int timeout_milliseconds, DBusTimeoutHandler timeout_handler)</argsstring>
        <name>_dbus_pending_call_new_unlocked</name>
        <param>
          <type><ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> *</type>
          <declname>connection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_milliseconds</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTimeoutInternals_1ga1533b9aa7bfe55ccb798ab041e4ce242" kindref="member">DBusTimeoutHandler</ref></type>
          <declname>timeout_handler</declname>
        </param>
        <briefdescription>
<para>Creates a new pending reply object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection</parametername>
</parameternamelist>
<parameterdescription>
<para>connection where reply will arrive </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_milliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>length of timeout, -1 (or <ref refid="group__DBusPendingCall_1gabdc138a303699e88756d6c5988a16b05" kindref="member">DBUS_TIMEOUT_USE_DEFAULT</ref>) for default, <ref refid="group__DBusPendingCall_1ga21384c9c5b0da54f7d0a92012522f213" kindref="member">DBUS_TIMEOUT_INFINITE</ref> for no timeout </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout handler, takes pending call as data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="97" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="94" bodyend="144"/>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2354" endline="2366">_dbus_atomic_inc</references>
        <references refid="group__DBusConnectionInternals_1ga7151f75b5d2308ec80cfe893aba72aa1" compoundref="dbus-connection_8c" startline="1406" endline="1416">_dbus_connection_ref_unlocked</references>
        <references refid="group__DBusDataSlot_1ga6de49b3a1210202215d40a5a19806992" compoundref="dbus-dataslot_8c" startline="213" endline="217">_dbus_data_slot_list_init</references>
        <references refid="group__DBusTimeoutInternals_1ga3f63abde6bb7ebecf6fa8774ba501a26" compoundref="dbus-timeout_8c" startline="63" endline="84">_dbus_timeout_new</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="629" endline="668">dbus_free</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusPendingCall_1ga95614dad0ada70e3a20d9878339e3109" compoundref="dbus-pending-call_8c" startline="723" endline="730">dbus_pending_call_allocate_data_slot</references>
        <references refid="group__DBusPendingCall_1ga1eb6f342bba71b01266629f80be84617" compoundref="dbus-pending-call_8c" startline="744" endline="750">dbus_pending_call_free_data_slot</references>
        <references refid="group__DBusPendingCall_1ga21384c9c5b0da54f7d0a92012522f213" compoundref="dbus-pending-call_8h" startline="41">DBUS_TIMEOUT_INFINITE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" compoundref="dbus-pending-call_8c" startline="63">DBusPendingCall::refcount</references>
        <references refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" compoundref="dbus-pending-call_8c" startline="65">DBusPendingCall::slot_list</references>
        <references refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" compoundref="dbus-pending-call_8c" startline="71">DBusPendingCall::timeout</references>
        <referencedby refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" compoundref="dbus-connection_8c" startline="3339" endline="3440">dbus_connection_send_with_reply</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga4b8cc560549160aecd924037a872009d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_pending_call_set_reply_unlocked</definition>
        <argsstring>(DBusPendingCall *pending, DBusMessage *message)</argsstring>
        <name>_dbus_pending_call_set_reply_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sets the reply of a pending call with the given message, or if the message is <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, by timing out the pending call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to complete the call with, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to time out the call </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="157" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="155" bodyend="177"/>
        <references refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" compoundref="dbus-list_8c" startline="550" endline="565">_dbus_list_clear</references>
        <references refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" compoundref="dbus-list_8h" startline="38">DBusList::data</references>
        <references refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1025" endline="1038">dbus_message_get_reply_serial</references>
        <references refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" compoundref="dbus-message_8c" startline="1580" endline="1585">dbus_message_get_type</references>
        <references refid="group__DBusMessage_1ga834035e4817acd64adc8ca584bdf3982" compoundref="dbus-message_8c" startline="1522" endline="1540">dbus_message_ref</references>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" compoundref="dbus-protocol_8h" startline="236">DBUS_MESSAGE_TYPE_METHOD_RETURN</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" compoundref="dbus-pending-call_8c" startline="70">DBusPendingCall::reply</references>
        <references refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" compoundref="dbus-pending-call_8c" startline="75">DBusPendingCall::reply_serial</references>
        <references refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" compoundref="dbus-pending-call_8c" startline="73">DBusPendingCall::timeout_link</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga6b10d157242e540fd18bd3db733dab5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_pending_call_complete</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_complete</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Calls notifier function for the pending call and sets the call to completed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="188" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="187" bodyend="201"/>
        <references refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" compoundref="dbus-pending-call_8c" startline="77">DBusPendingCall::completed</references>
        <references refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" compoundref="dbus-pending-call_8c" startline="792" endline="806">dbus_pending_call_get_data</references>
        <references refid="structDBusPendingCall_1a057527b236383b2f3436f4ed5ddc2d4b" compoundref="dbus-pending-call_8c" startline="67">DBusPendingCall::function</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga1bc4de7652108d0629522a4e3adffcab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_pending_call_queue_timeout_error_unlocked</definition>
        <argsstring>(DBusPendingCall *pending, DBusConnection *connection)</argsstring>
        <name>_dbus_pending_call_queue_timeout_error_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type><ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> *</type>
          <declname>connection</declname>
        </param>
        <briefdescription>
<para>If the pending call hasn&apos;t been timed out, add its timeout error reply to the connection&apos;s incoming message queue. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connection</parametername>
</parameternamelist>
<parameterdescription>
<para>the connection the call was sent to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="213" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="211" bodyend="222"/>
        <references refid="group__DBusConnectionInternals_1gadb7a525dc6b566b575ee4f9b20028b04" compoundref="dbus-connection_8c" startline="534" endline="547">_dbus_connection_queue_synthesized_message_link</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" compoundref="dbus-pending-call_8c" startline="73">DBusPendingCall::timeout_link</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1gaf1e630b966722af540502329ed028254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_pending_call_is_timeout_added_unlocked</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_is_timeout_added_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Checks to see if a timeout has been added. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there is a timeout or <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="232" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="231" bodyend="236"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a9e1230f62e6ada8af3903d299f2ff0b4" compoundref="dbus-pending-call_8c" startline="78">DBusPendingCall::timeout_added</references>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="473" endline="523">_dbus_connection_queue_received_message_link</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1gafea13f8b9977d341e41201c407adea2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_pending_call_set_timeout_added_unlocked</definition>
        <argsstring>(DBusPendingCall *pending, dbus_bool_t is_added)</argsstring>
        <name>_dbus_pending_call_set_timeout_added_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>is_added</declname>
        </param>
        <briefdescription>
<para>Sets wether the timeout has been added. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_added</parametername>
</parameternamelist>
<parameterdescription>
<para>whether or not a timeout is added </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="248" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="246" bodyend="252"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a9e1230f62e6ada8af3903d299f2ff0b4" compoundref="dbus-pending-call_8c" startline="78">DBusPendingCall::timeout_added</references>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="473" endline="523">_dbus_connection_queue_received_message_link</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1gaa9acac047b61c9a0eaff1977151e9e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusTimeout" kindref="compound">DBusTimeout</ref> *</type>
        <definition>DBusTimeout* _dbus_pending_call_get_timeout_unlocked</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_get_timeout_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Retrives the timeout. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a timeout object or NULL if call has no timeout </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="263" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="262" bodyend="267"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" compoundref="dbus-pending-call_8c" startline="71">DBusPendingCall::timeout</references>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="473" endline="523">_dbus_connection_queue_received_message_link</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1gaf5f3df36149bfe55d824eb08d00768fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dbus_uint32_t</type>
        <definition>dbus_uint32_t _dbus_pending_call_get_reply_serial_unlocked</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_get_reply_serial_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Gets the reply&apos;s serial number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a serial number for the reply or 0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="277" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="276" bodyend="281"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" compoundref="dbus-pending-call_8c" startline="75">DBusPendingCall::reply_serial</references>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga283f0254537c4bf4453dbed6fad2e21e" compoundref="dbus-connection_8c" startline="1186" endline="1225">_dbus_connection_do_iteration_unlocked</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga4c0325356df50a5dc103bdab3e7148f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_pending_call_set_reply_serial_unlocked</definition>
        <argsstring>(DBusPendingCall *pending, dbus_uint32_t serial)</argsstring>
        <name>_dbus_pending_call_set_reply_serial_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type>dbus_uint32_t</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
<para>Sets the reply&apos;s serial number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>the serial number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="292" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="290" bodyend="297"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" compoundref="dbus-pending-call_8c" startline="75">DBusPendingCall::reply_serial</references>
        <referencedby refid="group__DBusPendingCallInternals_1ga9901fc4c5fd2db9bf1ce2dcc9abf55fc" compoundref="dbus-pending-call_8c" startline="337" endline="365">_dbus_pending_call_set_timeout_error_unlocked</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga68e5ff616e6a6563d83966c3d88b9b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> *</type>
        <definition>DBusConnection* _dbus_pending_call_get_connection_and_lock</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_get_connection_and_lock</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Gets the connection associated with this pending call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the connection associated with the pending call </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="307" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="306" bodyend="312"/>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" compoundref="dbus-pending-call_8c" startline="52">CONNECTION_LOCK</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1gae725060aa80d9df58dcee4f1fa108784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> *</type>
        <definition>DBusConnection* _dbus_pending_call_get_connection_unlocked</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_get_connection_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Gets the connection associated with this pending call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the connection associated with the pending call </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="322" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="321" bodyend="326"/>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga9901fc4c5fd2db9bf1ce2dcc9abf55fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_pending_call_set_timeout_error_unlocked</definition>
        <argsstring>(DBusPendingCall *pending, DBusMessage *message, dbus_uint32_t serial)</argsstring>
        <name>_dbus_pending_call_set_timeout_error_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>dbus_uint32_t</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
<para>Sets the reply message associated with the pending call to a timeout error. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message we are sending the error reply to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>serial number for the reply </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on OOM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="340" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="337" bodyend="365"/>
        <references refid="group__DBusList_1gac20b9981531cef590d49a59240344cd8" compoundref="dbus-list_8c" startline="219" endline="222">_dbus_list_alloc_link</references>
        <references refid="group__DBusPendingCallInternals_1ga4c0325356df50a5dc103bdab3e7148f3" compoundref="dbus-pending-call_8c" startline="290" endline="297">_dbus_pending_call_set_reply_serial_unlocked</references>
        <references refid="group__DBusProtocol_1gade2cb1c5a6adf47af18672865f233b6d" compoundref="dbus-protocol_8h" startline="358">DBUS_ERROR_NO_REPLY</references>
        <references refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1327" endline="1379">dbus_message_new_error</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1550" endline="1567">dbus_message_unref</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" compoundref="dbus-pending-call_8c" startline="73">DBusPendingCall::timeout_link</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" compoundref="dbus-connection_8c" startline="3339" endline="3440">dbus_connection_send_with_reply</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga9d8987da3747604d370ffec2c5e1e10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
        <definition>DBusPendingCall* _dbus_pending_call_ref_unlocked</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_ref_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Increments the reference count on a pending call, while the lock on its connection is already held. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pending call object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="376" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="375" bodyend="380"/>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2354" endline="2366">_dbus_atomic_inc</references>
        <references refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" compoundref="dbus-pending-call_8c" startline="63">DBusPendingCall::refcount</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga238e1d4f5330f9546258ba3c867c79e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_pending_call_last_unref</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_last_unref</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="385" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="384" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga26f09beed0dd6323cca0452abf344567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_pending_call_unref_and_unlock</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_unref_and_unlock</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Decrements the reference count on a pending call, freeing it if the count reaches 0. </para>        </briefdescription>
        <detaileddescription>
<para>Assumes connection lock is already held.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="435" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="434" bodyend="445"/>
        <references refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" compoundref="dbus-sysdeps-unix_8c" startline="2375" endline="2388">_dbus_atomic_dec</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" compoundref="dbus-pending-call_8c" startline="56">CONNECTION_UNLOCK</references>
        <references refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" compoundref="dbus-pending-call_8c" startline="63">DBusPendingCall::refcount</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga37bef4359b3c29629a57f5fe480690a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_pending_call_get_completed_unlocked</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>_dbus_pending_call_get_completed_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Checks whether the pending call has received a reply yet, or not. </para>        </briefdescription>
        <detaileddescription>
<para>Assumes connection lock is held.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if a reply has been received </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="456" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="455" bodyend="458"/>
        <references refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" compoundref="dbus-pending-call_8c" startline="77">DBusPendingCall::completed</references>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga283f0254537c4bf4453dbed6fad2e21e" compoundref="dbus-connection_8c" startline="1186" endline="1225">_dbus_connection_do_iteration_unlocked</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_pending_call_set_data_unlocked</definition>
        <argsstring>(DBusPendingCall *pending, dbus_int32_t slot, void *data, DBusFreeFunction free_data_func)</argsstring>
        <name>_dbus_pending_call_set_data_unlocked</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type>dbus_int32_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_func</declname>
        </param>
        <briefdescription>
<para>Stores a pointer on a <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref>, along with an optional function to be used for freeing the data when the data is set again, or when the pending call is finalized. </para>        </briefdescription>
        <detaileddescription>
<para>The slot number must have been allocated with <ref refid="group__DBusPendingCall_1ga95614dad0ada70e3a20d9878339e3109" kindref="member">dbus_pending_call_allocate_data_slot()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to store </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_func</parametername>
</parameternamelist>
<parameterdescription>
<para>finalizer function for the data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there was enough memory to store the data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="481" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="477" bodyend="503"/>
        <references refid="group__DBusDataSlot_1gad2952f9f686d96e7114fc49ab7452e1a" compoundref="dbus-dataslot_8c" startline="237" endline="286">_dbus_data_slot_list_set</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" compoundref="dbus-pending-call_8c" startline="52">CONNECTION_LOCK</references>
        <references refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" compoundref="dbus-pending-call_8c" startline="56">CONNECTION_UNLOCK</references>
        <references refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" compoundref="dbus-pending-call_8c" startline="65">DBusPendingCall::slot_list</references>
        <referencedby refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" compoundref="dbus-pending-call_8c" startline="766" endline="781">dbus_pending_call_set_data</referencedby>
        <referencedby refid="group__DBusPendingCall_1ga16b67b418b1dc27cfdda6b20f7447670" compoundref="dbus-pending-call_8c" startline="591" endline="610">dbus_pending_call_set_notify</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga334f6c6621583e15fdaf1a3f93dd2221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
        <definition>DBUS_EXPORT DBusPendingCall * dbus_pending_call_ref</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>dbus_pending_call_ref</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Increments the reference count on a pending call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pending call object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="553" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="552" bodyend="559"/>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2354" endline="2366">_dbus_atomic_inc</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" compoundref="dbus-pending-call_8c" startline="63">DBusPendingCall::refcount</references>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1gadaba15a74ba4925cdef52d4791cd3147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_pending_call_unref</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>dbus_pending_call_unref</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Decrements the reference count on a pending call, freeing it if the count reaches 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="569" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="568" bodyend="578"/>
        <references refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" compoundref="dbus-sysdeps-unix_8c" startline="2375" endline="2388">_dbus_atomic_dec</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" compoundref="dbus-pending-call_8c" startline="63">DBusPendingCall::refcount</references>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
        <referencedby refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" compoundref="dbus-connection_8c" startline="3339" endline="3440">dbus_connection_send_with_reply</referencedby>
        <referencedby refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" compoundref="dbus-connection_8c" startline="3475" endline="3532">dbus_connection_send_with_reply_and_block</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga16b67b418b1dc27cfdda6b20f7447670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_pending_call_set_notify</definition>
        <argsstring>(DBusPendingCall *pending, DBusPendingCallNotifyFunction function, void *user_data, DBusFreeFunction free_user_data)</argsstring>
        <name>dbus_pending_call_set_notify</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga90b8d85edb44420f7a8ea6baafb3bf88" kindref="member">DBusPendingCallNotifyFunction</ref></type>
          <declname>function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_user_data</declname>
        </param>
        <briefdescription>
<para>Sets a notification function to be called when the reply is received or the pending call times out. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>notifier function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to pass to notifier function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>function to free the user data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="595" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="591" bodyend="610"/>
        <references refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" compoundref="dbus-pending-call_8c" startline="477" endline="503">_dbus_pending_call_set_data_unlocked</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" compoundref="dbus-pending-call_8c" startline="52">CONNECTION_LOCK</references>
        <references refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" compoundref="dbus-pending-call_8c" startline="56">CONNECTION_UNLOCK</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusPendingCall_1a057527b236383b2f3436f4ed5ddc2d4b" compoundref="dbus-pending-call_8c" startline="67">DBusPendingCall::function</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga6530d18f891d3ca5f5df87ea7c2b155c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_pending_call_cancel</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>dbus_pending_call_cancel</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Cancels the pending call, such that any reply or error received will just be ignored. </para>        </briefdescription>
        <detaileddescription>
<para>Drops the dbus library&apos;s internal reference to the <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> so will free the call if nobody else is holding a reference. However you usually get a reference from <ref refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" kindref="member">dbus_connection_send_with_reply()</ref> so probably your app owns a ref also.</para><para>Note that canceling a pending call will <emphasis>not</emphasis> simulate a timed-out call; if a call times out, then a timeout error reply is received. If you cancel the call, no reply is received unless the the reply was already received before you canceled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="629" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="628" bodyend="634"/>
        <references refid="group__DBusConnectionInternals_1ga968196bee49659e75c54b53d7c85fa51" compoundref="dbus-connection_8c" startline="1032" endline="1037">_dbus_connection_remove_pending_call</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1gacbf33ae8a1cc125628f9ea44d175c159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_pending_call_get_completed</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>dbus_pending_call_get_completed</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Checks whether the pending call has received a reply yet, or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if a reply has been received </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="645" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="644" bodyend="655"/>
        <references refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" compoundref="dbus-pending-call_8c" startline="77">DBusPendingCall::completed</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" compoundref="dbus-pending-call_8c" startline="52">CONNECTION_LOCK</references>
        <references refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" compoundref="dbus-pending-call_8c" startline="56">CONNECTION_UNLOCK</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga5a738928c2369fef093ce00658903d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_pending_call_steal_reply</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>dbus_pending_call_steal_reply</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Gets the reply, or returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none has been received yet. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the reply message passes to the caller. This function can only be called once per pending call, since the reply message is tranferred to the caller.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the reply message or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="668" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="667" bodyend="683"/>
        <references refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" compoundref="dbus-pending-call_8c" startline="77">DBusPendingCall::completed</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" compoundref="dbus-pending-call_8c" startline="52">CONNECTION_LOCK</references>
        <references refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" compoundref="dbus-pending-call_8c" startline="56">CONNECTION_UNLOCK</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" compoundref="dbus-pending-call_8c" startline="70">DBusPendingCall::reply</references>
        <referencedby refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" compoundref="dbus-connection_8c" startline="3475" endline="3532">dbus_connection_send_with_reply_and_block</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga67b99f749a7f477c7b5d70f2acee5452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_pending_call_block</definition>
        <argsstring>(DBusPendingCall *pending)</argsstring>
        <name>dbus_pending_call_block</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Block until the pending call is completed. </para>        </briefdescription>
        <detaileddescription>
<para>The blocking is as with <ref refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" kindref="member">dbus_connection_send_with_reply_and_block()</ref>; it does not enter the main loop or process other messages, it simply waits for the reply in question.</para><para>If the pending call is already completed, this function returns immediately.</para><para><xrefsect id="todo_1_todo000045"><xreftitle>Todo</xreftitle><xrefdescription><para>when you start blocking, the timeout is reset, but it should really only use time remaining since the pending call was created. This requires storing timestamps instead of intervals in the timeout</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending call </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="702" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="701" bodyend="706"/>
        <references refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" compoundref="dbus-connection_8c" startline="2351" endline="2522">_dbus_connection_block_pending_call</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" compoundref="dbus-connection_8c" startline="3475" endline="3532">dbus_connection_send_with_reply_and_block</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga95614dad0ada70e3a20d9878339e3109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_pending_call_allocate_data_slot</definition>
        <argsstring>(dbus_int32_t *slot_p)</argsstring>
        <name>dbus_pending_call_allocate_data_slot</name>
        <param>
          <type>dbus_int32_t *</type>
          <declname>slot_p</declname>
        </param>
        <briefdescription>
<para>Allocates an integer ID to be used for storing application-specific data on any <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The allocated ID may then be used with <ref refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" kindref="member">dbus_pending_call_set_data()</ref> and <ref refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" kindref="member">dbus_pending_call_get_data()</ref>. The passed-in slot must be initialized to -1, and is filled in with the slot ID. If the passed-in slot is not -1, it&apos;s assumed to be already allocated, and its refcount is incremented.</para><para>The allocated slot is global, i.e. all <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> objects will have a slot with the given integer ID reserved.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_p</parametername>
</parameternamelist>
<parameterdescription>
<para>address of a global variable storing the slot </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure (no memory) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="724" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="723" bodyend="730"/>
        <references refid="group__DBusDataSlot_1ga941a12182e69c185bd27f6efbfbd0f86" compoundref="dbus-dataslot_8c" startline="69" endline="151">_dbus_data_slot_allocator_alloc</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusPendingCallInternals_1ga3f2300d7a768783bc2fae0991bcc55df" compoundref="dbus-pending-call_8c" startline="94" endline="144">_dbus_pending_call_new_unlocked</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga1eb6f342bba71b01266629f80be84617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_pending_call_free_data_slot</definition>
        <argsstring>(dbus_int32_t *slot_p)</argsstring>
        <name>dbus_pending_call_free_data_slot</name>
        <param>
          <type>dbus_int32_t *</type>
          <declname>slot_p</declname>
        </param>
        <briefdescription>
<para>Deallocates a global ID for <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> data slots. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" kindref="member">dbus_pending_call_get_data()</ref> and <ref refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" kindref="member">dbus_pending_call_set_data()</ref> may no longer be used with this slot. Existing data stored on existing <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> objects will be freed when the <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> is finalized, but may not be retrieved (and may only be replaced if someone else reallocates the slot). When the refcount on the passed-in slot reaches 0, it is set to -1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_p</parametername>
</parameternamelist>
<parameterdescription>
<para>address storing the slot to deallocate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="745" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="744" bodyend="750"/>
        <references refid="group__DBusDataSlot_1ga059c50a24cd9fc984e918e6159841633" compoundref="dbus-dataslot_8c" startline="165" endline="206">_dbus_data_slot_allocator_free</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusPendingCallInternals_1ga3f2300d7a768783bc2fae0991bcc55df" compoundref="dbus-pending-call_8c" startline="94" endline="144">_dbus_pending_call_new_unlocked</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_pending_call_set_data</definition>
        <argsstring>(DBusPendingCall *pending, dbus_int32_t slot, void *data, DBusFreeFunction free_data_func)</argsstring>
        <name>dbus_pending_call_set_data</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type>dbus_int32_t</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_func</declname>
        </param>
        <briefdescription>
<para>Stores a pointer on a <ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref>, along with an optional function to be used for freeing the data when the data is set again, or when the pending call is finalized. </para>        </briefdescription>
        <detaileddescription>
<para>The slot number must have been allocated with <ref refid="group__DBusPendingCall_1ga95614dad0ada70e3a20d9878339e3109" kindref="member">dbus_pending_call_allocate_data_slot()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to store </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_func</parametername>
</parameternamelist>
<parameterdescription>
<para>finalizer function for the data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there was enough memory to store the data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="770" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="766" bodyend="781"/>
        <references refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" compoundref="dbus-pending-call_8c" startline="477" endline="503">_dbus_pending_call_set_data_unlocked</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" compoundref="dbus-pending-call_8c" startline="52">CONNECTION_LOCK</references>
        <references refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" compoundref="dbus-pending-call_8c" startline="56">CONNECTION_UNLOCK</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>DBUS_EXPORT void * dbus_pending_call_get_data</definition>
        <argsstring>(DBusPendingCall *pending, dbus_int32_t slot)</argsstring>
        <name>dbus_pending_call_get_data</name>
        <param>
          <type><ref refid="structDBusPendingCall" kindref="compound">DBusPendingCall</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type>dbus_int32_t</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Retrieves data previously set with <ref refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" kindref="member">dbus_pending_call_set_data()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The slot must still be allocated (must not have been freed).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>the pending_call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot to get data from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the data, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" line="794" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c" bodystart="792" bodyend="806"/>
        <references refid="group__DBusDataSlot_1ga43f741229f0c38788442601e2750ec66" compoundref="dbus-dataslot_8c" startline="298" endline="318">_dbus_data_slot_list_get</references>
        <references refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" compoundref="dbus-pending-call_8c" startline="69">DBusPendingCall::connection</references>
        <references refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" compoundref="dbus-pending-call_8c" startline="52">CONNECTION_LOCK</references>
        <references refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" compoundref="dbus-pending-call_8c" startline="56">CONNECTION_UNLOCK</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" compoundref="dbus-pending-call_8c" startline="65">DBusPendingCall::slot_list</references>
        <referencedby refid="group__DBusPendingCallInternals_1ga6b10d157242e540fd18bd3db733dab5c" compoundref="dbus-pending-call_8c" startline="187" endline="201">_dbus_pending_call_complete</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-pending-call.c<sp/>Object<sp/>representing<sp/>a<sp/>call<sp/>in<sp/>progress.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/>Red<sp/>Hat<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-connection-internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-pending-call-internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-pending-call.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-threads.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" refkind="member"><highlight class="preprocessor">#define<sp/>CONNECTION_LOCK(connection)<sp/><sp/><sp/>_dbus_connection_lock(connection)</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="56" refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" refkind="member"><highlight class="preprocessor">#define<sp/>CONNECTION_UNLOCK(connection)<sp/>_dbus_connection_unlock(connection)</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="61" refid="structDBusPendingCall" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusAtomic" kindref="compound" tooltip="An atomic integer safe to increment or decrement from multiple threads.">DBusAtomic</ref><sp/><ref refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" kindref="member" tooltip="reference count">refcount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusDataSlotList" kindref="compound" tooltip="Data structure that stores the actual user data set at a given slot.">DBusDataSlotList</ref><sp/><ref refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" kindref="member" tooltip="Data stored by allocated integer ID.">slot_list</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="structDBusPendingCall_1a057527b236383b2f3436f4ed5ddc2d4b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnection_1ga90b8d85edb44420f7a8ea6baafb3bf88" kindref="member" tooltip="Called when a pending call now has a reply available.">DBusPendingCallNotifyFunction</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusConnection" kindref="compound" tooltip="Implementation details of DBusConnection.">DBusConnection</ref><sp/>*<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound" tooltip="Internals of DBusMessage.">DBusMessage</ref><sp/>*<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusTimeout" kindref="compound" tooltip="Internals of DBusTimeout.">DBusTimeout</ref><sp/>*<ref refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" kindref="member" tooltip="Timeout.">timeout</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound" tooltip="A node in a linked list.">DBusList</ref><sp/>*<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" refkind="member"><highlight class="normal"><sp/><sp/>dbus_uint32_t<sp/><ref refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" kindref="member" tooltip="Expected serial of reply.">reply_serial</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" kindref="member" tooltip="TRUE if completed.">completed</ref><sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="structDBusPendingCall_1a9e1230f62e6ada8af3903d299f2ff0b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusPendingCall_1a9e1230f62e6ada8af3903d299f2ff0b4" kindref="member" tooltip="Have added the timeout.">timeout_added</ref><sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>dbus_int32_t<sp/>notify_user_data_slot<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref>*</highlight></codeline>
<codeline lineno="94" refid="group__DBusPendingCallInternals_1ga3f2300d7a768783bc2fae0991bcc55df" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga3f2300d7a768783bc2fae0991bcc55df" kindref="member" tooltip="Creates a new pending reply object.">_dbus_pending_call_new_unlocked</ref><sp/>(<ref refid="structDBusConnection" kindref="compound" tooltip="Implementation details of DBusConnection.">DBusConnection</ref><sp/><sp/><sp/><sp/>*connection,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_milliseconds,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTimeoutInternals_1ga1533b9aa7bfe55ccb798ab041e4ce242" kindref="member" tooltip="function to run when the timeout is handled">DBusTimeoutHandler</ref><sp/>timeout_handler)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="structDBusTimeout" kindref="compound" tooltip="Internals of DBusTimeout.">DBusTimeout</ref><sp/>*timeout;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(timeout_milliseconds<sp/>&gt;=<sp/>0<sp/>||<sp/>timeout_milliseconds<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_milliseconds<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout_milliseconds<sp/>=<sp/>_DBUS_DEFAULT_TIMEOUT_VALUE;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusPendingCall_1ga95614dad0ada70e3a20d9878339e3109" kindref="member" tooltip="Allocates an integer ID to be used for storing application-specific data on any DBusPendingCall.">dbus_pending_call_allocate_data_slot</ref><sp/>(&amp;notify_user_data_slot))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>pending<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member" tooltip="Safe macro for using dbus_malloc0().">dbus_new0</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pending<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusPendingCall_1ga1eb6f342bba71b01266629f80be84617" kindref="member" tooltip="Deallocates a global ID for DBusPendingCall data slots.">dbus_pending_call_free_data_slot</ref><sp/>(&amp;notify_user_data_slot);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_milliseconds<sp/>!=<sp/><ref refid="group__DBusPendingCall_1ga21384c9c5b0da54f7d0a92012522f213" kindref="member" tooltip="An integer constant representing an infinite timeout.">DBUS_TIMEOUT_INFINITE</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/><ref refid="group__DBusTimeoutInternals_1ga3f63abde6bb7ebecf6fa8774ba501a26" kindref="member" tooltip="Creates a new DBusTimeout, enabled by default.">_dbus_timeout_new</ref><sp/>(timeout_milliseconds,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_handler,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusPendingCall_1ga1eb6f342bba71b01266629f80be84617" kindref="member" tooltip="Deallocates a global ID for DBusPendingCall data slots.">dbus_pending_call_free_data_slot</ref><sp/>(&amp;notify_user_data_slot);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(pending);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" kindref="member" tooltip="Timeout.">timeout</ref><sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" kindref="member" tooltip="Timeout.">timeout</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member" tooltip="Atomically increments an integer.">_dbus_atomic_inc</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" kindref="member" tooltip="reference count">refcount</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref><sp/>=<sp/>connection;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnectionInternals_1ga7151f75b5d2308ec80cfe893aba72aa1" kindref="member" tooltip="Increments the reference count of a DBusConnection.">_dbus_connection_ref_unlocked</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="group__DBusDataSlot_1ga6de49b3a1210202215d40a5a19806992" kindref="member" tooltip="Initializes a slot list.">_dbus_data_slot_list_init</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" kindref="member" tooltip="Data stored by allocated integer ID.">slot_list</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="group__DBusPendingCallInternals_1ga4b8cc560549160aecd924037a872009d" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga4b8cc560549160aecd924037a872009d" kindref="member" tooltip="Sets the reply of a pending call with the given message, or if the message is NULL, by timing out the pending call.">_dbus_pending_call_set_reply_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessage" kindref="compound" tooltip="Internals of DBusMessage.">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/>*message)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member" tooltip="Data stored at this element.">data</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" kindref="member" tooltip="Frees all links in the list and sets the list head to NULL.">_dbus_list_clear</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1ga834035e4817acd64adc8ca584bdf3982" kindref="member" tooltip="Increments the reference count of a DBusMessage.">dbus_message_ref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>handing<sp/>message<sp/>%p<sp/>(%s)<sp/>to<sp/>pending<sp/>call<sp/>serial<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" kindref="member" tooltip="Gets the type of a message.">dbus_message_get_type</ref><sp/>(message)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" kindref="member" tooltip="Message type of a method return message, see dbus_message_get_type()">DBUS_MESSAGE_TYPE_METHOD_RETURN</ref><sp/>?</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;method<sp/>return&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" kindref="member" tooltip="Gets the type of a message.">dbus_message_get_type</ref><sp/>(message)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member" tooltip="Message type of an error reply message, see dbus_message_get_type()">DBUS_MESSAGE_TYPE_ERROR</ref><sp/>?</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;other<sp/>type&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" kindref="member" tooltip="Expected serial of reply.">reply_serial</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending-&gt;<ref refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" kindref="member" tooltip="Expected serial of reply.">reply_serial</ref><sp/>==<sp/><ref refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" kindref="member" tooltip="Returns the serial that the message is a reply to or 0 if none.">dbus_message_get_reply_serial</ref><sp/>(message));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref><sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group__DBusPendingCallInternals_1ga6b10d157242e540fd18bd3db733dab5c" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga6b10d157242e540fd18bd3db733dab5c" kindref="member" tooltip="Calls notifier function for the pending call and sets the call to completed.">_dbus_pending_call_complete</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(!pending-&gt;<ref refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" kindref="member" tooltip="TRUE if completed.">completed</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" kindref="member" tooltip="TRUE if completed.">completed</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a057527b236383b2f3436f4ed5ddc2d4b" kindref="member" tooltip="Notifier when reply arrives.">function</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>user_data<sp/>=<sp/><ref refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" kindref="member" tooltip="Retrieves data previously set with dbus_pending_call_set_data().">dbus_pending_call_get_data</ref><sp/>(pending,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notify_user_data_slot);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>pending-&gt;<ref refid="structDBusPendingCall_1a057527b236383b2f3436f4ed5ddc2d4b" kindref="member" tooltip="Notifier when reply arrives.">function</ref>)<sp/>(pending,<sp/>user_data);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="group__DBusPendingCallInternals_1ga1bc4de7652108d0629522a4e3adffcab" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga1bc4de7652108d0629522a4e3adffcab" kindref="member" tooltip="If the pending call hasn&amp;#39;t been timed out, add its timeout error reply to the connection&amp;#39;s incoming m...">_dbus_pending_call_queue_timeout_error_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending,<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusConnection" kindref="compound" tooltip="Implementation details of DBusConnection.">DBusConnection</ref><sp/><sp/>*connection)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(connection<sp/>==<sp/>pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnectionInternals_1gadb7a525dc6b566b575ee4f9b20028b04" kindref="member" tooltip="Adds a link + message to the incoming message queue.">_dbus_connection_queue_synthesized_message_link</ref><sp/>(connection,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/></highlight></codeline>
<codeline lineno="231" refid="group__DBusPendingCallInternals_1gaf1e630b966722af540502329ed028254" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1gaf1e630b966722af540502329ed028254" kindref="member" tooltip="Checks to see if a timeout has been added.">_dbus_pending_call_is_timeout_added_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/>*pending)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a9e1230f62e6ada8af3903d299f2ff0b4" kindref="member" tooltip="Have added the timeout.">timeout_added</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="group__DBusPendingCallInternals_1gafea13f8b9977d341e41201c407adea2a" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1gafea13f8b9977d341e41201c407adea2a" kindref="member" tooltip="Sets wether the timeout has been added.">_dbus_pending_call_set_timeout_added_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/>*pending,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_added)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a9e1230f62e6ada8af3903d299f2ff0b4" kindref="member" tooltip="Have added the timeout.">timeout_added</ref><sp/>=<sp/>is_added;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="structDBusTimeout" kindref="compound" tooltip="Internals of DBusTimeout.">DBusTimeout</ref><sp/>*</highlight></codeline>
<codeline lineno="262" refid="group__DBusPendingCallInternals_1gaa9acac047b61c9a0eaff1977151e9e08" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1gaa9acac047b61c9a0eaff1977151e9e08" kindref="member" tooltip="Retrives the timeout.">_dbus_pending_call_get_timeout_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/>*pending)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending-&gt;<ref refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" kindref="member" tooltip="Timeout.">timeout</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">dbus_uint32_t<sp/></highlight></codeline>
<codeline lineno="276" refid="group__DBusPendingCallInternals_1gaf5f3df36149bfe55d824eb08d00768fc" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1gaf5f3df36149bfe55d824eb08d00768fc" kindref="member" tooltip="Gets the reply&amp;#39;s serial number.">_dbus_pending_call_get_reply_serial_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/>*pending)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending-&gt;<ref refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" kindref="member" tooltip="Expected serial of reply.">reply_serial</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group__DBusPendingCallInternals_1ga4c0325356df50a5dc103bdab3e7148f3" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga4c0325356df50a5dc103bdab3e7148f3" kindref="member" tooltip="Sets the reply&amp;#39;s serial number.">_dbus_pending_call_set_reply_serial_unlocked</ref><sp/><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_uint32_t<sp/>serial)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending-&gt;<ref refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" kindref="member" tooltip="Expected serial of reply.">reply_serial</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1ab6234d38b3f3ca8ff5de2d3cce8c3100" kindref="member" tooltip="Expected serial of reply.">reply_serial</ref><sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="structDBusConnection" kindref="compound" tooltip="Implementation details of DBusConnection.">DBusConnection</ref><sp/>*</highlight></codeline>
<codeline lineno="306" refid="group__DBusPendingCallInternals_1ga68e5ff616e6a6563d83966c3d88b9b32" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga68e5ff616e6a6563d83966c3d88b9b32" kindref="member" tooltip="Gets the connection associated with this pending call.">_dbus_pending_call_get_connection_and_lock</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" kindref="member" tooltip="Internals of DBusPendingCall.">CONNECTION_LOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="structDBusConnection" kindref="compound" tooltip="Implementation details of DBusConnection.">DBusConnection</ref><sp/>*</highlight></codeline>
<codeline lineno="321" refid="group__DBusPendingCallInternals_1gae725060aa80d9df58dcee4f1fa108784" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1gae725060aa80d9df58dcee4f1fa108784" kindref="member" tooltip="Gets the connection associated with this pending call.">_dbus_pending_call_get_connection_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="337" refid="group__DBusPendingCallInternals_1ga9901fc4c5fd2db9bf1ce2dcc9abf55fc" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga9901fc4c5fd2db9bf1ce2dcc9abf55fc" kindref="member" tooltip="Sets the reply message associated with the pending call to a timeout error.">_dbus_pending_call_set_timeout_error_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessage" kindref="compound" tooltip="Internals of DBusMessage.">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_uint32_t<sp/><sp/><sp/><sp/>serial)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound" tooltip="A node in a linked list.">DBusList</ref><sp/>*reply_link;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound" tooltip="Internals of DBusMessage.">DBusMessage</ref><sp/>*reply;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>reply<sp/>=<sp/><ref refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" kindref="member" tooltip="Creates a new message that is an error reply to another message.">dbus_message_new_error</ref><sp/>(message,<sp/><ref refid="group__DBusProtocol_1gade2cb1c5a6adf47af18672865f233b6d" kindref="member" tooltip="No reply to a message expecting one, usually means a timeout occurred.">DBUS_ERROR_NO_REPLY</ref>,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>receive<sp/>a<sp/>reply.<sp/>Possible<sp/>causes<sp/>include:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>remote<sp/>application<sp/>did<sp/>not<sp/>send<sp/>a<sp/>reply,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>message<sp/>bus<sp/>security<sp/>policy<sp/>blocked<sp/>the<sp/>reply,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>reply<sp/>timeout<sp/>expired,<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>network<sp/>connection<sp/>was<sp/>broken.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>reply_link<sp/>=<sp/><ref refid="group__DBusList_1gac20b9981531cef590d49a59240344cd8" kindref="member" tooltip="Allocates a linked list node.">_dbus_list_alloc_link</ref><sp/>(reply);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply_link<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member" tooltip="Decrements the reference count of a DBusMessage, freeing the message if the count reaches 0...">dbus_message_unref</ref><sp/>(reply);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref><sp/>=<sp/>reply_link;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga4c0325356df50a5dc103bdab3e7148f3" kindref="member" tooltip="Sets the reply&amp;#39;s serial number.">_dbus_pending_call_set_reply_serial_unlocked</ref><sp/>(pending,<sp/>serial);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*</highlight></codeline>
<codeline lineno="375" refid="group__DBusPendingCallInternals_1ga9d8987da3747604d370ffec2c5e1e10a" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga9d8987da3747604d370ffec2c5e1e10a" kindref="member" tooltip="Increments the reference count on a pending call, while the lock on its connection is already held...">_dbus_pending_call_ref_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member" tooltip="Atomically increments an integer.">_dbus_atomic_inc</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" kindref="member" tooltip="reference count">refcount</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">_dbus_pending_call_last_unref<sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="structDBusConnection" kindref="compound" tooltip="Implementation details of DBusConnection.">DBusConnection</ref><sp/>*connection;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>get<sp/>here,<sp/>we<sp/>should<sp/>be<sp/>already<sp/>detached</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/>*<sp/>from<sp/>the<sp/>connection,<sp/>or<sp/>never<sp/>attached.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(!pending-&gt;<ref refid="structDBusPendingCall_1a9e1230f62e6ada8af3903d299f2ff0b4" kindref="member" tooltip="Have added the timeout.">timeout_added</ref>);<sp/><sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>connection<sp/>=<sp/>pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>assumes<sp/>we<sp/>aren&apos;t<sp/>holding<sp/>connection<sp/>lock...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="group__DBusDataSlot_1gabc399733376c462c3010271a2d431e73" kindref="member" tooltip="Frees the data slot list and all data slots contained in it, calling application-provided free functi...">_dbus_data_slot_list_free</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" kindref="member" tooltip="Data stored by allocated integer ID.">slot_list</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" kindref="member" tooltip="Timeout.">timeout</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusTimeoutInternals_1gaea6359793576a2eec42e27267bae7bbd" kindref="member" tooltip="Decrements the reference count of a DBusTimeout object and finalizes the object if the count reaches ...">_dbus_timeout_unref</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1af9dea193bf4ab249c280ff6abcb743f8" kindref="member" tooltip="Timeout.">timeout</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member" tooltip="Decrements the reference count of a DBusMessage, freeing the message if the count reaches 0...">dbus_message_unref</ref><sp/>((<ref refid="structDBusMessage" kindref="compound" tooltip="Internals of DBusMessage.">DBusMessage</ref><sp/>*)pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member" tooltip="Data stored at this element.">data</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1ga6e824f717125ce40c549d5402e32610f" kindref="member" tooltip="Frees a linked list node allocated with _dbus_list_alloc_link.">_dbus_list_free_link</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a85252a169617a86f80462bfb53ca2f7c" kindref="member" tooltip="Preallocated timeout response.">timeout_link</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member" tooltip="Decrements the reference count of a DBusMessage, freeing the message if the count reaches 0...">dbus_message_unref</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member" tooltip="Frees a block of memory previously allocated by dbus_malloc() or dbus_malloc0().">dbus_free</ref><sp/>(pending);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCall_1ga1eb6f342bba71b01266629f80be84617" kindref="member" tooltip="Deallocates a global ID for DBusPendingCall data slots.">dbus_pending_call_free_data_slot</ref><sp/>(&amp;notify_user_data_slot);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>connection<sp/>lock<sp/>should<sp/>not<sp/>be<sp/>held.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>the<sp/>connection<sp/>last<sp/>to<sp/>avoid<sp/>a<sp/>weird<sp/>state<sp/>while</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/>*<sp/>calling<sp/>out<sp/>to<sp/>application<sp/>code<sp/>where<sp/>the<sp/>pending<sp/>exists</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>not<sp/>the<sp/>connection.</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnection_1ga6385ff09bc108238c4429e7c195dab25" kindref="member" tooltip="Decrements the reference count of a DBusConnection, and finalizes it if the count reaches zero...">dbus_connection_unref</ref><sp/>(connection);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="group__DBusPendingCallInternals_1ga26f09beed0dd6323cca0452abf344567" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga26f09beed0dd6323cca0452abf344567" kindref="member" tooltip="Decrements the reference count on a pending call, freeing it if the count reaches 0...">_dbus_pending_call_unref_and_unlock</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>dbus_int32_t<sp/>old_refcount;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>old_refcount<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" kindref="member" tooltip="Atomically decrement an integer.">_dbus_atomic_dec</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" kindref="member" tooltip="reference count">refcount</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>_dbus_assert<sp/>(old_refcount<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" kindref="member" tooltip="shorter and more visible way to write _dbus_connection_unlock()">CONNECTION_UNLOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_refcount<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_pending_call_last_unref<sp/>(pending);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="455" refid="group__DBusPendingCallInternals_1ga37bef4359b3c29629a57f5fe480690a1" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga37bef4359b3c29629a57f5fe480690a1" kindref="member" tooltip="Checks whether the pending call has received a reply yet, or not.">_dbus_pending_call_get_completed_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/><sp/><sp/>*pending)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending-&gt;<ref refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" kindref="member" tooltip="TRUE if completed.">completed</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDBusDataSlotAllocator" kindref="compound" tooltip="An allocator that tracks a set of slot IDs.">DBusDataSlotAllocator</ref><sp/>slot_allocator;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">_DBUS_DEFINE_GLOBAL_LOCK<sp/>(pending_call_slots);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="477" refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" kindref="member" tooltip="Stores a pointer on a DBusPendingCall, along with an optional function to be used for freeing the dat...">_dbus_pending_call_set_data_unlocked</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/>*pending,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_int32_t<sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/><sp/>free_data_func)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/>old_free_func;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*old_data;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusDataSlot_1gad2952f9f686d96e7114fc49ab7452e1a" kindref="member" tooltip="Stores a pointer in the data slot list, along with an optional function to be used for freeing the da...">_dbus_data_slot_list_set</ref><sp/>(&amp;slot_allocator,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pending-&gt;<ref refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" kindref="member" tooltip="Data stored by allocated integer ID.">slot_list</ref>,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot,<sp/>data,<sp/>free_data_func,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;old_free_func,<sp/>&amp;old_data);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Drop<sp/>locks<sp/>to<sp/>call<sp/>out<sp/>to<sp/>app<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" kindref="member" tooltip="shorter and more visible way to write _dbus_connection_unlock()">CONNECTION_UNLOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_free_func)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>old_free_func)<sp/>(old_data);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" kindref="member" tooltip="Internals of DBusPendingCall.">CONNECTION_LOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*</highlight></codeline>
<codeline lineno="552" refid="group__DBusPendingCall_1ga334f6c6621583e15fdaf1a3f93dd2221" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga334f6c6621583e15fdaf1a3f93dd2221" kindref="member" tooltip="Increments the reference count on a pending call.">dbus_pending_call_ref</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member" tooltip="Atomically increments an integer.">_dbus_atomic_inc</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" kindref="member" tooltip="reference count">refcount</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending;</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="group__DBusPendingCall_1gadaba15a74ba4925cdef52d4791cd3147" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1gadaba15a74ba4925cdef52d4791cd3147" kindref="member" tooltip="Decrements the reference count on a pending call, freeing it if the count reaches 0...">dbus_pending_call_unref</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>last_unref;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>last_unref<sp/>=<sp/>(<ref refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" kindref="member" tooltip="Atomically decrement an integer.">_dbus_atomic_dec</ref><sp/>(&amp;pending-&gt;<ref refid="structDBusPendingCall_1a952e3c744db112d49bbaffe0fe45048d" kindref="member" tooltip="reference count">refcount</ref>)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_unref)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_pending_call_last_unref(pending);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="591" refid="group__DBusPendingCall_1ga16b67b418b1dc27cfdda6b20f7447670" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga16b67b418b1dc27cfdda6b20f7447670" kindref="member" tooltip="Sets a notification function to be called when the reply is received or the pending call times out...">dbus_pending_call_set_notify</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pending,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga90b8d85edb44420f7a8ea6baafb3bf88" kindref="member" tooltip="Called when a pending call now has a reply available.">DBusPendingCallNotifyFunction</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*user_data,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_user_data)</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" kindref="member" tooltip="Internals of DBusPendingCall.">CONNECTION_LOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>could<sp/>invoke<sp/>application<sp/>code!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" kindref="member" tooltip="Stores a pointer on a DBusPendingCall, along with an optional function to be used for freeing the dat...">_dbus_pending_call_set_data_unlocked</ref><sp/>(pending,<sp/>notify_user_data_slot,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_data,<sp/>free_user_data))</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a057527b236383b2f3436f4ed5ddc2d4b" kindref="member" tooltip="Notifier when reply arrives.">function</ref><sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" kindref="member" tooltip="shorter and more visible way to write _dbus_connection_unlock()">CONNECTION_UNLOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="group__DBusPendingCall_1ga6530d18f891d3ca5f5df87ea7c2b155c" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga6530d18f891d3ca5f5df87ea7c2b155c" kindref="member" tooltip="Cancels the pending call, such that any reply or error received will just be ignored.">dbus_pending_call_cancel</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnectionInternals_1ga968196bee49659e75c54b53d7c85fa51" kindref="member" tooltip="Removes a pending call from the connection, such that the pending reply will be ignored.">_dbus_connection_remove_pending_call</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending);</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="644" refid="group__DBusPendingCall_1gacbf33ae8a1cc125628f9ea44d175c159" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1gacbf33ae8a1cc125628f9ea44d175c159" kindref="member" tooltip="Checks whether the pending call has received a reply yet, or not.">dbus_pending_call_get_completed</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>completed;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" kindref="member" tooltip="Internals of DBusPendingCall.">CONNECTION_LOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>completed<sp/>=<sp/>pending-&gt;<ref refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" kindref="member" tooltip="TRUE if completed.">completed</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" kindref="member" tooltip="shorter and more visible way to write _dbus_connection_unlock()">CONNECTION_UNLOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>completed;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound" tooltip="Internals of DBusMessage.">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="667" refid="group__DBusPendingCall_1ga5a738928c2369fef093ce00658903d06" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga5a738928c2369fef093ce00658903d06" kindref="member" tooltip="Gets the reply, or returns NULL if none has been received yet.">dbus_pending_call_steal_reply</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound" tooltip="Internals of DBusMessage.">DBusMessage</ref><sp/>*message;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending-&gt;<ref refid="structDBusPendingCall_1ac9b0b400f7d555e4e2b3eb1e5f4c26aa" kindref="member" tooltip="TRUE if completed.">completed</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" kindref="member" tooltip="Internals of DBusPendingCall.">CONNECTION_LOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/>pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>pending-&gt;<ref refid="structDBusPendingCall_1a30c043b7cc468ab01fce6596dac1da57" kindref="member" tooltip="Reply (after we&amp;#39;ve received it)">reply</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" kindref="member" tooltip="shorter and more visible way to write _dbus_connection_unlock()">CONNECTION_UNLOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message;</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701" refid="group__DBusPendingCall_1ga67b99f749a7f477c7b5d70f2acee5452" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga67b99f749a7f477c7b5d70f2acee5452" kindref="member" tooltip="Block until the pending call is completed.">dbus_pending_call_block</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/>*pending)</highlight></codeline>
<codeline lineno="702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnectionInternals_1gad5e725e66dc16a411544e25675fb9fba" kindref="member" tooltip="Blocks until a pending call times out or gets a reply.">_dbus_connection_block_pending_call</ref><sp/>(pending);</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="723" refid="group__DBusPendingCall_1ga95614dad0ada70e3a20d9878339e3109" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga95614dad0ada70e3a20d9878339e3109" kindref="member" tooltip="Allocates an integer ID to be used for storing application-specific data on any DBusPendingCall.">dbus_pending_call_allocate_data_slot</ref><sp/>(dbus_int32_t<sp/>*slot_p)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(slot_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusDataSlot_1ga941a12182e69c185bd27f6efbfbd0f86" kindref="member" tooltip="Allocates an integer ID to be used for storing data in a DBusDataSlotList.">_dbus_data_slot_allocator_alloc</ref><sp/>(&amp;slot_allocator,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_DBUS_LOCK_NAME<sp/>(pending_call_slots),</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot_p);</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="group__DBusPendingCall_1ga1eb6f342bba71b01266629f80be84617" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga1eb6f342bba71b01266629f80be84617" kindref="member" tooltip="Deallocates a global ID for DBusPendingCall data slots.">dbus_pending_call_free_data_slot</ref><sp/>(dbus_int32_t<sp/>*slot_p)</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(slot_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(*slot_p<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="group__DBusDataSlot_1ga059c50a24cd9fc984e918e6159841633" kindref="member" tooltip="Deallocates an ID previously allocated with _dbus_data_slot_allocator_alloc().">_dbus_data_slot_allocator_free</ref><sp/>(&amp;slot_allocator,<sp/>slot_p);</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="766" refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga9295e7e602c41c6501b69bc995907e1b" kindref="member" tooltip="Stores a pointer on a DBusPendingCall, along with an optional function to be used for freeing the dat...">dbus_pending_call_set_data</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/>*pending,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_int32_t<sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/><sp/>free_data_func)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(slot<sp/>&gt;=<sp/>0,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member" tooltip="Expands to &amp;quot;0&amp;quot;.">FALSE</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" kindref="member" tooltip="Internals of DBusPendingCall.">CONNECTION_LOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusPendingCallInternals_1ga7d4196ca35b8df842c05a02dbb71c269" kindref="member" tooltip="Stores a pointer on a DBusPendingCall, along with an optional function to be used for freeing the dat...">_dbus_pending_call_set_data_unlocked</ref><sp/>(pending,<sp/>slot,<sp/>data,<sp/>free_data_func);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" kindref="member" tooltip="shorter and more visible way to write _dbus_connection_unlock()">CONNECTION_UNLOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="792" refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" refkind="member"><highlight class="normal"><ref refid="group__DBusPendingCall_1ga5749f73b7ec7a8fe4f2e6a839e292806" kindref="member" tooltip="Retrieves data previously set with dbus_pending_call_set_data().">dbus_pending_call_get_data</ref><sp/>(<ref refid="structDBusPendingCall" kindref="compound" tooltip="Implementation details of DBusPendingCall - all fields are private.">DBusPendingCall</ref><sp/><sp/><sp/>*pending,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_int32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*res;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(pending<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member" tooltip="A null pointer, defined appropriately for C or C++.">NULL</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1ga99fcbae5b8f2ed2cc019cab85f63d4e4" kindref="member" tooltip="Internals of DBusPendingCall.">CONNECTION_LOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/><ref refid="group__DBusDataSlot_1ga43f741229f0c38788442601e2750ec66" kindref="member" tooltip="Retrieves data previously set with _dbus_data_slot_list_set_data().">_dbus_data_slot_list_get</ref><sp/>(&amp;slot_allocator,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pending-&gt;<ref refid="structDBusPendingCall_1ad1b1c044ae4f9f94b05b4a5eb2f3917a" kindref="member" tooltip="Data stored by allocated integer ID.">slot_list</ref>,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="group__DBusPendingCallInternals_1gab21a3014fa3cacf2a580e079321abc33" kindref="member" tooltip="shorter and more visible way to write _dbus_connection_unlock()">CONNECTION_UNLOCK</ref><sp/>(pending-&gt;<ref refid="structDBusPendingCall_1adaee5e70f04e503f25b8c4202fd4747f" kindref="member" tooltip="Connections we&amp;#39;re associated with.">connection</ref>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="preprocessor">#ifdef<sp/>DBUS_BUILD_TESTS</highlight></codeline>
<codeline lineno="811"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="819"><highlight class="normal">_dbus_pending_call_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_data_dir)</highlight></codeline>
<codeline lineno="820"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" tooltip="Expands to &amp;quot;1&amp;quot;.">TRUE</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_BUILD_TESTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-pending-call.c"/>
  </compounddef>
</doxygen>
