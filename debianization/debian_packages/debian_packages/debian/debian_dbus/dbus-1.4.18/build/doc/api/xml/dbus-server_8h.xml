<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="dbus-server_8h" kind="file">
    <compoundname>dbus-server.h</compoundname>
    <includes refid="dbus-errors_8h" local="no">dbus/dbus-errors.h</includes>
    <includes refid="dbus-message_8h" local="no">dbus/dbus-message.h</includes>
    <includes refid="dbus-connection_8h" local="no">dbus/dbus-connection.h</includes>
    <includes refid="dbus-protocol_8h" local="no">dbus/dbus-protocol.h</includes>
    <includedby refid="dbus-server-protected_8h" local="no">dbus-server-protected.h</includedby>
    <includedby refid="dbus-server_8c" local="yes">dbus-server.c</includedby>
    <includedby refid="dbus_8h" local="no">dbus.h</includedby>
    <incdepgraph>
      <node id="2670">
        <label>stdarg.h</label>
      </node>
      <node id="2662">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
      </node>
      <node id="2665">
        <label>stddef.h</label>
      </node>
      <node id="2661">
        <label>dbus-server.h</label>
        <link refid="dbus-server.h"/>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2668" relation="include">
        </childnode>
        <childnode refid="2671" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
      </node>
      <node id="2666">
        <label>dbus/dbus-arch-deps.h</label>
      </node>
      <node id="2663">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="2664">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="2665" relation="include">
        </childnode>
        <childnode refid="2666" relation="include">
        </childnode>
      </node>
      <node id="2672">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="2669">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
      </node>
      <node id="2667">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="2668">
        <label>dbus/dbus-message.h</label>
        <link refid="dbus-message_8h_source"/>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2666" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
      <node id="2671">
        <label>dbus/dbus-connection.h</label>
        <link refid="dbus-connection_8h_source"/>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2668" relation="include">
        </childnode>
        <childnode refid="2672" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2674">
        <label>dbus-server-protected.h</label>
        <link refid="dbus-server-protected_8h_source"/>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2677" relation="include">
        </childnode>
        <childnode refid="2680" relation="include">
        </childnode>
        <childnode refid="2684" relation="include">
        </childnode>
        <childnode refid="2685" relation="include">
        </childnode>
      </node>
      <node id="2679">
        <label>dbus-server-unix.c</label>
        <link refid="dbus-server-unix_8c_source"/>
      </node>
      <node id="2684">
        <label>dbus-server-unix.h</label>
        <link refid="dbus-server-unix_8h_source"/>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
      </node>
      <node id="2676">
        <label>dbus-server-debug-pipe.c</label>
        <link refid="dbus-server-debug-pipe_8c_source"/>
      </node>
      <node id="2675">
        <label>dbus-server-debug-pipe.h</label>
        <link refid="dbus-server-debug-pipe_8h_source"/>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2681">
        <label>dbus-server-socket.c</label>
        <link refid="dbus-server-socket_8c_source"/>
      </node>
      <node id="2680">
        <label>dbus-server-socket.h</label>
        <link refid="dbus-server-socket_8h_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2682" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
      </node>
      <node id="2682">
        <label>dbus-server-win.c</label>
        <link refid="dbus-server-win_8c_source"/>
      </node>
      <node id="2685">
        <label>dbus-server-win.h</label>
        <link refid="dbus-server-win_8h_source"/>
        <childnode refid="2682" relation="include">
        </childnode>
      </node>
      <node id="2683">
        <label>dbus-server.c</label>
        <link refid="dbus-server_8c_source"/>
      </node>
      <node id="2673">
        <label>dbus-server.h</label>
        <link refid="dbus-server.h"/>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
      </node>
      <node id="2686">
        <label>dbus.h</label>
        <link refid="dbus_8h_source"/>
      </node>
      <node id="2678">
        <label>dbus-server-launchd.c</label>
        <link refid="dbus-server-launchd_8c_source"/>
      </node>
      <node id="2677">
        <label>dbus-server-launchd.h</label>
        <link refid="dbus-server-launchd_8h_source"/>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__DBusServer_1ga39dc10dc2cbe727cf312c51b25b4341e" prot="public" static="no">
        <type>struct <ref refid="structDBusServer" kindref="compound">DBusServer</ref></type>
        <definition>DBusServer</definition>
        <argsstring></argsstring>
        <name>DBusServer</name>
        <briefdescription>
<para>An opaque object representing a server that listens for connections from other applications. </para>        </briefdescription>
        <detaileddescription>
<para>Each time a connection is made, a new <ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> is created and made available via an application-provided DBusNewConnectionFunction. The DBusNewConnectionFunction is provided with <ref refid="group__DBusServer_1gaa14d9109e04adccffd9a40460c28c53b" kindref="member">dbus_server_set_new_connection_function()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.h" line="42" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DBusServer_1ga8478cd198973f6a6cb224ec23175faa7" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(*  DBusNewConnectionFunction)(DBusServer *server, DBusConnection *new_connection, void *data)</definition>
        <argsstring>)(DBusServer *server, DBusConnection *new_connection, void *data)</argsstring>
        <name>DBusNewConnectionFunction</name>
        <briefdescription>
<para>Called when a new connection to the server is available. </para>        </briefdescription>
        <detaileddescription>
<para>Must reference and save the new connection, or close the new connection. Set with <ref refid="group__DBusServer_1gaa14d9109e04adccffd9a40460c28c53b" kindref="member">dbus_server_set_new_connection_function()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.h" line="49" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusServer_1ga4c83cf9f2c186afa97decdc25ac163d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
        <definition>DBUS_EXPORT DBusServer * dbus_server_listen</definition>
        <argsstring>(const char *address, DBusError *error)</argsstring>
        <name>dbus_server_listen</name>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Listens for new connections on the given address. </para>        </briefdescription>
        <detaileddescription>
<para>If there are multiple semicolon-separated address entries in the address, tries each one and listens on the first one that works.</para><para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> and sets error if listening fails for any reason. Otherwise returns a new <ref refid="structDBusServer" kindref="compound">DBusServer</ref>. <ref refid="group__DBusServer_1gaa14d9109e04adccffd9a40460c28c53b" kindref="member">dbus_server_set_new_connection_function()</ref>, <ref refid="group__DBusServer_1gaa5723810ea52e9f1815062fd91395892" kindref="member">dbus_server_set_watch_functions()</ref>, and <ref refid="group__DBusServer_1gacafa42ffc063a7386db40a975c32d530" kindref="member">dbus_server_set_timeout_functions()</ref> should be called immediately to render the server fully functional.</para><para>To free the server, applications must call first <ref refid="group__DBusServer_1ga1ff306fbaaa608306b0619ba5c0029a1" kindref="member">dbus_server_disconnect()</ref> and then <ref refid="group__DBusServer_1ga95d0b6cb9795b4919aa08f667807c555" kindref="member">dbus_server_unref()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of this server. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store reason for failure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="structDBusServer" kindref="compound">DBusServer</ref>, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="546" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="544" bodyend="673"/>
        <references refid="group__DBusAddress_1ga37a7009b07cf991ff07f3e86d71bf352" compoundref="dbus-address_8c" startline="189" endline="196">dbus_address_entries_free</references>
        <references refid="group__DBusAddress_1ga7e6b2572d6e637826acada01377b5487" compoundref="dbus-address_8c" startline="227" endline="230">dbus_address_entry_get_method</references>
        <references refid="group__DBusProtocol_1ga3d13424a19bb774cf3481216bf4ba366" compoundref="dbus-protocol_8h" startline="382">DBUS_ERROR_ADDRESS_IN_USE</references>
        <references refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" compoundref="dbus-protocol_8h" startline="362">DBUS_ERROR_BAD_ADDRESS</references>
        <references refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" compoundref="dbus-errors_8c" startline="211" endline="226">dbus_error_free</references>
        <references refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" compoundref="dbus-errors_8h" startline="62">DBUS_ERROR_INIT</references>
        <references refid="group__DBusErrors_1gab0ed62e9fc2685897eb2d41467c89405" compoundref="dbus-errors_8c" startline="329" endline="335">dbus_error_is_set</references>
        <references refid="group__DBusErrors_1ga0a27fb9f1af0c2bfd105d7e8622b93f4" compoundref="dbus-errors_8c" startline="279" endline="292">dbus_move_error</references>
        <references refid="group__DBusAddress_1ga3cbf5947262b79601598276c720e2098" compoundref="dbus-address_8c" startline="363" endline="573">dbus_parse_address</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="420">dbus_set_error</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1gabe1c14264ef6bf3e5fe446ab9bf8b913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
        <definition>DBUS_EXPORT DBusServer * dbus_server_ref</definition>
        <argsstring>(DBusServer *server)</argsstring>
        <name>dbus_server_ref</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Increments the reference count of a <ref refid="structDBusServer" kindref="compound">DBusServer</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the server </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="683" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="682" bodyend="708"/>
        <references refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" compoundref="dbus-sysdeps-unix_8c" startline="2375" endline="2388">_dbus_atomic_dec</references>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2354" endline="2366">_dbus_atomic_inc</references>
        <references refid="group__DBusInternalsUtils_1ga748d6ccfb8090bf9f0bf338946c8f5e2" compoundref="dbus-internals_8c" startline="870">_dbus_return_if_fail_warning_format</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="272" endline="291">_dbus_warn_check_failed</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusServer_1a7578bd99fc8aee641cbb5198cb2e7004" compoundref="dbus-server-protected_8h" startline="58">DBusServer::refcount</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1ga95d0b6cb9795b4919aa08f667807c555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_server_unref</definition>
        <argsstring>(DBusServer *server)</argsstring>
        <name>dbus_server_unref</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Decrements the reference count of a <ref refid="structDBusServer" kindref="compound">DBusServer</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Finalizes the server if the reference count reaches zero.</para><para>The server must be disconnected before the refcount reaches zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="720" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="719" bodyend="751"/>
        <references refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" compoundref="dbus-sysdeps-unix_8c" startline="2375" endline="2388">_dbus_atomic_dec</references>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2354" endline="2366">_dbus_atomic_inc</references>
        <references refid="group__DBusInternalsUtils_1ga748d6ccfb8090bf9f0bf338946c8f5e2" compoundref="dbus-internals_8c" startline="870">_dbus_return_if_fail_warning_format</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="272" endline="291">_dbus_warn_check_failed</references>
        <references refid="structDBusServer_1a7dabb30cdc09d6102810029fb56b8dfe" compoundref="dbus-server-protected_8h" startline="87">DBusServer::disconnected</references>
        <references refid="structDBusServerVTable_1acd97315e812352da38449f910775b08d" compoundref="dbus-server-protected_8h" startline="45">DBusServerVTable::finalize</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusServer_1a7578bd99fc8aee641cbb5198cb2e7004" compoundref="dbus-server-protected_8h" startline="58">DBusServer::refcount</references>
        <references refid="structDBusServer_1aa5068890fea8c7e7261b600e7256e009" compoundref="dbus-server-protected_8h" startline="59">DBusServer::vtable</references>
        <referencedby refid="group__DBusServer_1ga1ff306fbaaa608306b0619ba5c0029a1" compoundref="dbus-server_8c" startline="762" endline="790">dbus_server_disconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1ga1ff306fbaaa608306b0619ba5c0029a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_server_disconnect</definition>
        <argsstring>(DBusServer *server)</argsstring>
        <name>dbus_server_disconnect</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Releases the server&apos;s address and stops listening for new clients. </para>        </briefdescription>
        <detaileddescription>
<para>If called more than once, only the first call has an effect. Does not modify the server&apos;s reference count.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="763" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="762" bodyend="790"/>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2354" endline="2366">_dbus_atomic_inc</references>
        <references refid="group__DBusServer_1ga95d0b6cb9795b4919aa08f667807c555" compoundref="dbus-server_8c" startline="719" endline="751">dbus_server_unref</references>
        <references refid="structDBusServerVTable_1a148b105ac0a3a5ae8efbba29bf7fe676" compoundref="dbus-server-protected_8h" startline="48">DBusServerVTable::disconnect</references>
        <references refid="structDBusServer_1a7dabb30cdc09d6102810029fb56b8dfe" compoundref="dbus-server-protected_8h" startline="87">DBusServer::disconnected</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusServer_1a7578bd99fc8aee641cbb5198cb2e7004" compoundref="dbus-server-protected_8h" startline="58">DBusServer::refcount</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusServer_1aa5068890fea8c7e7261b600e7256e009" compoundref="dbus-server-protected_8h" startline="59">DBusServer::vtable</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1ga93c36d8b42a3f2a4f3706a0c3609b3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_server_get_is_connected</definition>
        <argsstring>(DBusServer *server)</argsstring>
        <name>dbus_server_get_is_connected</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the server is still listening for new connections. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="799" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="798" bodyend="809"/>
        <references refid="structDBusServer_1a7dabb30cdc09d6102810029fb56b8dfe" compoundref="dbus-server-protected_8h" startline="87">DBusServer::disconnected</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1ga63a133dc2786afed48c87127baa96927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>DBUS_EXPORT char * dbus_server_get_address</definition>
        <argsstring>(DBusServer *server)</argsstring>
        <name>dbus_server_get_address</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Returns the address of the server, as a newly-allocated string which must be freed by the caller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the address or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="820" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="819" bodyend="830"/>
        <references refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" compoundref="dbus-internals_8c" startline="480" endline="497">_dbus_strdup</references>
        <references refid="structDBusServer_1a359852bf33b3051180a9477da4d89acd" compoundref="dbus-server-protected_8h" startline="69">DBusServer::address</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1ga3b2920b3c65836113781d9dd00d1e139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>DBUS_EXPORT char * dbus_server_get_id</definition>
        <argsstring>(DBusServer *server)</argsstring>
        <name>dbus_server_get_id</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Returns the unique ID of the server, as a newly-allocated string which must be freed by the caller. </para>        </briefdescription>
        <detaileddescription>
<para>This ID is normally used by clients to tell when two <ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> would be equivalent (because the server address passed to <ref refid="group__DBusConnection_1gacd32f819820266598c6b6847dfddaf9c" kindref="member">dbus_connection_open()</ref> will have the same guid in the two cases). <ref refid="group__DBusConnection_1gacd32f819820266598c6b6847dfddaf9c" kindref="member">dbus_connection_open()</ref> can re-use an existing connection with the same ID instead of opening a new connection.</para><para>This is an ID unique to each <ref refid="structDBusServer" kindref="compound">DBusServer</ref>. Remember that a <ref refid="structDBusServer" kindref="compound">DBusServer</ref> represents only one mode of connecting, so e.g. a bus daemon can listen on multiple addresses which will mean it has multiple <ref refid="structDBusServer" kindref="compound">DBusServer</ref> each with their own ID.</para><para>The ID is not a UUID in the sense of RFC4122; the details are explained in the D-Bus specification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the id of the server or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="856" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="855" bodyend="867"/>
        <references refid="group__DBusString_1ga7e509d4f959d19d96f83250e62287b06" compoundref="dbus-string_8c" startline="729" endline="742">_dbus_string_copy_data</references>
        <references refid="structDBusServer_1a79cd5d1b25412d56b7fd41902d575794" compoundref="dbus-server-protected_8h" startline="64">DBusServer::guid_hex</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1gaa14d9109e04adccffd9a40460c28c53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_server_set_new_connection_function</definition>
        <argsstring>(DBusServer *server, DBusNewConnectionFunction function, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>dbus_server_set_new_connection_function</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="group__DBusServer_1ga8478cd198973f6a6cb224ec23175faa7" kindref="member">DBusNewConnectionFunction</ref></type>
          <declname>function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Sets a function to be used for handling new connections. </para>        </briefdescription>
        <detaileddescription>
<para>The given function is passed each new connection as the connection is created. If the new connection function increments the connection&apos;s reference count, the connection will stay alive. Otherwise, the connection will be unreferenced and closed. The new connection function may also close the connection itself, which is considered good form if the connection is not wanted.</para><para>The connection here is private in the sense of <ref refid="group__DBusConnection_1ga434e3fc7ee420fd30e2f05e57ff26b1d" kindref="member">dbus_connection_open_private()</ref>, so if the new connection function keeps a reference it must arrange for the connection to be closed. i.e. libdbus does not own this connection once the new connection function takes a reference.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>a function to handle new connections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to pass to the new connection handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to free the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="894" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="890" bodyend="911"/>
        <references refid="structDBusServer_1acfba406ae6f288887feaccc3d621d094" compoundref="dbus-server-protected_8h" startline="79">DBusServer::new_connection_data</references>
        <references refid="structDBusServer_1a5d5b68a92cf47a3eb50e5e6ec7d2ca3a" compoundref="dbus-server-protected_8h" startline="81">DBusServer::new_connection_free_data_function</references>
        <references refid="structDBusServer_1a964ff125a29a7dac02f81e1a26233ff6" compoundref="dbus-server-protected_8h" startline="77">DBusServer::new_connection_function</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusServerInternals_1ga93b5bca90e69122d5acbbeef2b4ca03e" compoundref="dbus-server_8c" startline="179" endline="204">_dbus_server_finalize_base</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1gaa5723810ea52e9f1815062fd91395892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_server_set_watch_functions</definition>
        <argsstring>(DBusServer *server, DBusAddWatchFunction add_function, DBusRemoveWatchFunction remove_function, DBusWatchToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>dbus_server_set_watch_functions</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga9188ca3fd89c957dc269dbe8601b270e" kindref="member">DBusAddWatchFunction</ref></type>
          <declname>add_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1gaaab846a872d938b27503129551ea0c62" kindref="member">DBusRemoveWatchFunction</ref></type>
          <declname>remove_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1gace13544ff3075b5fccbce896682ec6ff" kindref="member">DBusWatchToggledFunction</ref></type>
          <declname>toggled_function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Sets the watch functions for the server. </para>        </briefdescription>
        <detaileddescription>
<para>These functions are responsible for making the application&apos;s main loop aware of file descriptors that need to be monitored for events.</para><para>This function behaves exactly like <ref refid="group__DBusConnection_1gaebf031eb444b4f847606aa27daa3d8e6" kindref="member">dbus_connection_set_watch_functions()</ref>; see the documentation for that routine.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to begin monitoring a new descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remove_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to stop monitoring a descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toggled_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to notify when the watch is enabled/disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to pass to add_function and remove_function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be called to free the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure (no memory) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="936" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="930" bodyend="965"/>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="272" endline="291">_dbus_warn_check_failed</references>
        <references refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" compoundref="dbus-watch_8c" startline="260" endline="347">_dbus_watch_list_set_functions</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusServer_1a7955050967aeaf09679f8ba1f2941880" compoundref="dbus-server-protected_8h" startline="66">DBusServer::watches</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1gacafa42ffc063a7386db40a975c32d530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_server_set_timeout_functions</definition>
        <argsstring>(DBusServer *server, DBusAddTimeoutFunction add_function, DBusRemoveTimeoutFunction remove_function, DBusTimeoutToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>dbus_server_set_timeout_functions</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga01a45587090d82ee97b5042b49037a08" kindref="member">DBusAddTimeoutFunction</ref></type>
          <declname>add_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga13aae9d5981de45abca0db1717dc7daf" kindref="member">DBusRemoveTimeoutFunction</ref></type>
          <declname>remove_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga62eea9a2032ae15b6738534b93d18e86" kindref="member">DBusTimeoutToggledFunction</ref></type>
          <declname>toggled_function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Sets the timeout functions for the server. </para>        </briefdescription>
        <detaileddescription>
<para>These functions are responsible for making the application&apos;s main loop aware of timeouts.</para><para>This function behaves exactly like <ref refid="group__DBusConnection_1gab3cbc68eec427e9ce1783b25d44fe93c" kindref="member">dbus_connection_set_timeout_functions()</ref>; see the documentation for that routine.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to add a timeout. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remove_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to remove a timeout. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toggled_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to notify when the timeout is enabled/disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to pass to add_function and remove_function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be called to free the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure (no memory) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="989" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="983" bodyend="1018"/>
        <references refid="group__DBusTimeoutInternals_1ga6760d1963b870b45f855501e38b49fd9" compoundref="dbus-timeout_8c" startline="239" endline="299">_dbus_timeout_list_set_functions</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="272" endline="291">_dbus_warn_check_failed</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusServer_1afcaccd00f2392a390616c47e425bae85" compoundref="dbus-server-protected_8h" startline="67">DBusServer::timeouts</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1ga309e5f1510c74c4b221d12d874d53341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_server_set_auth_mechanisms</definition>
        <argsstring>(DBusServer *server, const char **mechanisms)</argsstring>
        <name>dbus_server_set_auth_mechanisms</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>mechanisms</declname>
        </param>
        <briefdescription>
<para>Sets the authentication mechanisms that this server offers to clients, as a <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>-terminated array of mechanism names. </para>        </briefdescription>
        <detaileddescription>
<para>This function only affects connections created <emphasis>after</emphasis> it is called. Pass <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> instead of an array to use all available mechanisms (this is the default behavior).</para><para>The D-Bus specification describes some of the supported mechanisms.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mechanisms</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>-terminated array of mechanisms </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="1036" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="1034" bodyend="1058"/>
        <references refid="group__DBusInternalsUtils_1ga53bbcbbd0b564c14c599813dde535443" compoundref="dbus-internals_8c" startline="531" endline="561">_dbus_dup_string_array</references>
        <references refid="structDBusServer_1adc1032bbed41413e5d0e01578f2bfffc" compoundref="dbus-server-protected_8h" startline="85">DBusServer::auth_mechanisms</references>
        <references refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" compoundref="dbus-memory_8c" startline="677" endline="692">dbus_free_string_array</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1ga05d280cd92ea5bb0d49bbe5b1fb1d5c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_server_allocate_data_slot</definition>
        <argsstring>(dbus_int32_t *slot_p)</argsstring>
        <name>dbus_server_allocate_data_slot</name>
        <param>
          <type>dbus_int32_t *</type>
          <declname>slot_p</declname>
        </param>
        <briefdescription>
<para>Allocates an integer ID to be used for storing application-specific data on any <ref refid="structDBusServer" kindref="compound">DBusServer</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The allocated ID may then be used with <ref refid="group__DBusServer_1gab9ecb216dc9c40b0c7d370673fb9b269" kindref="member">dbus_server_set_data()</ref> and <ref refid="group__DBusServer_1gac2bfa9f2e06c4347fefe537b233660d3" kindref="member">dbus_server_get_data()</ref>. The slot must be initialized with -1. If a nonnegative slot is passed in, the refcount is incremented on that slot, rather than creating a new slot.</para><para>The allocated slot is global, i.e. all <ref refid="structDBusServer" kindref="compound">DBusServer</ref> objects will have a slot with the given integer ID reserved.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_p</parametername>
</parameternamelist>
<parameterdescription>
<para>address of global variable storing the slot ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="1080" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="1079" bodyend="1084"/>
        <references refid="group__DBusDataSlot_1ga941a12182e69c185bd27f6efbfbd0f86" compoundref="dbus-dataslot_8c" startline="69" endline="151">_dbus_data_slot_allocator_alloc</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1gac6ebc6105e32ab38ef0ac60dec6d5bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_server_free_data_slot</definition>
        <argsstring>(dbus_int32_t *slot_p)</argsstring>
        <name>dbus_server_free_data_slot</name>
        <param>
          <type>dbus_int32_t *</type>
          <declname>slot_p</declname>
        </param>
        <briefdescription>
<para>Deallocates a global ID for server data slots. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="group__DBusServer_1gac2bfa9f2e06c4347fefe537b233660d3" kindref="member">dbus_server_get_data()</ref> and <ref refid="group__DBusServer_1gab9ecb216dc9c40b0c7d370673fb9b269" kindref="member">dbus_server_set_data()</ref> may no longer be used with this slot. Existing data stored on existing <ref refid="structDBusServer" kindref="compound">DBusServer</ref> objects will be freed when the server is finalized, but may not be retrieved (and may only be replaced if someone else reallocates the slot).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_p</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the slot to deallocate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="1099" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="1098" bodyend="1103"/>
        <references refid="group__DBusDataSlot_1ga059c50a24cd9fc984e918e6159841633" compoundref="dbus-dataslot_8c" startline="165" endline="206">_dbus_data_slot_allocator_free</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1gab9ecb216dc9c40b0c7d370673fb9b269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_server_set_data</definition>
        <argsstring>(DBusServer *server, int slot, void *data, DBusFreeFunction free_data_func)</argsstring>
        <name>dbus_server_set_data</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_func</declname>
        </param>
        <briefdescription>
<para>Stores a pointer on a <ref refid="structDBusServer" kindref="compound">DBusServer</ref>, along with an optional function to be used for freeing the data when the data is set again, or when the server is finalized. </para>        </briefdescription>
        <detaileddescription>
<para>The slot number must have been allocated with <ref refid="group__DBusServer_1ga05d280cd92ea5bb0d49bbe5b1fb1d5c2" kindref="member">dbus_server_allocate_data_slot()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to store </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_func</parametername>
</parameternamelist>
<parameterdescription>
<para>finalizer function for the data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there was enough memory to store the data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="1123" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="1119" bodyend="1148"/>
        <references refid="group__DBusDataSlot_1gad2952f9f686d96e7114fc49ab7452e1a" compoundref="dbus-dataslot_8c" startline="237" endline="286">_dbus_data_slot_list_set</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusServer_1a0601cca8307ba17d4a8bcebe48b08362" compoundref="dbus-server-protected_8h" startline="74">DBusServer::slot_list</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusServer_1gac2bfa9f2e06c4347fefe537b233660d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>DBUS_EXPORT void * dbus_server_get_data</definition>
        <argsstring>(DBusServer *server, int slot)</argsstring>
        <name>dbus_server_get_data</name>
        <param>
          <type><ref refid="structDBusServer" kindref="compound">DBusServer</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Retrieves data previously set with <ref refid="group__DBusServer_1gab9ecb216dc9c40b0c7d370673fb9b269" kindref="member">dbus_server_set_data()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The slot must still be allocated (must not have been freed).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>the server </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot to get data from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the data, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" line="1161" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.c" bodystart="1159" bodyend="1175"/>
        <references refid="group__DBusDataSlot_1ga43f741229f0c38788442601e2750ec66" compoundref="dbus-dataslot_8c" startline="298" endline="318">_dbus_data_slot_list_get</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusServer_1a0601cca8307ba17d4a8bcebe48b08362" compoundref="dbus-server-protected_8h" startline="74">DBusServer::slot_list</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-server.h<sp/>DBusServer<sp/>object</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/><sp/>Red<sp/>Hat<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(DBUS_INSIDE_DBUS_H)<sp/>&amp;&amp;<sp/>!defined<sp/>(DBUS_COMPILATION)</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#error<sp/>&quot;Only<sp/>&lt;dbus/dbus.h&gt;<sp/>can<sp/>be<sp/>included<sp/>directly,<sp/>this<sp/>file<sp/>may<sp/>disappear<sp/>or<sp/>change<sp/>contents.&quot;</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_SERVER_H</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DBUS_SERVER_H</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-errors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-message.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-connection.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-protocol.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="group__DBusMacros_1ga875146b01015e9ced22b25d76d549ab2" kindref="member" tooltip="Macro used prior to declaring functions in the D-Bus header files.">DBUS_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__DBusServer_1ga39dc10dc2cbe727cf312c51b25b4341e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__DBusServer_1ga8478cd198973f6a6cb224ec23175faa7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="group__DBusServer_1ga8478cd198973f6a6cb224ec23175faa7" kindref="member" tooltip="Called when a new connection to the server is available.">DBusNewConnectionFunction</ref>)<sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/>*server,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusConnection" kindref="compound" tooltip="Implementation details of DBusConnection.">DBusConnection</ref><sp/>*new_connection,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref>*<sp/><ref refid="group__DBusServer_1ga4c83cf9f2c186afa97decdc25ac163d8" kindref="member" tooltip="Listens for new connections on the given address.">dbus_server_listen</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*<ref refid="structDBusServer_1a359852bf33b3051180a9477da4d89acd" kindref="member" tooltip="Address this server is listening on.">address</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound" tooltip="Object representing an exception.">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref>*<sp/><ref refid="group__DBusServer_1gabe1c14264ef6bf3e5fe446ab9bf8b913" kindref="member" tooltip="Increments the reference count of a DBusServer.">dbus_server_ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/>*server);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1ga95d0b6cb9795b4919aa08f667807c555" kindref="member" tooltip="Decrements the reference count of a DBusServer.">dbus_server_unref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/>*server);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1ga1ff306fbaaa608306b0619ba5c0029a1" kindref="member" tooltip="Releases the server&amp;#39;s address and stops listening for new clients.">dbus_server_disconnect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/>*server);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusServer_1ga93c36d8b42a3f2a4f3706a0c3609b3d1" kindref="member" tooltip="Returns TRUE if the server is still listening for new connections.">dbus_server_get_is_connected</ref><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/>*server);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1ga63a133dc2786afed48c87127baa96927" kindref="member" tooltip="Returns the address of the server, as a newly-allocated string which must be freed by the caller...">dbus_server_get_address</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/>*server);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1ga3b2920b3c65836113781d9dd00d1e139" kindref="member" tooltip="Returns the unique ID of the server, as a newly-allocated string which must be freed by the caller...">dbus_server_get_id</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/>*server);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1gaa14d9109e04adccffd9a40460c28c53b" kindref="member" tooltip="Sets a function to be used for handling new connections.">dbus_server_set_new_connection_function</ref><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*server,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1ga8478cd198973f6a6cb224ec23175faa7" kindref="member" tooltip="Called when a new connection to the server is available.">DBusNewConnectionFunction</ref><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_data_function);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusServer_1gaa5723810ea52e9f1815062fd91395892" kindref="member" tooltip="Sets the watch functions for the server.">dbus_server_set_watch_functions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*server,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga9188ca3fd89c957dc269dbe8601b270e" kindref="member" tooltip="Called when libdbus needs a new watch to be monitored by the main loop.">DBusAddWatchFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_function,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1gaaab846a872d938b27503129551ea0c62" kindref="member" tooltip="Called when libdbus no longer needs a watch to be monitored by the main loop.">DBusRemoveWatchFunction</ref><sp/><sp/><sp/><sp/>remove_function,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1gace13544ff3075b5fccbce896682ec6ff" kindref="member" tooltip="Called when dbus_watch_get_enabled() may return a different value than it did before.">DBusWatchToggledFunction</ref><sp/><sp/><sp/>toggled_function,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_data_function);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusServer_1gacafa42ffc063a7386db40a975c32d530" kindref="member" tooltip="Sets the timeout functions for the server.">dbus_server_set_timeout_functions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*server,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga01a45587090d82ee97b5042b49037a08" kindref="member" tooltip="Called when libdbus needs a new timeout to be monitored by the main loop.">DBusAddTimeoutFunction</ref><sp/><sp/><sp/><sp/><sp/>add_function,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga13aae9d5981de45abca0db1717dc7daf" kindref="member" tooltip="Called when libdbus no longer needs a timeout to be monitored by the main loop.">DBusRemoveTimeoutFunction</ref><sp/><sp/>remove_function,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga62eea9a2032ae15b6738534b93d18e86" kindref="member" tooltip="Called when dbus_timeout_get_enabled() may return a different value than it did before.">DBusTimeoutToggledFunction</ref><sp/>toggled_function,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_data_function);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusServer_1ga309e5f1510c74c4b221d12d874d53341" kindref="member" tooltip="Sets the authentication mechanisms that this server offers to clients, as a NULL-terminated array of ...">dbus_server_set_auth_mechanisms</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*server,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**mechanisms);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusServer_1ga05d280cd92ea5bb0d49bbe5b1fb1d5c2" kindref="member" tooltip="Allocates an integer ID to be used for storing application-specific data on any DBusServer.">dbus_server_allocate_data_slot</ref><sp/>(dbus_int32_t<sp/><sp/><sp/><sp/><sp/>*slot_p);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1gac6ebc6105e32ab38ef0ac60dec6d5bc8" kindref="member" tooltip="Deallocates a global ID for server data slots.">dbus_server_free_data_slot</ref><sp/><sp/><sp/><sp/><sp/>(dbus_int32_t<sp/><sp/><sp/><sp/><sp/>*slot_p);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusServer_1gab9ecb216dc9c40b0c7d370673fb9b269" kindref="member" tooltip="Stores a pointer on a DBusServer, along with an optional function to be used for freeing the data whe...">dbus_server_set_data</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*server,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member" tooltip="The type of a function which frees a block of memory.">DBusFreeFunction</ref><sp/><sp/>free_data_func);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">DBUS_EXPORT</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusServer_1gac2bfa9f2e06c4347fefe537b233660d3" kindref="member" tooltip="Retrieves data previously set with dbus_server_set_data().">dbus_server_get_data</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusServer" kindref="compound" tooltip="Internals of DBusServer object.">DBusServer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*server,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="group__DBusMacros_1gae4a9263a43f8220f6e1c0fd07cf6e59a" kindref="member" tooltip="Macro used after declaring functions in the D-Bus header files.">DBUS_END_DECLS</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_SERVER_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-server.h"/>
  </compounddef>
</doxygen>
