<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="dbus-marshal-validate_8h" kind="file">
    <compoundname>dbus-marshal-validate.h</compoundname>
    <includedby refid="dbus-test_8h" local="no">dbus-test.h</includedby>
    <includedby refid="dbus-bus_8c" local="yes">dbus-bus.c</includedby>
    <includedby refid="dbus-message-internal_8h" local="no">dbus-message-internal.h</includedby>
    <includedby refid="dbus-marshal-header_8h" local="no">dbus-marshal-header.h</includedby>
    <includedby refid="dbus-marshal-validate_8c" local="yes">dbus-marshal-validate.c</includedby>
    <includedby refid="dbus-message_8c" local="yes">dbus-message.c</includedby>
    <invincdepgraph>
      <node id="1413">
        <label>dbus-spawn.c</label>
        <link refid="dbus-spawn_8c_source"/>
      </node>
      <node id="1416">
        <label>dbus-test-main.c</label>
        <link refid="dbus-test-main_8c_source"/>
      </node>
      <node id="1418">
        <label>dbus-userdb-util.c</label>
        <link refid="dbus-userdb-util_8c_source"/>
      </node>
      <node id="1436">
        <label>dbus-marshal-validate.c</label>
        <link refid="dbus-marshal-validate_8c_source"/>
      </node>
      <node id="1404">
        <label>dbus-marshal-validate.h</label>
        <link refid="dbus-marshal-validate.h"/>
        <childnode refid="1405" relation="include">
        </childnode>
        <childnode refid="1420" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
      </node>
      <node id="1428">
        <label>dbus-server-debug-pipe.c</label>
        <link refid="dbus-server-debug-pipe_8c_source"/>
      </node>
      <node id="1427">
        <label>dbus-server-debug-pipe.h</label>
        <link refid="dbus-server-debug-pipe_8h_source"/>
        <childnode refid="1428" relation="include">
        </childnode>
      </node>
      <node id="1417">
        <label>dbus-test.c</label>
        <link refid="dbus-test_8c_source"/>
      </node>
      <node id="1405">
        <label>dbus-test.h</label>
        <link refid="dbus-test_8h_source"/>
        <childnode refid="1406" relation="include">
        </childnode>
        <childnode refid="1407" relation="include">
        </childnode>
        <childnode refid="1408" relation="include">
        </childnode>
        <childnode refid="1409" relation="include">
        </childnode>
        <childnode refid="1410" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1413" relation="include">
        </childnode>
        <childnode refid="1414" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
      </node>
      <node id="1408">
        <label>dbus-internals.c</label>
        <link refid="dbus-internals_8c_source"/>
      </node>
      <node id="1430">
        <label>dbus-server-socket.c</label>
        <link refid="dbus-server-socket_8c_source"/>
      </node>
      <node id="1406">
        <label>dbus-auth-util.c</label>
        <link refid="dbus-auth-util_8c_source"/>
      </node>
      <node id="1415">
        <label>dbus-sysdeps-util.c</label>
        <link refid="dbus-sysdeps-util_8c_source"/>
      </node>
      <node id="1425">
        <label>dbus-transport.c</label>
        <link refid="dbus-transport_8c_source"/>
      </node>
      <node id="1409">
        <label>dbus-message-util.c</label>
        <link refid="dbus-message-util_8c_source"/>
      </node>
      <node id="1435">
        <label>dbus-marshal-header.c</label>
        <link refid="dbus-marshal-header_8c_source"/>
      </node>
      <node id="1434">
        <label>dbus-marshal-header.h</label>
        <link refid="dbus-marshal-header_8h_source"/>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1435" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
      </node>
      <node id="1414">
        <label>dbus-sysdeps-util-unix.c</label>
        <link refid="dbus-sysdeps-util-unix_8c_source"/>
      </node>
      <node id="1412">
        <label>dbus-spawn-win.c</label>
        <link refid="dbus-spawn-win_8c_source"/>
      </node>
      <node id="1411">
        <label>dbus-signature.c</label>
        <link refid="dbus-signature_8c_source"/>
      </node>
      <node id="1419">
        <label>dbus-userdb.c</label>
        <link refid="dbus-userdb_8c_source"/>
      </node>
      <node id="1420">
        <label>dbus-bus.c</label>
        <link refid="dbus-bus_8c_source"/>
      </node>
      <node id="1426">
        <label>dbus-transport-protected.h</label>
        <link refid="dbus-transport-protected_8h_source"/>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1431" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
      </node>
      <node id="1410">
        <label>dbus-pending-call.c</label>
        <link refid="dbus-pending-call_8c_source"/>
      </node>
      <node id="1423">
        <label>dbus-message-private.h</label>
        <link refid="dbus-message-private_8h_source"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1409" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
      </node>
      <node id="1424">
        <label>dbus-message.c</label>
        <link refid="dbus-message_8c_source"/>
      </node>
      <node id="1422">
        <label>dbus-connection.c</label>
        <link refid="dbus-connection_8c_source"/>
      </node>
      <node id="1433">
        <label>dbus-transport-win.c</label>
        <link refid="dbus-transport-win_8c_source"/>
      </node>
      <node id="1407">
        <label>dbus-credentials-util.c</label>
        <link refid="dbus-credentials-util_8c_source"/>
      </node>
      <node id="1432">
        <label>dbus-transport-unix.c</label>
        <link refid="dbus-transport-unix_8c_source"/>
      </node>
      <node id="1431">
        <label>dbus-transport-socket.c</label>
        <link refid="dbus-transport-socket_8c_source"/>
      </node>
      <node id="1429">
        <label>dbus-transport-socket.h</label>
        <link refid="dbus-transport-socket_8h_source"/>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1431" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
      </node>
      <node id="1421">
        <label>dbus-message-internal.h</label>
        <link refid="dbus-message-internal_8h_source"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1426" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dbus-marshal-validate_8h_1aafa2e0d6509df4d3c9d401c3de50083b" prot="public" static="no">
        <name>_DBUS_NEGATIVE_VALIDITY_COUNT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="51" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga6751169d8d53eb2d4b3002ebd9bd021a" prot="public" static="no">
        <name>_dbus_validate_utf8</name>
        <param><defname>s</defname></param>
        <param><defname>b</defname></param>
        <param><defname>e</defname></param>
        <initializer><ref refid="group__DBusString_1ga65f0f04b7c9371406fc87343f691e8da" kindref="member">_dbus_string_validate_utf8</ref> (s, b, e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="151" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" prot="public" static="no">
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param><defname>what</defname></param>
        <initializer><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref> _dbus_check_is_valid_##what (const char *name)</initializer>
        <briefdescription>
<para>A name check is used in _dbus_return_if_fail(), it&apos;s not suitable for validating untrusted data. </para>        </briefdescription>
        <detaileddescription>
<para>use _dbus_validate_whatever for that. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="167" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga2d30023893c9483413f63d2b8d4e1fb9" prot="public" static="no">
        <name>DEFINE_DBUS_NAME_CHECK</name>
        <param><defname>what</defname></param>
        <initializer><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref>                                                             \
_dbus_check_is_valid_##what (const char *name)                          \
{                                                                       \
  <ref refid="structDBusString" kindref="compound">DBusString</ref> str;                                                       \
                                                                        \
  if (name == <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)                                                     \
    return <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;                                                       \
                                                                        \
  <ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref> (&amp;str, name);                                 \
  return _dbus_validate_##what (&amp;str, 0,                                \
                                _dbus_string_get_length (&amp;str));        \
}</initializer>
        <briefdescription>
<para>Define a name check to be used in _dbus_return_if_fail() statements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="183" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" prot="public" static="no">
        <name>DBusValidationMode</name>
        <enumvalue id="group__DBusMarshal_1ggaf9dce059725fa793c44b219460cbbe6da8eaa5a0e49d61589e930b958fd0e6f0e" prot="public">
          <name>DBUS_VALIDATION_MODE_WE_TRUST_THIS_DATA_ABSOLUTELY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1ggaf9dce059725fa793c44b219460cbbe6dafa3061b6949cb2616b14c59d42a6cb40" prot="public">
          <name>DBUS_VALIDATION_MODE_DATA_IS_UNTRUSTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This is used rather than a bool for high visibility. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="37" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" prot="public" static="no">
        <name>DBusValidity</name>
        <briefdescription>
<para>This is primarily used in unit testing, so we can verify that each invalid message is invalid for the expected reasons. </para>        </briefdescription>
        <detaileddescription>
<para>Thus we really want a distinct enum value for every codepath leaving the validator functions. Enum values are specified manually for ease of debugging (so you can see the enum value given a printf) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="50" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" bodystart="49" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>DBusValidity _dbus_validate_signature_with_reason</definition>
        <argsstring>(const DBusString *type_str, int type_pos, int len)</argsstring>
        <name>_dbus_validate_signature_with_reason</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Verifies that the range of type_str from type_pos to type_end is a valid signature. </para>        </briefdescription>
        <detaileddescription>
<para>If this function returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, it will be safe to iterate over the signature with a types-only <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref>. The range passed in should NOT include the terminating nul/DBUS_TYPE_INVALID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where the typecodes start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of typecodes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#DBUS_VALID if valid, reason why invalid otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="54" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="51" bodyend="292"/>
        <references refid="group__DBusList_1gad99045e79db46159babe69718f343053" compoundref="dbus-list_8c" startline="247" endline="257">_dbus_list_append</references>
        <references refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" compoundref="dbus-list_8c" startline="550" endline="565">_dbus_list_clear</references>
        <references refid="group__DBusList_1gaad2ba56c77f2bba8e1e8dcb4b24542a6" compoundref="dbus-list_8c" startline="680" endline="693">_dbus_list_pop_last</references>
        <references refid="group__DBusMarshal_1gaa1bf18d3c95d4d4632fbdfe3a1d22bed" compoundref="dbus-marshal-basic_8c" startline="1280" endline="1306">_dbus_type_is_valid</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga28f099674760229e6de85a0e3c3e3e46" compoundref="dbus-protocol_8h" startline="181">DBUS_MAXIMUM_SIGNATURE_LENGTH</references>
        <references refid="group__DBusProtocol_1gaab86b8c110c95911e1c83ae4422b4018" compoundref="dbus-protocol_8h" startline="227">DBUS_MAXIMUM_TYPE_RECURSION_DEPTH</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="316" endline="324">dbus_type_is_basic</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusMarshal_1ga8d7aa58f6484d5d24f275dd65f101676" compoundref="dbus-marshal-validate_8c" startline="1198" endline="1210">_dbus_validate_signature</referencedby>
        <referencedby refid="group__DBusSignature_1ga0f4b81be4f6193c7d8da0ee214772e02" compoundref="dbus-signature_8c" startline="233" endline="250">dbus_signature_validate</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>DBusValidity _dbus_validate_body_with_reason</definition>
        <argsstring>(const DBusString *expected_signature, int expected_signature_start, int byte_order, int *bytes_remaining, const DBusString *value_str, int value_pos, int len)</argsstring>
        <name>_dbus_validate_body_with_reason</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>expected_signature</declname>
        </param>
        <param>
          <type>int</type>
          <declname>expected_signature_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bytes_remaining</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Verifies that the range of value_str from value_pos to value_end is a legitimate value of type expected_signature. </para>        </briefdescription>
        <detaileddescription>
<para>If this function returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, it will be safe to iterate over the values with <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref>. The signature is assumed to be already valid.</para><para>If bytes_remaining is not <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, then leftover bytes will be stored there and #DBUS_VALID returned. If it is <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, then #DBUS_INVALID_TOO_MUCH_DATA will be returned if bytes are left over.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expected_signature</parametername>
</parameternamelist>
<parameterdescription>
<para>the expected types in the value_str </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expected_signature_start</parametername>
</parameternamelist>
<parameterdescription>
<para>where in expected_signature is the signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_remaining</parametername>
</parameternamelist>
<parameterdescription>
<para>place to store leftover bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where the values start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of values after value_pos </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#DBUS_VALID if valid, reason why invalid otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="710" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="703" bodyend="747"/>
        <references refid="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" compoundref="dbus-marshal-recursive_8c" startline="748" endline="762">_dbus_type_reader_init_types_only</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="954" endline="1172">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf556cf614f291d931deb07fdeb74369f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * _dbus_validity_to_error_message</definition>
        <argsstring>(DBusValidity validity)</argsstring>
        <name>_dbus_validity_to_error_message</name>
        <param>
          <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
          <declname>validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="838" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="837" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga616ba4a0280b10222930aedadb7ea8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_path</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_path</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid object path name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>Part of the validation ensures that the object path contains only ASCII.</para><para><xrefsect id="todo_1_todo000017"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000018"><xreftitle>Todo</xreftitle><xrefdescription><para>change spec to disallow more things, such as spaces in the path name</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="788" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="785" bodyend="834"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1ga11d63128bf5c1b7e0164be7072c6c6c7" compoundref="dbus-marshal-validate_8c" startline="762">VALID_NAME_CHARACTER</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_interface</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_interface</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid interface name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction and an ASCII subset, see the specification.</para><para><xrefsect id="todo_1_todo000019"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="924" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="921" bodyend="981"/>
        <references refid="group__DBusProtocol_1ga80186ac58d031d83127d1ad6644b0011" compoundref="dbus-protocol_8h" startline="178">DBUS_MAXIMUM_NAME_LENGTH</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1ga8eb3b26eec8ebfeef410caa4acc9570d" compoundref="dbus-marshal-validate_8c" startline="753">VALID_INITIAL_NAME_CHARACTER</references>
        <references refid="group__DBusMarshal_1ga11d63128bf5c1b7e0164be7072c6c6c7" compoundref="dbus-marshal-validate_8c" startline="762">VALID_NAME_CHARACTER</references>
        <referencedby refid="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" compoundref="dbus-marshal-validate_8c" startline="1058" endline="1064">_dbus_validate_error_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_member</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_member</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid member name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction, etc., see the specification.</para><para><xrefsect id="todo_1_todo000020"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="1000" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="997" bodyend="1042"/>
        <references refid="group__DBusProtocol_1ga80186ac58d031d83127d1ad6644b0011" compoundref="dbus-protocol_8h" startline="178">DBUS_MAXIMUM_NAME_LENGTH</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1ga8eb3b26eec8ebfeef410caa4acc9570d" compoundref="dbus-marshal-validate_8c" startline="753">VALID_INITIAL_NAME_CHARACTER</references>
        <references refid="group__DBusMarshal_1ga11d63128bf5c1b7e0164be7072c6c6c7" compoundref="dbus-marshal-validate_8c" startline="762">VALID_NAME_CHARACTER</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_error_name</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_error_name</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid error name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction, etc., see the specification.</para><para><xrefsect id="todo_1_todo000021"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="1061" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="1058" bodyend="1064"/>
        <references refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" compoundref="dbus-marshal-validate_8c" startline="921" endline="981">_dbus_validate_interface</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_bus_name</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_bus_name</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid bus name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction, etc., see the specification.</para><para><xrefsect id="todo_1_todo000022"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="1102" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="1099" bodyend="1183"/>
        <references refid="group__DBusProtocol_1ga80186ac58d031d83127d1ad6644b0011" compoundref="dbus-protocol_8h" startline="178">DBUS_MAXIMUM_NAME_LENGTH</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1ga225bd010fa638c822271047157a880f2" compoundref="dbus-marshal-validate_8c" startline="1079">VALID_BUS_NAME_CHARACTER</references>
        <references refid="group__DBusMarshal_1ga1ec58a1d7a35131dd81c6eb99b9a2950" compoundref="dbus-marshal-validate_8c" startline="1070">VALID_INITIAL_BUS_NAME_CHARACTER</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga8d7aa58f6484d5d24f275dd65f101676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_signature</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_signature</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid message type signature in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000023"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid signature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" line="1201" bodyfile="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.c" bodystart="1198" bodyend="1210"/>
        <references refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gafc52be1357121d1ba57d2b381ce3bd33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(path)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>path</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_path() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="187"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga540ccb97245861b105db0066245957be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(interface)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>interface</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_interface() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="189"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gabc341dacc35d8243ed6350646bf8e685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(member)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>member</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_member() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="191"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac396456d8607c59950426c253f7f2b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(error_name)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>error_name</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_error_name() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="193"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1389b299c4eeeb226d819c0c97d51e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(bus_name)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>bus_name</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_bus_name() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="195"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0b23332725bff9dfa7cec49603cfb149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(signature)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>signature</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_signature() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="197"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaef0b21f97857a0333d84b84f4d98a7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(utf8)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>utf8</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_utf8() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h" line="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-marshal-validate.h<sp/><sp/>Validation<sp/>routines<sp/>for<sp/>marshaled<sp/>data</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2005<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_MARSHAL_VALIDATE_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DBUS_MARSHAL_VALIDATE_H</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="36" refid="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>DBUS_VALIDATION_MODE_WE_TRUST_THIS_DATA_ABSOLUTELY,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>DBUS_VALIDATION_MODE_DATA_IS_UNTRUSTED</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/><ref refid="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" kindref="member" tooltip="This is used rather than a bool for high visibility.">DBusValidationMode</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DBUS_NEGATIVE_VALIDITY_COUNT<sp/>4</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>DBUS_VALIDITY_UNKNOWN_OOM_ERROR<sp/>=<sp/>-4,<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>DBUS_INVALID_FOR_UNKNOWN_REASON<sp/>=<sp/>-3,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>DBUS_VALID_BUT_INCOMPLETE<sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>DBUS_VALIDITY_UNKNOWN<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>DBUS_VALID<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>DBUS_INVALID_UNKNOWN_TYPECODE<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MISSING_ARRAY_ELEMENT_TYPE<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>DBUS_INVALID_SIGNATURE_TOO_LONG<sp/>=<sp/>3,<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>one<sp/>is<sp/>impossible<sp/>right<sp/>now<sp/>since</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>you<sp/>can&apos;t<sp/>put<sp/>a<sp/>too-long<sp/>value<sp/>in<sp/>a<sp/>byte</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>DBUS_INVALID_EXCEEDED_MAXIMUM_ARRAY_RECURSION<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>DBUS_INVALID_EXCEEDED_MAXIMUM_STRUCT_RECURSION<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>DBUS_INVALID_STRUCT_ENDED_BUT_NOT_STARTED<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>DBUS_INVALID_STRUCT_STARTED_BUT_NOT_ENDED<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>DBUS_INVALID_STRUCT_HAS_NO_FIELDS<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>DBUS_INVALID_ALIGNMENT_PADDING_NOT_NUL<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BOOLEAN_NOT_ZERO_OR_ONE<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>DBUS_INVALID_NOT_ENOUGH_DATA<sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>DBUS_INVALID_TOO_MUCH_DATA<sp/>=<sp/>12,<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_BYTE_ORDER<sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_PROTOCOL_VERSION<sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_MESSAGE_TYPE<sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_SERIAL<sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>DBUS_INVALID_INSANE_FIELDS_ARRAY_LENGTH<sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>DBUS_INVALID_INSANE_BODY_LENGTH<sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MESSAGE_TOO_LONG<sp/>=<sp/>19,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>DBUS_INVALID_HEADER_FIELD_CODE<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>DBUS_INVALID_HEADER_FIELD_HAS_WRONG_TYPE<sp/>=<sp/>21,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>DBUS_INVALID_USES_LOCAL_INTERFACE<sp/>=<sp/>22,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>DBUS_INVALID_USES_LOCAL_PATH<sp/>=<sp/>23,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>DBUS_INVALID_HEADER_FIELD_APPEARS_TWICE<sp/>=<sp/>24,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_DESTINATION<sp/>=<sp/>25,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_INTERFACE<sp/>=<sp/>26,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_MEMBER<sp/>=<sp/>27,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_ERROR_NAME<sp/>=<sp/>28,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_SENDER<sp/>=<sp/>29,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MISSING_PATH<sp/>=<sp/>30,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MISSING_INTERFACE<sp/>=<sp/>31,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MISSING_MEMBER<sp/>=<sp/>32,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MISSING_ERROR_NAME<sp/>=<sp/>33,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MISSING_REPLY_SERIAL<sp/>=<sp/>34,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>DBUS_INVALID_LENGTH_OUT_OF_BOUNDS<sp/>=<sp/>35,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>DBUS_INVALID_ARRAY_LENGTH_EXCEEDS_MAXIMUM<sp/>=<sp/>36,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_PATH<sp/>=<sp/>37,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>DBUS_INVALID_SIGNATURE_LENGTH_OUT_OF_BOUNDS<sp/>=<sp/>38,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>DBUS_INVALID_BAD_UTF8_IN_STRING<sp/>=<sp/>39,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>DBUS_INVALID_ARRAY_LENGTH_INCORRECT<sp/>=<sp/>40,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>DBUS_INVALID_VARIANT_SIGNATURE_LENGTH_OUT_OF_BOUNDS<sp/>=<sp/>41,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>DBUS_INVALID_VARIANT_SIGNATURE_BAD<sp/>=<sp/>42,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>DBUS_INVALID_VARIANT_SIGNATURE_EMPTY<sp/>=<sp/>43,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>DBUS_INVALID_VARIANT_SIGNATURE_SPECIFIES_MULTIPLE_VALUES<sp/>=<sp/>44,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>DBUS_INVALID_VARIANT_SIGNATURE_MISSING_NUL<sp/>=<sp/>45,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>DBUS_INVALID_STRING_MISSING_NUL<sp/>=<sp/>46,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>DBUS_INVALID_SIGNATURE_MISSING_NUL<sp/>=<sp/>47,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>DBUS_INVALID_EXCEEDED_MAXIMUM_DICT_ENTRY_RECURSION<sp/>=<sp/>48,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>DBUS_INVALID_DICT_ENTRY_ENDED_BUT_NOT_STARTED<sp/>=<sp/>49,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>DBUS_INVALID_DICT_ENTRY_STARTED_BUT_NOT_ENDED<sp/>=<sp/>50,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>DBUS_INVALID_DICT_ENTRY_HAS_NO_FIELDS<sp/>=<sp/>51,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>DBUS_INVALID_DICT_ENTRY_HAS_ONLY_ONE_FIELD<sp/>=<sp/>52,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>DBUS_INVALID_DICT_ENTRY_HAS_TOO_MANY_FIELDS<sp/>=<sp/>53,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>DBUS_INVALID_DICT_ENTRY_NOT_INSIDE_ARRAY<sp/>=<sp/>54,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>DBUS_INVALID_DICT_KEY_MUST_BE_BASIC_TYPE<sp/>=<sp/>55,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>DBUS_INVALID_MISSING_UNIX_FDS<sp/>=<sp/>56,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>DBUS_INVALID_NESTED_TOO_DEEPLY<sp/>=<sp/>57,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>DBUS_VALIDITY_LAST</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member" tooltip="This is primarily used in unit testing, so we can verify that each invalid message is invalid for the...">DBusValidity</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member" tooltip="This is primarily used in unit testing, so we can verify that each invalid message is invalid for the...">DBusValidity</ref><sp/><ref refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" kindref="member" tooltip="Verifies that the range of type_str from type_pos to type_end is a valid signature.">_dbus_validate_signature_with_reason</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member" tooltip="This is primarily used in unit testing, so we can verify that each invalid message is invalid for the...">DBusValidity</ref><sp/><ref refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" kindref="member" tooltip="Verifies that the range of value_str from value_pos to value_end is a legitimate value of type expect...">_dbus_validate_body_with_reason</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*expected_signature,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_signature_start,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bytes_remaining,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*value_str,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_pos,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_dbus_validity_to_error_message<sp/>(<ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member" tooltip="This is primarily used in unit testing, so we can verify that each invalid message is invalid for the...">DBusValidity</ref><sp/>validity);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusMarshal_1ga616ba4a0280b10222930aedadb7ea8d9" kindref="member" tooltip="Checks that the given range of the string is a valid object path name in the D-Bus protocol...">_dbus_validate_path</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" kindref="member" tooltip="Checks that the given range of the string is a valid interface name in the D-Bus protocol.">_dbus_validate_interface</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" kindref="member" tooltip="Checks that the given range of the string is a valid member name in the D-Bus protocol.">_dbus_validate_member</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" kindref="member" tooltip="Checks that the given range of the string is a valid error name in the D-Bus protocol.">_dbus_validate_error_name</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" kindref="member" tooltip="Checks that the given range of the string is a valid bus name in the D-Bus protocol.">_dbus_validate_bus_name</ref><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member" tooltip="A boolean, valid values are TRUE and FALSE.">dbus_bool_t</ref><sp/><ref refid="group__DBusMarshal_1ga8d7aa58f6484d5d24f275dd65f101676" kindref="member" tooltip="Checks that the given range of the string is a valid message type signature in the D-Bus protocol...">_dbus_validate_signature</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>just<sp/>to<sp/>have<sp/>a<sp/>name<sp/>consistent<sp/>with<sp/>the<sp/>above:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_dbus_validate_utf8(s,b,e)<sp/>_dbus_string_validate_utf8<sp/>(s,<sp/>b,<sp/>e)</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_DISABLE_CHECKS</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Be<sp/>sure<sp/>they<sp/>don&apos;t<sp/>exist,<sp/>since<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>use<sp/>them<sp/>outside<sp/>of<sp/>checks</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>and<sp/>so<sp/>we<sp/>want<sp/>the<sp/>compile<sp/>failure.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_DBUS_NAME_CHECK(what)</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_DBUS_NAME_CHECK(what)</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!DBUS_DISABLE_CHECKS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" refkind="member"><highlight class="preprocessor">#define<sp/>DECLARE_DBUS_NAME_CHECK(what)<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor">dbus_bool_t<sp/>_dbus_check_is_valid_##what<sp/>(const<sp/>char<sp/>*name)</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="171" refid="group__DBusMarshal_1ga2d30023893c9483413f63d2b8d4e1fb9" refkind="member"><highlight class="preprocessor">#define<sp/>DEFINE_DBUS_NAME_CHECK(what)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor">dbus_bool_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor">_dbus_check_is_valid_##what<sp/>(const<sp/>char<sp/>*name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/>DBusString<sp/>str;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/>if<sp/>(name<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>FALSE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/>_dbus_string_init_const<sp/>(&amp;str,<sp/>name);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/>return<sp/>_dbus_validate_##what<sp/>(&amp;str,<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;str));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!DBUS_DISABLE_CHECKS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" kindref="member" tooltip="A name check is used in _dbus_return_if_fail(), it&amp;#39;s not suitable for validating untrusted data...">DECLARE_DBUS_NAME_CHECK</ref>(path);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><ref refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" kindref="member" tooltip="A name check is used in _dbus_return_if_fail(), it&amp;#39;s not suitable for validating untrusted data...">DECLARE_DBUS_NAME_CHECK</ref>(interface);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" kindref="member" tooltip="A name check is used in _dbus_return_if_fail(), it&amp;#39;s not suitable for validating untrusted data...">DECLARE_DBUS_NAME_CHECK</ref>(member);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" kindref="member" tooltip="A name check is used in _dbus_return_if_fail(), it&amp;#39;s not suitable for validating untrusted data...">DECLARE_DBUS_NAME_CHECK</ref>(error_name);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" kindref="member" tooltip="A name check is used in _dbus_return_if_fail(), it&amp;#39;s not suitable for validating untrusted data...">DECLARE_DBUS_NAME_CHECK</ref>(bus_name);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" kindref="member" tooltip="A name check is used in _dbus_return_if_fail(), it&amp;#39;s not suitable for validating untrusted data...">DECLARE_DBUS_NAME_CHECK</ref>(signature);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" kindref="member" tooltip="A name check is used in _dbus_return_if_fail(), it&amp;#39;s not suitable for validating untrusted data...">DECLARE_DBUS_NAME_CHECK</ref>(utf8);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_MARSHAL_VALIDATE_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/rpmuser/debian/debian_dbus/dbus-1.4.18/dbus/dbus-marshal-validate.h"/>
  </compounddef>
</doxygen>
