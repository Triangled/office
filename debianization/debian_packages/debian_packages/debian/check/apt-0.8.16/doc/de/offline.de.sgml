<!-- -*- mode: sgml; mode: fold -*- -->
<!doctype debiandoc  PUBLIC  "-//DebianDoc//DTD DebianDoc//EN"><debiandoc>
 <book>
  <titlepag>
   <title>
     APT offline verwenden
   </title>
   <author>
     <name>Jason Gunthorpe </name><email>jgg@debian.org</email>
   </author>
   <version>
     $Id: offline.sgml,v 1.8 12.02.2003 15:06:41 doogie Exp $
   </version>
   <abstract>
     Dieses Dokument beschreibt, wie APT in einer Umgebung ohne Netzwerk,
     speziell einem »Turnschuhnetzwerk«, an die Durchführung von Upgrades
     herangeht.
   </abstract>
   <copyright>
    <copyrightsummary>
      Copyright &copy; Jason Gunthorpe, 1999.
    </copyrightsummary>
    <p>
      »APT« und dieses Dokument sind freie Software. Sie können sie
      weitergeben und/oder verändern unter den Bedingungen der GNU General
      Public License, wie sie von der Free Software Foundation
      veröffentlicht wird; entweder Version 2 der Lizenz oder (optional)
      jeder späteren Version.
    </p>
    <p>
      Siehe für weitere Details auf Debian-Systemen die Datei
      /usr/share/common-licenses/GPL, die die vollständige Lizenz enthält.
    </p>
   </copyright>
  </titlepag>
  <toc detail="sect">
 
 <chapt>
  <heading>
    Einleitung
  </heading>
  <sect>
   <heading>
     Übersicht
   </heading>
   <p>
     Normalerweise benötigt APT direkten Zugang zu einem Debian-Archiv,
     entweder von einem lokalen Medium oder über ein Netz. Eine andere
     häufige Beanstandung ist, dass eine Debian-Maschine an einer langsamen
     Anbindung, wie einem Modem, hängt und eine andere Maschine eine sehr
     schnelle Verbindung hat, sie jedoch physisch fern sind.
   </p>
   <p>
     Die Lösung dazu besteht darin, große Wechselmedien, wie eine Zip-Platte
     oder eine SuperDisk zu benutzen. Diese Platten sind nicht groß genug,
     um ein ganzes Debian-Archiv zu speichern, können aber leicht eine
     Untermenge aufnehmen, die für die meisten Anwender groß genug ist. Die
     Idee besteht darin, APT zu benutzen, um eine Liste benötigter Pakete zu
     generieren und diese dann mit einer anderen Maschine mit guter
     Verbindung auf die Platte herunterzuladen. Es ist sogar möglich, eine
     andere Debian-Maschine mit APT oder ein komplett unterschiedliches
     Betriebssystem und ein Download-Werkzeug wie Wget zu benutzen. Nennen
     wir die Maschine, die die Pakete herunterlädt <em>ferner Rechner</em>
     und die mit der schlechten oder fehlenden Verbindung
     <em>Zielrechner</em>.
   </p>
   <p>
     Dies wird durch kreatives Manipulieren der APT-Konfigurationsdatei
     erreicht. Die wesentliche Voraussetzung besteht darin, APT mitzuteilen,
     dass es für seine Archivdateien auf einer Platte nachsieht. Beachten
     Sie, dass diese Platte mit einem Dateisystem formatiert sein sollte,
     das mit langen Dateinamen umgehen kann, so wie ext2, fat32 oder vfat.
   </p>
  </sect>
 </chapt>
 <chapt>
  <heading>
    APT auf beiden Maschinen benutzen
  </heading>
  <sect>
   <heading>
     Übersicht
   </heading>
   <p>
     Ein verfügbares APT auf beiden Maschinen stellt die einfachste
     Konfiguration dar. Die Grundidee besteht darin, eine Kopie der
     Statusdatei auf der Platte zu platzieren und die ferne Maschine zu
     benutzen, um die neusten Paketdateien herunterzuladen und zu
     entscheiden, welche Pakete heruntergeladen werden. Die
     Plattenverzeichnisstruktur sollte so aussehen:
    <example>
  /Platte/
    Archive/
       partial/
    lists/
       partial/
    status
    sources.list
    apt.conf
</example>
   </p>
  </sect>
  <sect>
   <heading>
     Die Konfigurationsdatei
   </heading>
   <p>
     Die Konfigurationsdatei sollte APT mitteilen, dass es seine Dateien auf
     der Platte speichert und obendrein die Konfigurationsdateien auf der
     Platte benutzt. Die »sources.list« sollte genau die Sites enthalten,
     die Sie auf der fernen Maschine benutzen möchten und die Statusdatei
     sollte eine Kopie von <em>/var/lib/dpkg/status</em> vom
     <em>Zielrechner</em> sein. Bitte beachten Sie, falls Sie lokale Archive
     benutzen, dass Sie »copy«-URIs benutzen müssen. Die Syntax entspricht
     der von »file«-URIs.
   </p>
   <p>
     <em>apt.conf</em> muss die nötigen Informationen enthalten, damit APT
     die Platte benutzt:
    <example>
 APT
 {
   /* Dies ist nicht nötig, falls die beiden Maschinen die gleiche
      Architektur haben. Es teilt dem fernen APT mit, welche Architektur       die Zielmaschine hat */
   Architecture "i386";
   
   Get::Download-Only "true";
 };
 
 Dir
 {
   /* Die Platte für Statusinformationen benutzen und die Statusdatei
      umleiten von /var/lib/dpkg default */
   State "/disc/";
   State::status "status";

   // Programmzwischenspeicher werden lokal gespeichert
   Cache::archives "/disc/archives/";
   Cache "/tmp/";
   
   // Ort der Quellenliste.
   Etc "/disc/";
 }; 
</example>
     Weitere Details finden sich in der apt.conf-Handbuchseite und der
     Musterkonfigurationsdatei in
     <em>/usr/share/doc/apt/examples/apt.conf</em>.
   </p>
   <p>
     Das Erste, was auf der Zielmaschine getan werden muss, ist das
     Einhängen der Platte und das Kopieren von <em>/var/lib/dpkg/status</em>
     dorthin. Sie werden außerdem die in der Übersicht umrissenen
     Verzeichnisse <em>archives/partial/</em> und <em>lists/partial/</em>
     erstellen müssen. Dann bringen Sie die Platte zu der fernen Maschine
     und konfigurieren Sie die »sources.list«. Führen Sie das folgende aus:
    <example>
 # export APT_CONFIG="/disc/apt.conf"
 # apt-get update
 [ APT lädt die Paketdateien herunter ]
 # apt-get dist-upgrade
 [ APT lädt all die Pakete herunter, die die Zielmaschine benötigt, um ein
   Upgrade durchzuführen ]
</example>
     Der Befehl »dist-upgrade« kann durch alle anderen Standard-APT-Befehle
     ersetzt werden, insbesondere »dselect-upgrade«. Sie können sogar eine
     APT-Oberfläche, wie <em>dselect</em>, benutzen. Jedoch stellt dies ein
     Problem dar, Ihre Auswahl zurück an den lokalen Rechner zu
     kommunizieren.
   </p>
   <p>
     Nun enthält die Platte alle Indexdateien und Archive, die nötig sind,
     um ein Upgrade der Zielmaschine druchzuführen. Bringen Sie die Platte
     zurück und starten Sie:
    <example>
  # export APT_CONFIG="/disc/apt.conf"
  # apt-get check
  [ APT generiert eine lokale Kopie der Zwischenspeicherdateien ]
  # apt-get --no-d -o dir::state::status=/var/lib/dpkg/status dist-upgrade
  [ Oder irgendeinen anderen APT-Befehl ]
</example>
   </p>
   <p>
     Es ist für ordentliches Funktionieren notwendig, die Statusdatei erneut
     als die lokale anzugeben. Dies ist sehr wichtig!
   </p>
   <p>
     Wenn Sie Dselect benutzen, können Sie die sehr riskante Operation
     durchführen, disc/status auf /var/lib/dpkg/status zu kopieren, so dass
     die von Ihnen gemachte Auswahl auf der fernen Maschine aktualisiert
     wird. Es wird in höchstem Maße empfohlen, dass Leute nur auf der
     lokalen Maschine Auswahlen treffen – aber dies könnte manchmal
     unmöglich sein. Kopieren Sie die Statusdatei NICHT, falls Dpkg oder APT
     in der Zwischenzeit benutzt wurden!
   </p>
  </sect>
 </chapt>
 <chapt>
  <heading>
    APT und Wget benutzen
  </heading>
  <sect>
   <heading>
     Übersicht
   </heading>
   <p>
     <em>wget</em> ist eine populäres und portierbares Download-Werkzeug,
     das auf nahezu jeder Maschine laufen kann. Anders als die Methode oben
     wird hierfür benötigt, dass die Debian-Maschine bereits eine Liste
     verfügbarer Pakete hat.
   </p>
   <p>
     Die Grundidee besteht darin, eine Platte zu erzeugen, die nur die
     heruntergeladenen Archivdateien von der fernen Site enthält. Die wird
     durch Benutzen der apt-get-Option »--print-uris« und dem anschließenden
     Vorbereiten eines Wget-Skripts getan, um die eigentlichen Pakete
     herunterzuladen.
   </p>
  </sect>
  <sect>
   <heading>
     Betrieb
   </heading>
   <p>
     Anders als bei der vorherigen Technik werden keine speziellen
     Konfigurationsdateien benötigt. Es werden lediglich die
     Standard-APT-Befehle benutzt, um die Dateiliste zu erstellen.
    <example>
 # apt-get dist-upgrade 
 [ Antworten Sie »nein« auf gestellte Fragen, wenn Sie mit den Aktionen
   zufrieden sind ]
 # apt-get -qq --print-uris dist-upgrade > uris
 # awk '{print "wget -O " $2 " " $1}' < uris > /Platte/wget-script
</example>
     Jeder andere Befehl als »dist-upgrade« könnte hier benutzt werden,
     einschließlich »upgrade«.
   </p>
   <p>
     Die Datei /Platte/wget-script wird nun eine Liste der Wget-Befehle
     enthalten, um die erforderlichen Archive herunterzuladen. Dieses Skript
     sollte mit dem aktuellen Verzeichnis als Platteneinhängepunkt
     ausgeführt werden, so dass die Ausgabe auf die Platte gespeichert wird.
   </p>
   <p>
     Die ferne Maschine würde etwas wie das folgende tun
    <example>
  # cd /Platte
  # sh -x ./wget-script
  [ warten … Fertig ]
</example>
     Sobald die Archive heruntergeladen und die Platte zur Debian-Maschine
     zurückgekehrt ist, kann die Installation fortfahren durch Benutzung von 
    <example>
  # apt-get -o dir::cache::archives="/Platte/" dist-upgrade
</example>
     Es wird die bereits auf die Platte heruntergeladenen Archive benutzen.
   </p>
  </sect>
 </chapt>
</book>
</debiandoc>
